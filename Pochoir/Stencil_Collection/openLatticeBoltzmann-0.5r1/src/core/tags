!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ANALYSIS_FLAGS_H	analysisFlags.h	24;"	d
AnalysisFields2D	dataAnalysis2D.h	/^struct AnalysisFields2D {$/;"	s	namespace:olb
AnalysisFields2D	dataAnalysis2D.hh	/^AnalysisFields2D<T,Lattice>::AnalysisFields2D ($/;"	f	class:olb::AnalysisFields2D
AnalysisFields2D	dataAnalysis2D.hh	/^AnalysisFields2D<T,Lattice>::AnalysisFields2D(AnalysisFieldsImpl2D<T,Lattice>& impl)$/;"	f	class:olb::AnalysisFields2D
AnalysisFields3D	dataAnalysis3D.h	/^struct AnalysisFields3D {$/;"	s	namespace:olb
AnalysisFields3D	dataAnalysis3D.hh	/^AnalysisFields3D<T,Lattice>::AnalysisFields3D ($/;"	f	class:olb::AnalysisFields3D
AnalysisFields3D	dataAnalysis3D.hh	/^AnalysisFields3D<T,Lattice>::AnalysisFields3D(AnalysisFieldsImpl3D<T,Lattice>& impl)$/;"	f	class:olb::AnalysisFields3D
AnalysisFieldsImpl2D	dataAnalysis2D.h	/^struct AnalysisFieldsImpl2D {$/;"	s	namespace:olb
AnalysisFieldsImpl2D	dataAnalysis2D.hh	/^AnalysisFieldsImpl2D<T,Lattice>::AnalysisFieldsImpl2D(int nx, int ny)$/;"	f	class:olb::AnalysisFieldsImpl2D
AnalysisFieldsImpl3D	dataAnalysis3D.h	/^struct AnalysisFieldsImpl3D {$/;"	s	namespace:olb
AnalysisFieldsImpl3D	dataAnalysis3D.hh	/^AnalysisFieldsImpl3D<T,Lattice>::AnalysisFieldsImpl3D(int nx, int ny, int nz)$/;"	f	class:olb::AnalysisFieldsImpl3D
AnalysisFlags2D	analysisFlags.h	/^struct AnalysisFlags2D {$/;"	s	namespace:olb
AnalysisFlags3D	analysisFlags.h	/^struct AnalysisFlags3D {$/;"	s	namespace:olb
AverageReduction	dataReductions.h	/^    AverageReduction() : average(neutralElement), weight(T()) { }$/;"	f	class:olb::AverageReduction
AverageReduction	dataReductions.h	/^class AverageReduction : public DataReduction<T> {$/;"	c	namespace:olb
BGKdynamics	dynamics.h	/^class BGKdynamics : public BasicDynamics<T,Lattice> {$/;"	c	namespace:olb
BGKdynamics	dynamics.hh	/^BGKdynamics<T,Lattice>::BGKdynamics ($/;"	f	class:olb::BGKdynamics
BLOCK_LATTICE_2D_H	blockLattice2D.h	27;"	d
BLOCK_LATTICE_2D_HH	blockLattice2D.hh	28;"	d
BLOCK_LATTICE_3D_H	blockLattice3D.h	27;"	d
BLOCK_LATTICE_3D_HH	blockLattice3D.hh	28;"	d
BLOCK_LATTICE_VIEW_2D_H	blockLatticeView2D.h	27;"	d
BLOCK_LATTICE_VIEW_2D_HH	blockLatticeView2D.hh	27;"	d
BLOCK_LATTICE_VIEW_3D_H	blockLatticeView3D.h	28;"	d
BLOCK_LATTICE_VIEW_3D_HH	blockLatticeView3D.hh	27;"	d
BLOCK_STRUCTURE_2D_H	blockStructure2D.h	27;"	d
BLOCK_STRUCTURE_3D_H	blockStructure3D.h	27;"	d
BOUNDARY_CONDITION_2D_H	boundaryCondition2D.h	26;"	d
BOUNDARY_CONDITION_2D_HH	boundaryCondition2D.hh	27;"	d
BOUNDARY_CONDITION_3D_H	boundaryCondition3D.h	26;"	d
BOUNDARY_CONDITION_3D_HH	boundaryCondition3D.hh	27;"	d
BOUNDARY_INSTANTIATOR_2D_H	boundaryInstantiator2D.h	25;"	d
BOUNDARY_INSTANTIATOR_3D_H	boundaryInstantiator3D.h	25;"	d
BOUNDARY_POST_PROCESSORS_3D_H	boundaryPostProcessors3D.h	27;"	d
BOUNDARY_POST_PROCESSORS_3D_HH	boundaryPostProcessors3D.hh	24;"	d
BaseDescriptor	latticeDescriptors.h	/^        typedef D2Q9DescriptorBase<T> BaseDescriptor;$/;"	t	struct:olb::descriptors::D2Q9DescriptorBase
BaseDescriptor	latticeDescriptors.h	/^        typedef D3Q13DescriptorBase<T> BaseDescriptor;$/;"	t	struct:olb::descriptors::D3Q13DescriptorBase
BaseDescriptor	latticeDescriptors.h	/^        typedef D3Q15DescriptorBase<T> BaseDescriptor;$/;"	t	struct:olb::descriptors::D3Q15DescriptorBase
BaseDescriptor	latticeDescriptors.h	/^        typedef D3Q19DescriptorBase<T> BaseDescriptor;$/;"	t	struct:olb::descriptors::D3Q19DescriptorBase
BaseDescriptor	latticeDescriptors.h	/^        typedef D3Q27DescriptorBase<T> BaseDescriptor;$/;"	t	struct:olb::descriptors::D3Q27DescriptorBase
BasicDirichletBM	momentaOnBoundaries.h	/^class BasicDirichletBM$/;"	c	namespace:olb
BasicDynamics	dynamics.h	/^class BasicDynamics : public Dynamics<T,Lattice> {$/;"	c	namespace:olb
BasicDynamics	dynamics.hh	/^BasicDynamics<T,Lattice>::BasicDynamics(Momenta<T,Lattice>& momenta_)$/;"	f	class:olb::BasicDynamics
BlockLattice2D	blockLattice2D.h	/^class BlockLattice2D : public BlockStructure2D<T,Lattice> {$/;"	c	namespace:olb
BlockLattice2D	blockLattice2D.hh	/^BlockLattice2D<T,Lattice>::BlockLattice2D(BlockLattice2D<T,Lattice> const& rhs)$/;"	f	class:olb::BlockLattice2D
BlockLattice2D	blockLattice2D.hh	/^BlockLattice2D<T,Lattice>::BlockLattice2D(int nx_, int ny_)$/;"	f	class:olb::BlockLattice2D
BlockLattice3D	blockLattice3D.h	/^class BlockLattice3D : public BlockStructure3D<T,Lattice> {$/;"	c	namespace:olb
BlockLattice3D	blockLattice3D.hh	/^BlockLattice3D<T,Lattice>::BlockLattice3D(BlockLattice3D<T,Lattice> const& rhs)$/;"	f	class:olb::BlockLattice3D
BlockLattice3D	blockLattice3D.hh	/^BlockLattice3D<T,Lattice>::BlockLattice3D(int nx_, int ny_, int nz_)$/;"	f	class:olb::BlockLattice3D
BlockLatticeSerializer2D	blockLattice2D.h	/^class BlockLatticeSerializer2D : public DataSerializer<T> {$/;"	c	namespace:olb
BlockLatticeSerializer2D	blockLattice2D.hh	/^BlockLatticeSerializer2D<T,Lattice>::BlockLatticeSerializer2D ($/;"	f	class:olb::BlockLatticeSerializer2D
BlockLatticeSerializer3D	blockLattice3D.h	/^class BlockLatticeSerializer3D : public DataSerializer<T> {$/;"	c	namespace:olb
BlockLatticeSerializer3D	blockLattice3D.hh	/^BlockLatticeSerializer3D<T,Lattice>::BlockLatticeSerializer3D ($/;"	f	class:olb::BlockLatticeSerializer3D
BlockLatticeUnSerializer2D	blockLattice2D.h	/^class BlockLatticeUnSerializer2D : public DataUnSerializer<T> {$/;"	c	namespace:olb
BlockLatticeUnSerializer2D	blockLattice2D.hh	/^BlockLatticeUnSerializer2D<T,Lattice>::BlockLatticeUnSerializer2D ($/;"	f	class:olb::BlockLatticeUnSerializer2D
BlockLatticeUnSerializer3D	blockLattice3D.h	/^class BlockLatticeUnSerializer3D : public DataUnSerializer<T> {$/;"	c	namespace:olb
BlockLatticeUnSerializer3D	blockLattice3D.hh	/^BlockLatticeUnSerializer3D<T,Lattice>::BlockLatticeUnSerializer3D ($/;"	f	class:olb::BlockLatticeUnSerializer3D
BlockLatticeView2D	blockLatticeView2D.h	/^class BlockLatticeView2D : public BlockStructure2D<T,Lattice> {$/;"	c	namespace:olb
BlockLatticeView2D	blockLatticeView2D.hh	/^BlockLatticeView2D<T,Lattice>::BlockLatticeView2D ($/;"	f	class:olb::BlockLatticeView2D
BlockLatticeView2D	blockLatticeView2D.hh	/^BlockLatticeView2D<T,Lattice>::BlockLatticeView2D(BlockLatticeView2D<T,Lattice> const& rhs)$/;"	f	class:olb::BlockLatticeView2D
BlockLatticeView3D	blockLatticeView3D.h	/^class BlockLatticeView3D : public BlockStructure3D<T,Lattice> {$/;"	c	namespace:olb
BlockLatticeView3D	blockLatticeView3D.hh	/^BlockLatticeView3D<T,Lattice>::BlockLatticeView3D ($/;"	f	class:olb::BlockLatticeView3D
BlockLatticeView3D	blockLatticeView3D.hh	/^BlockLatticeView3D<T,Lattice>::BlockLatticeView3D(BlockLatticeView3D<T,Lattice> const& rhs)$/;"	f	class:olb::BlockLatticeView3D
BlockLatticeView3D	blockLatticeView3D.hh	/^BlockLatticeView3D<T,Lattice>::BlockLatticeView3D(BlockStructure3D<T,Lattice>& originalLattice_)$/;"	f	class:olb::BlockLatticeView3D
BlockStructure2D	blockStructure2D.h	/^class BlockStructure2D : public Serializable<T>, public SpatiallyExtendedObject2D {$/;"	c	namespace:olb
BlockStructure3D	blockStructure3D.h	/^class BlockStructure3D : public Serializable<T>, public SpatiallyExtendedObject3D {$/;"	c	namespace:olb
BounceBack	dynamics.h	/^class BounceBack : public Dynamics<T,Lattice> {$/;"	c	namespace:olb
BounceBack	dynamics.hh	/^BounceBack<T,Lattice>::BounceBack(T rho_)$/;"	f	class:olb::BounceBack
BoundaryConditionInstantiator2D	boundaryInstantiator2D.h	/^BoundaryConditionInstantiator2D<T,Lattice,BoundaryManager>::BoundaryConditionInstantiator2D ($/;"	f	class:olb::BoundaryConditionInstantiator2D
BoundaryConditionInstantiator2D	boundaryInstantiator2D.h	/^class BoundaryConditionInstantiator2D : public OnLatticeBoundaryCondition2D<T,Lattice> {$/;"	c	namespace:olb
BoundaryConditionInstantiator3D	boundaryInstantiator3D.h	/^BoundaryConditionInstantiator3D<T,Lattice,BoundaryManager>::BoundaryConditionInstantiator3D ($/;"	f	class:olb::BoundaryConditionInstantiator3D
BoundaryConditionInstantiator3D	boundaryInstantiator3D.h	/^class BoundaryConditionInstantiator3D : public OnLatticeBoundaryCondition3D<T,Lattice> {$/;"	c	namespace:olb
BoundaryHelpers	lbHelpers.h	/^struct BoundaryHelpers {$/;"	s	namespace:olb
BulkMomenta	dynamics.h	/^struct BulkMomenta : public Momenta<T,Lattice> {$/;"	s	namespace:olb
CELL_H	cell.h	27;"	d
CELL_HH	cell.hh	27;"	d
Cell	cell.h	/^class Cell {$/;"	c	namespace:olb
Cell	cell.hh	/^Cell<T,Lattice>::Cell()$/;"	f	class:olb::Cell
Cell	cell.hh	/^Cell<T,Lattice>::Cell(Dynamics<T,Lattice>* dynamics_)$/;"	f	class:olb::Cell
CombinedRLBdynamics	dynamics.h	/^class CombinedRLBdynamics : public BasicDynamics<T,Lattice>$/;"	c	namespace:olb
CombinedRLBdynamics	dynamics.hh	/^CombinedRLBdynamics<T,Lattice,Dynamics>::CombinedRLBdynamics ($/;"	f	class:olb::CombinedRLBdynamics
ConstRhoBGKdynamics	dynamics.h	/^class ConstRhoBGKdynamics : public BasicDynamics<T,Lattice> {$/;"	c	namespace:olb
ConstRhoBGKdynamics	dynamics.hh	/^ConstRhoBGKdynamics<T,Lattice>::ConstRhoBGKdynamics ($/;"	f	class:olb::ConstRhoBGKdynamics
D2Q9Descriptor	latticeDescriptors.h	/^    template <typename T> struct D2Q9Descriptor$/;"	s	namespace:olb::descriptors
D2Q9DescriptorBase	latticeDescriptors.h	/^    template <typename T> struct D2Q9DescriptorBase$/;"	s	namespace:olb::descriptors
D3Q13Descriptor	latticeDescriptors.h	/^    template <typename T> struct D3Q13Descriptor$/;"	s	namespace:olb::descriptors
D3Q13DescriptorBase	latticeDescriptors.h	/^    template <typename T> struct D3Q13DescriptorBase$/;"	s	namespace:olb::descriptors
D3Q13_HELPERS_H	d3q13Helpers.h	30;"	d
D3Q13dynamics	dynamics.h	/^class D3Q13dynamics : public BasicDynamics<T,Lattice> {$/;"	c	namespace:olb
D3Q13dynamics	dynamics.hh	/^D3Q13dynamics<T,Lattice>::D3Q13dynamics ($/;"	f	class:olb::D3Q13dynamics
D3Q15Descriptor	latticeDescriptors.h	/^    template <typename T> struct D3Q15Descriptor$/;"	s	namespace:olb::descriptors
D3Q15DescriptorBase	latticeDescriptors.h	/^    template <typename T> struct D3Q15DescriptorBase$/;"	s	namespace:olb::descriptors
D3Q19Descriptor	latticeDescriptors.h	/^    template <typename T> struct D3Q19Descriptor$/;"	s	namespace:olb::descriptors
D3Q19DescriptorBase	latticeDescriptors.h	/^    template <typename T> struct D3Q19DescriptorBase$/;"	s	namespace:olb::descriptors
D3Q27Descriptor	latticeDescriptors.h	/^    template <typename T> struct D3Q27Descriptor$/;"	s	namespace:olb::descriptors
D3Q27DescriptorBase	latticeDescriptors.h	/^    template <typename T> struct D3Q27DescriptorBase$/;"	s	namespace:olb::descriptors
DATA_ANALYSIS_2D_H	dataAnalysis2D.h	28;"	d
DATA_ANALYSIS_2D_HH	dataAnalysis2D.hh	28;"	d
DATA_ANALYSIS_3D_H	dataAnalysis3D.h	28;"	d
DATA_ANALYSIS_3D_HH	dataAnalysis3D.hh	28;"	d
DATA_ANALYSIS_BASE_2D_H	dataAnalysisBase2D.h	28;"	d
DATA_ANALYSIS_BASE_3D_H	dataAnalysisBase3D.h	28;"	d
DATA_FIELDS_2D_H	dataFields2D.h	29;"	d
DATA_FIELDS_2D_HH	dataFields2D.hh	28;"	d
DATA_FIELDS_3D_H	dataFields3D.h	29;"	d
DATA_FIELDS_3D_HH	dataFields3D.hh	27;"	d
DATA_FIELD_BASE_2D_H	dataFieldBase2D.h	28;"	d
DATA_FIELD_BASE_3D_H	dataFieldBase3D.h	28;"	d
DATA_REDUCTIONS_H	dataReductions.h	28;"	d
DATA_REDUCTIONS_HH	dataReductions.hh	28;"	d
DEPS	Makefile	/^DEPS    := $(foreach file, $($(BUILDTYPE)), $(ROOT)\/$(DEPENDDIR)\/$(file).d)$/;"	m
DataAnalysis2D	dataAnalysis2D.h	/^class DataAnalysis2D : public DataAnalysisBase2D<T,Lattice> {$/;"	c	namespace:olb
DataAnalysis2D	dataAnalysis2D.hh	/^DataAnalysis2D<T,Lattice>::DataAnalysis2D(BlockStructure2D<T,Lattice> const& block_)$/;"	f	class:olb::DataAnalysis2D
DataAnalysis2D	dataAnalysis2D.hh	/^DataAnalysis2D<T,Lattice>::DataAnalysis2D(BlockStructure2D<T,Lattice> const& block_,$/;"	f	class:olb::DataAnalysis2D
DataAnalysis2D	dataAnalysis2D.hh	/^DataAnalysis2D<T,Lattice>::DataAnalysis2D(DataAnalysis2D<T,Lattice> const& rhs)$/;"	f	class:olb::DataAnalysis2D
DataAnalysis3D	dataAnalysis3D.h	/^class DataAnalysis3D : public DataAnalysisBase3D<T,Lattice> {$/;"	c	namespace:olb
DataAnalysis3D	dataAnalysis3D.hh	/^DataAnalysis3D<T,Lattice>::DataAnalysis3D ($/;"	f	class:olb::DataAnalysis3D
DataAnalysis3D	dataAnalysis3D.hh	/^DataAnalysis3D<T,Lattice>::DataAnalysis3D(BlockStructure3D<T,Lattice> const& block_,$/;"	f	class:olb::DataAnalysis3D
DataAnalysis3D	dataAnalysis3D.hh	/^DataAnalysis3D<T,Lattice>::DataAnalysis3D(DataAnalysis3D<T,Lattice> const& rhs)$/;"	f	class:olb::DataAnalysis3D
DataAnalysisBase2D	dataAnalysisBase2D.h	/^class DataAnalysisBase2D {$/;"	c	namespace:olb
DataAnalysisBase3D	dataAnalysisBase3D.h	/^class DataAnalysisBase3D {$/;"	c	namespace:olb
DataReduction	dataReductions.h	/^class DataReduction {$/;"	c	namespace:olb
DataSerializer	serializer.h	/^struct DataSerializer {$/;"	s	namespace:olb
DataUnSerializer	serializer.h	/^struct DataUnSerializer {$/;"	s	namespace:olb
DirectedGradients2D	finiteDifference2D.h	/^    struct DirectedGradients2D {$/;"	s	namespace:olb::fd
DirectedGradients2D	finiteDifference2D.h	/^    struct DirectedGradients2D<T, Lattice, direction, orientation, false> {$/;"	s	namespace:olb::fd
DirectedGradients2D	finiteDifference2D.h	/^    struct DirectedGradients2D<T, Lattice, direction, orientation, true> {$/;"	s	namespace:olb::fd
DirectedGradients3D	finiteDifference3D.h	/^    struct DirectedGradients3D {$/;"	s	namespace:olb::fd
DirectedGradients3D	finiteDifference3D.h	/^    struct DirectedGradients3D<T, Lattice, direction, orientation,$/;"	s	namespace:olb::fd
Directories	singleton.h	/^    Directories() {$/;"	f	class:olb::singleton::Directories
Directories	singleton.h	/^class Directories {$/;"	c	namespace:olb::singleton
DirichletBoundaryMomenta	momentaOnBoundaries.h	/^class DirichletBoundaryMomenta : public Momenta<T,Lattice> {$/;"	c	namespace:olb
DoubleD2Q5BlockId	multiPhysics.h	/^        DoubleD2Q5BlockId     = 32042,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleD2Q5WithForceBlockId	multiPhysics.h	/^        DoubleD2Q5WithForceBlockId = 42042,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleD2Q9BlockId	multiPhysics.h	/^        DoubleD2Q9BlockId     = 32092,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleD2Q9WithForceBlockId	multiPhysics.h	/^        DoubleD2Q9WithForceBlockId = 42092,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleD3Q13BlockId	multiPhysics.h	/^        DoubleD3Q13BlockId    = 33132,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleD3Q13WithForceBlockId	multiPhysics.h	/^        DoubleD3Q13WithForceBlockId = 43132,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleD3Q15BlockId	multiPhysics.h	/^        DoubleD3Q15BlockId    = 33152,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleD3Q15WithForceBlockId	multiPhysics.h	/^        DoubleD3Q15WithForceBlockId = 43152,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleD3Q19BlockId	multiPhysics.h	/^        DoubleD3Q19BlockId    = 33192,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleD3Q19WithForceBlockId	multiPhysics.h	/^        DoubleD3Q19WithForceBlockId = 43192,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleD3Q27BlockId	multiPhysics.h	/^        DoubleD3Q27BlockId    = 33272,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleD3Q27WithForceBlockId	multiPhysics.h	/^        DoubleD3Q27WithForceBlockId = 43272$/;"	e	enum:olb::multiPhysics::__anon8
DoubleD3Q7BlockId	multiPhysics.h	/^        DoubleD3Q7BlockId     = 33072,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleD3Q7WithForceBlockId	multiPhysics.h	/^        DoubleD3Q7WithForceBlockId = 43072,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleScalarFieldId	multiPhysics.h	/^        DoubleScalarFieldId   = 10002,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleTensorField2Id	multiPhysics.h	/^        DoubleTensorField2Id  = 20022,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleTensorField3Id	multiPhysics.h	/^        DoubleTensorField3Id  = 20032,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleTensorField4Id	multiPhysics.h	/^        DoubleTensorField4Id  = 20042,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleTensorField6Id	multiPhysics.h	/^        DoubleTensorField6Id  = 20062,$/;"	e	enum:olb::multiPhysics::__anon8
DoubleTensorField9Id	multiPhysics.h	/^        DoubleTensorField9Id  = 20092,$/;"	e	enum:olb::multiPhysics::__anon8
Dynamics	dynamics.h	/^struct Dynamics {$/;"	s	namespace:olb
EquilibriumBM	momentaOnBoundaries.h	/^class EquilibriumBM : public DirichletBoundaryMomenta<T,Lattice> {$/;"	c	namespace:olb
EquilibriumBM	momentaOnBoundaries.hh	/^EquilibriumBM<T,Lattice>::EquilibriumBM()$/;"	f	class:olb::EquilibriumBM
EquilibriumBM	momentaOnBoundaries.hh	/^EquilibriumBM<T,Lattice>::EquilibriumBM(T rho_, const T u_[Lattice<T>::d]) {$/;"	f	class:olb::EquilibriumBM
External	cell.h	/^               T, typename Lattice<T>::ExternalField > External;$/;"	t	class:olb::Cell
ExternalField	latticeDescriptors.h	/^        typedef Force2dDescriptor ExternalField;$/;"	t	struct:olb::descriptors::Force2dDescriptorBase
ExternalField	latticeDescriptors.h	/^        typedef Force3dDescriptor ExternalField;$/;"	t	struct:olb::descriptors::Force3dDescriptorBase
ExternalField	latticeDescriptors.h	/^        typedef NoExternalField ExternalField;$/;"	t	struct:olb::descriptors::NoExternalFieldBase
ExternalFieldArray	latticeDescriptors.h	/^    class ExternalFieldArray {$/;"	c	namespace:olb::descriptors
ExternalFieldArray	latticeDescriptors.h	/^    class ExternalFieldArray<T,descriptors::NoExternalField> {$/;"	c	namespace:olb::descriptors
ExternalVelocityMomenta	dynamics.h	/^struct ExternalVelocityMomenta : public Momenta<T,Lattice> {$/;"	s	namespace:olb
FD_BOUNDARIES_2D_H	boundaryPostProcessors2D.h	27;"	d
FD_BOUNDARIES_2D_HH	boundaryPostProcessors2D.hh	24;"	d
FINITE_DIFFERENCE_2D_H	finiteDifference2D.h	24;"	d
FINITE_DIFFERENCE_3D_H	finiteDifference3D.h	24;"	d
FINITE_DIFFERENCE_H	finiteDifference.h	24;"	d
FIRST_ORDER_LB_HELPERS_2D_H	firstOrderLbHelpers2D.h	27;"	d
FIRST_ORDER_LB_HELPERS_3D_H	firstOrderLbHelpers3D.h	27;"	d
FIRST_ORDER_LB_HELPERS_H	firstOrderLbHelpers.h	36;"	d
FixedVelocityBM	momentaOnBoundaries.h	/^class FixedVelocityBM : public Momenta<T,Lattice> {$/;"	c	namespace:olb
FloatD2Q5BlockId	multiPhysics.h	/^        FloatD2Q5BlockId      = 32041,$/;"	e	enum:olb::multiPhysics::__anon8
FloatD2Q5WithForceBlockId	multiPhysics.h	/^        FloatD2Q5WithForceBlockId  = 42041,$/;"	e	enum:olb::multiPhysics::__anon8
FloatD2Q9BlockId	multiPhysics.h	/^        FloatD2Q9BlockId      = 32091,$/;"	e	enum:olb::multiPhysics::__anon8
FloatD2Q9WithForceBlockId	multiPhysics.h	/^        FloatD2Q9WithForceBlockId  = 42091,$/;"	e	enum:olb::multiPhysics::__anon8
FloatD3Q13BlockId	multiPhysics.h	/^        FloatD3Q13BlockId     = 33131,$/;"	e	enum:olb::multiPhysics::__anon8
FloatD3Q13WithForceBlockId	multiPhysics.h	/^        FloatD3Q13WithForceBlockId  = 43131,$/;"	e	enum:olb::multiPhysics::__anon8
FloatD3Q15BlockId	multiPhysics.h	/^        FloatD3Q15BlockId     = 33151,$/;"	e	enum:olb::multiPhysics::__anon8
FloatD3Q15WithForceBlockId	multiPhysics.h	/^        FloatD3Q15WithForceBlockId  = 43151,$/;"	e	enum:olb::multiPhysics::__anon8
FloatD3Q19BlockId	multiPhysics.h	/^        FloatD3Q19BlockId     = 33191,$/;"	e	enum:olb::multiPhysics::__anon8
FloatD3Q19WithForceBlockId	multiPhysics.h	/^        FloatD3Q19WithForceBlockId  = 43191,$/;"	e	enum:olb::multiPhysics::__anon8
FloatD3Q27BlockId	multiPhysics.h	/^        FloatD3Q27BlockId     = 33271,$/;"	e	enum:olb::multiPhysics::__anon8
FloatD3Q27WithForceBlockId	multiPhysics.h	/^        FloatD3Q27WithForceBlockId  = 43271,$/;"	e	enum:olb::multiPhysics::__anon8
FloatD3Q7BlockId	multiPhysics.h	/^        FloatD3Q7BlockId      = 33071,$/;"	e	enum:olb::multiPhysics::__anon8
FloatD3Q7WithForceBlockId	multiPhysics.h	/^        FloatD3Q7WithForceBlockId  = 43071,$/;"	e	enum:olb::multiPhysics::__anon8
FloatScalarFieldId	multiPhysics.h	/^        FloatScalarFieldId    = 10001,$/;"	e	enum:olb::multiPhysics::__anon8
FloatTensorField2Id	multiPhysics.h	/^        FloatTensorField2Id   = 20021,$/;"	e	enum:olb::multiPhysics::__anon8
FloatTensorField3Id	multiPhysics.h	/^        FloatTensorField3Id   = 20031,$/;"	e	enum:olb::multiPhysics::__anon8
FloatTensorField4Id	multiPhysics.h	/^        FloatTensorField4Id   = 20041,$/;"	e	enum:olb::multiPhysics::__anon8
FloatTensorField6Id	multiPhysics.h	/^        FloatTensorField6Id   = 20061,$/;"	e	enum:olb::multiPhysics::__anon8
FloatTensorField9Id	multiPhysics.h	/^        FloatTensorField9Id   = 20091,$/;"	e	enum:olb::multiPhysics::__anon8
Force2dDescriptor	latticeDescriptors.h	/^    struct Force2dDescriptor {$/;"	s	namespace:olb::descriptors
Force2dDescriptorBase	latticeDescriptors.h	/^    struct Force2dDescriptorBase {$/;"	s	namespace:olb::descriptors
Force3dDescriptor	latticeDescriptors.h	/^    struct Force3dDescriptor {$/;"	s	namespace:olb::descriptors
Force3dDescriptorBase	latticeDescriptors.h	/^    struct Force3dDescriptorBase {$/;"	s	namespace:olb::descriptors
ForcedBGKdynamics	dynamics.h	/^class ForcedBGKdynamics : public BasicDynamics<T,Lattice> {$/;"	c	namespace:olb
ForcedBGKdynamics	dynamics.hh	/^ForcedBGKdynamics<T,Lattice>::ForcedBGKdynamics ($/;"	f	class:olb::ForcedBGKdynamics
ForcedD2Q9Descriptor	latticeDescriptors.h	/^    template <typename T> struct ForcedD2Q9Descriptor$/;"	s	namespace:olb::descriptors
ForcedD3Q13Descriptor	latticeDescriptors.h	/^    template <typename T> struct ForcedD3Q13Descriptor$/;"	s	namespace:olb::descriptors
ForcedD3Q15Descriptor	latticeDescriptors.h	/^    template <typename T> struct ForcedD3Q15Descriptor$/;"	s	namespace:olb::descriptors
ForcedD3Q19Descriptor	latticeDescriptors.h	/^    template <typename T> struct ForcedD3Q19Descriptor$/;"	s	namespace:olb::descriptors
ForcedD3Q27Descriptor	latticeDescriptors.h	/^    template <typename T> struct ForcedD3Q27Descriptor$/;"	s	namespace:olb::descriptors
FreeStressBM	momentaOnBoundaries.h	/^class FreeStressBM : virtual public DirichletBoundaryMomenta<T,Lattice>$/;"	c	namespace:olb
GlobalPostProcessor2D	postProcessing.h	/^struct GlobalPostProcessor2D : public PostProcessor2D<T,Lattice> {$/;"	s	namespace:olb
GlobalPostProcessor3D	postProcessing.h	/^struct GlobalPostProcessor3D : public PostProcessor3D<T,Lattice> {$/;"	s	namespace:olb
IncBGKdynamics	dynamics.h	/^class IncBGKdynamics : public BasicDynamics<T,Lattice> {$/;"	c	namespace:olb
IncBGKdynamics	dynamics.hh	/^IncBGKdynamics<T,Lattice>::IncBGKdynamics ($/;"	f	class:olb::IncBGKdynamics
IndexOrdering	serializer.h	/^namespace IndexOrdering {$/;"	n	namespace:olb
InnerCornerVelBM2D	momentaOnBoundaries2D.h	/^class InnerCornerVelBM2D : public DirichletBoundaryMomenta<T,Lattice>$/;"	c	namespace:olb
InnerCornerVelBM2D	momentaOnBoundaries2D.hh	/^InnerCornerVelBM2D<T,Lattice,normalX,normalY>::InnerCornerVelBM2D ($/;"	f	class:olb::InnerCornerVelBM2D
InnerCornerVelBM2D	momentaOnBoundaries2D.hh	/^InnerCornerVelBM2D<T,Lattice,normalX,normalY>::InnerCornerVelBM2D()$/;"	f	class:olb::InnerCornerVelBM2D
InnerCornerVelBM3D	momentaOnBoundaries3D.h	/^class InnerCornerVelBM3D : public DirichletBoundaryMomenta<T,Lattice>$/;"	c	namespace:olb
InnerCornerVelBM3D	momentaOnBoundaries3D.hh	/^InnerCornerVelBM3D<T,Lattice,normalX,normalY,normalZ>::InnerCornerVelBM3D ($/;"	f	class:olb::InnerCornerVelBM3D
InnerCornerVelBM3D	momentaOnBoundaries3D.hh	/^InnerCornerVelBM3D<T,Lattice,normalX,normalY,normalZ>::InnerCornerVelBM3D()$/;"	f	class:olb::InnerCornerVelBM3D
InnerEdgeVelBM3D	momentaOnBoundaries3D.h	/^class InnerEdgeVelBM3D : public DirichletBoundaryMomenta<T,Lattice>$/;"	c	namespace:olb
InnerEdgeVelBM3D	momentaOnBoundaries3D.hh	/^    InnerEdgeVelBM3D()$/;"	f	class:olb::InnerEdgeVelBM3D
InnerEdgeVelBM3D	momentaOnBoundaries3D.hh	/^    InnerEdgeVelBM3D(const T u_[Lattice<T>::d])$/;"	f	class:olb::InnerEdgeVelBM3D
IntD2Q5BlockId	multiPhysics.h	/^        IntD2Q5BlockId        = 32040,$/;"	e	enum:olb::multiPhysics::__anon8
IntD2Q5WithForceBlockId	multiPhysics.h	/^        IntD2Q5WithForceBlockId    = 42040,$/;"	e	enum:olb::multiPhysics::__anon8
IntD2Q9BlockId	multiPhysics.h	/^        IntD2Q9BlockId        = 32090,$/;"	e	enum:olb::multiPhysics::__anon8
IntD2Q9WithForceBlockId	multiPhysics.h	/^        IntD2Q9WithForceBlockId    = 42090,$/;"	e	enum:olb::multiPhysics::__anon8
IntD3Q13BlockId	multiPhysics.h	/^        IntD3Q13BlockId       = 33130,$/;"	e	enum:olb::multiPhysics::__anon8
IntD3Q13WithForceBlockId	multiPhysics.h	/^        IntD3Q13WithForceBlockId    = 43130,$/;"	e	enum:olb::multiPhysics::__anon8
IntD3Q15BlockId	multiPhysics.h	/^        IntD3Q15BlockId       = 33150,$/;"	e	enum:olb::multiPhysics::__anon8
IntD3Q15WithForceBlockId	multiPhysics.h	/^        IntD3Q15WithForceBlockId    = 43150,$/;"	e	enum:olb::multiPhysics::__anon8
IntD3Q19BlockId	multiPhysics.h	/^        IntD3Q19BlockId       = 33190,$/;"	e	enum:olb::multiPhysics::__anon8
IntD3Q19WithForceBlockId	multiPhysics.h	/^        IntD3Q19WithForceBlockId    = 43190,$/;"	e	enum:olb::multiPhysics::__anon8
IntD3Q27BlockId	multiPhysics.h	/^        IntD3Q27BlockId       = 33270,$/;"	e	enum:olb::multiPhysics::__anon8
IntD3Q27WithForceBlockId	multiPhysics.h	/^        IntD3Q27WithForceBlockId    = 43270,$/;"	e	enum:olb::multiPhysics::__anon8
IntD3Q7BlockId	multiPhysics.h	/^        IntD3Q7BlockId        = 33070,$/;"	e	enum:olb::multiPhysics::__anon8
IntD3Q7WithForceBlockId	multiPhysics.h	/^        IntD3Q7WithForceBlockId    = 43070,$/;"	e	enum:olb::multiPhysics::__anon8
IntScalarFieldId	multiPhysics.h	/^        IntScalarFieldId      = 10000,$/;"	e	enum:olb::multiPhysics::__anon8
IntTensorField2Id	multiPhysics.h	/^        IntTensorField2Id     = 20020,$/;"	e	enum:olb::multiPhysics::__anon8
IntTensorField3Id	multiPhysics.h	/^        IntTensorField3Id     = 20030,$/;"	e	enum:olb::multiPhysics::__anon8
IntTensorField4Id	multiPhysics.h	/^        IntTensorField4Id     = 20040,$/;"	e	enum:olb::multiPhysics::__anon8
IntTensorField6Id	multiPhysics.h	/^        IntTensorField6Id     = 20060,$/;"	e	enum:olb::multiPhysics::__anon8
IntTensorField9Id	multiPhysics.h	/^        IntTensorField9Id     = 20090,$/;"	e	enum:olb::multiPhysics::__anon8
InterpolationBoundaryManager2D	boundaryCondition2D.hh	/^class InterpolationBoundaryManager2D {$/;"	c	namespace:olb
InterpolationBoundaryManager3D	boundaryCondition3D.hh	/^class InterpolationBoundaryManager3D {$/;"	c	namespace:olb
LATTICE_DESCRIPTORS_H	latticeDescriptors.h	30;"	d
LATTICE_DESCRIPTORS_HH	latticeDescriptors.hh	30;"	d
LB_DYNAMICS_H	dynamics.h	28;"	d
LB_DYNAMICS_HH	dynamics.hh	28;"	d
LB_HELPERS_2D_H	lbHelpers2D.h	29;"	d
LB_HELPERS_3D_H	lbHelpers3D.h	29;"	d
LB_HELPERS_H	lbHelpers.h	30;"	d
LBunits	units.h	/^    LBunits(T latticeU_, T Re_, int resolution_, T lx_, T ly_, T lz_=T() )$/;"	f	class:olb::LBunits
LBunits	units.h	/^class LBunits {$/;"	c	namespace:olb
LOAD_BALANCER_H	loadBalancer.h	25;"	d
Lattice	d3q13Helpers.h	/^    typedef descriptors::D3Q13Descriptor<T> Lattice;$/;"	t	struct:olb::d3q13Helpers
LatticeCouplingGenerator2D	postProcessing.h	/^class LatticeCouplingGenerator2D {$/;"	c	namespace:olb
LatticeCouplingGenerator2D	postProcessing.hh	/^LatticeCouplingGenerator2D<T,Lattice>::LatticeCouplingGenerator2D ($/;"	f	class:olb::LatticeCouplingGenerator2D
LatticeCouplingGenerator3D	postProcessing.h	/^class LatticeCouplingGenerator3D {$/;"	c	namespace:olb
LatticeCouplingGenerator3D	postProcessing.hh	/^LatticeCouplingGenerator3D<T,Lattice>::LatticeCouplingGenerator3D ($/;"	f	class:olb::LatticeCouplingGenerator3D
LatticeStatistics	postProcessing.h	/^class LatticeStatistics {$/;"	c	namespace:olb
LatticeStatistics	postProcessing.hh	/^LatticeStatistics<T>::LatticeStatistics() {$/;"	f	class:olb::LatticeStatistics
LocalPostProcessor2D	postProcessing.h	/^struct LocalPostProcessor2D : public PostProcessor2D<T,Lattice> {$/;"	s	namespace:olb
LocalPostProcessor3D	postProcessing.h	/^struct LocalPostProcessor3D : public PostProcessor3D<T,Lattice> {$/;"	s	namespace:olb
MOMENTA_ON_BOUNDARIES_2D_H	momentaOnBoundaries2D.h	27;"	d
MOMENTA_ON_BOUNDARIES_2D_HH	momentaOnBoundaries2D.hh	27;"	d
MOMENTA_ON_BOUNDARIES_3D_H	momentaOnBoundaries3D.h	27;"	d
MOMENTA_ON_BOUNDARIES_3D_HH	momentaOnBoundaries3D.hh	27;"	d
MOMENTA_ON_BOUNDARIES_H	momentaOnBoundaries.h	27;"	d
MOMENTA_ON_BOUNDARIES_HH	momentaOnBoundaries.hh	27;"	d
MULTI_PHYSICS_H	multiPhysics.h	25;"	d
MaxReduction	dataReductions.h	/^    MaxReduction() : maximum(neutralElement) { }$/;"	f	class:olb::MaxReduction
MaxReduction	dataReductions.h	/^class MaxReduction : public DataReduction<T> {$/;"	c	namespace:olb
MinReduction	dataReductions.h	/^    MinReduction() : minimum(neutralElement) { }$/;"	f	class:olb::MinReduction
MinReduction	dataReductions.h	/^class MinReduction : public DataReduction<T> {$/;"	c	namespace:olb
Momenta	dynamics.h	/^struct Momenta {$/;"	s	namespace:olb
MultiPhysicsId	multiPhysics.h	/^    MultiPhysicsId;$/;"	t	namespace:olb::multiPhysics	typeref:enum:olb::multiPhysics::__anon8
NoDynamics	dynamics.h	/^class NoDynamics : public Dynamics<T,Lattice> {$/;"	c	namespace:olb
NoExternalField	latticeDescriptors.h	/^    struct NoExternalField {$/;"	s	namespace:olb::descriptors
NoExternalFieldBase	latticeDescriptors.h	/^    struct NoExternalFieldBase {$/;"	s	namespace:olb::descriptors
NormSqrReduction	dataReductions.h	/^    NormSqrReduction() : normSqr(neutralElement), weight(T()) { }$/;"	f	class:olb::NormSqrReduction
NormSqrReduction	dataReductions.h	/^class NormSqrReduction : public DataReduction<T> {$/;"	c	namespace:olb
OBJECTS	Makefile	/^OBJECTS := $(foreach file, $($(BUILDTYPE)), $(ROOT)\/$(OBJDIR)\/$(file).o)$/;"	m
OLB_ASSERT	olbDebug.h	32;"	d
OLB_ASSERT	olbDebug.h	44;"	d
OLB_DEBUG_H	olbDebug.h	24;"	d
OLB_INIT_H	olbInit.h	27;"	d
OLB_POSTCONDITION	olbDebug.h	39;"	d
OLB_POSTCONDITION	olbDebug.h	46;"	d
OLB_PRECONDITION	olbDebug.h	38;"	d
OLB_PRECONDITION	olbDebug.h	45;"	d
OLB_STATECHECK	olbDebug.h	40;"	d
OLB_STATECHECK	olbDebug.h	47;"	d
OMP_MANAGER_H	ompManager.h	24;"	d
OnLatticeBoundaryCondition2D	boundaryCondition2D.h	/^class OnLatticeBoundaryCondition2D {$/;"	c	namespace:olb
OnLatticeBoundaryCondition3D	boundaryCondition3D.h	/^class OnLatticeBoundaryCondition3D {$/;"	c	namespace:olb
OrderingT	serializer.h	/^    typedef enum {forward, backward, memorySaving} OrderingT;$/;"	t	namespace:olb::IndexOrdering	typeref:enum:olb::IndexOrdering::__anon9
OuterVelocityCornerProcessor2D	boundaryPostProcessors2D.h	/^class OuterVelocityCornerProcessor2D : public LocalPostProcessor2D<T, Lattice> {$/;"	c	namespace:olb
OuterVelocityCornerProcessor2D	boundaryPostProcessors2D.hh	/^    OuterVelocityCornerProcessor2D(int x_, int y_)$/;"	f	class:olb::OuterVelocityCornerProcessor2D
OuterVelocityCornerProcessor3D	boundaryPostProcessors3D.h	/^class OuterVelocityCornerProcessor3D : public LocalPostProcessor3D<T,Lattice> {$/;"	c	namespace:olb
OuterVelocityCornerProcessor3D	boundaryPostProcessors3D.hh	/^    OuterVelocityCornerProcessor3D ( int x_, int y_, int z_ )$/;"	f	class:olb::OuterVelocityCornerProcessor3D
OuterVelocityCornerProcessorGenerator2D	boundaryPostProcessors2D.h	/^class OuterVelocityCornerProcessorGenerator2D : public PostProcessorGenerator2D<T, Lattice>$/;"	c	namespace:olb
OuterVelocityCornerProcessorGenerator2D	boundaryPostProcessors2D.hh	/^    OuterVelocityCornerProcessorGenerator2D(int x_, int y_)$/;"	f	class:olb::OuterVelocityCornerProcessorGenerator2D
OuterVelocityCornerProcessorGenerator3D	boundaryPostProcessors3D.h	/^class OuterVelocityCornerProcessorGenerator3D$/;"	c	namespace:olb
OuterVelocityCornerProcessorGenerator3D	boundaryPostProcessors3D.hh	/^    OuterVelocityCornerProcessorGenerator3D(int x_, int y_, int z_)$/;"	f	class:olb::OuterVelocityCornerProcessorGenerator3D
OuterVelocityEdgeProcessor3D	boundaryPostProcessors3D.h	/^class OuterVelocityEdgeProcessor3D : public LocalPostProcessor3D<T,Lattice> {$/;"	c	namespace:olb
OuterVelocityEdgeProcessor3D	boundaryPostProcessors3D.hh	/^    OuterVelocityEdgeProcessor3D(int x0_, int x1_, int y0_, int y1_, int z0_, int z1_)$/;"	f	class:olb::OuterVelocityEdgeProcessor3D
OuterVelocityEdgeProcessorGenerator3D	boundaryPostProcessors3D.h	/^class OuterVelocityEdgeProcessorGenerator3D$/;"	c	namespace:olb
OuterVelocityEdgeProcessorGenerator3D	boundaryPostProcessors3D.hh	/^    OuterVelocityEdgeProcessorGenerator3D(int x0_, int x1_, int y0_, int y1_, int z0_, int z1_)$/;"	f	class:olb::OuterVelocityEdgeProcessorGenerator3D
POST_PROCESSING_H	postProcessing.h	27;"	d
POST_PROCESSING_HH	postProcessing.hh	24;"	d
PlaneFdBoundaryProcessor3D	boundaryPostProcessors3D.h	/^class PlaneFdBoundaryProcessor3D : public LocalPostProcessor3D<T,Lattice>$/;"	c	namespace:olb
PlaneFdBoundaryProcessor3D	boundaryPostProcessors3D.hh	/^    PlaneFdBoundaryProcessor3D(int x0_, int x1_, int y0_, int y1_, int z0_, int z1_)$/;"	f	class:olb::PlaneFdBoundaryProcessor3D
PlaneFdBoundaryProcessorGenerator3D	boundaryPostProcessors3D.h	/^class PlaneFdBoundaryProcessorGenerator3D : public PostProcessorGenerator3D<T,Lattice>$/;"	c	namespace:olb
PlaneFdBoundaryProcessorGenerator3D	boundaryPostProcessors3D.hh	/^    PlaneFdBoundaryProcessorGenerator3D(int x0_, int x1_, int y0_, int y1_, int z0_, int z1_)$/;"	f	class:olb::PlaneFdBoundaryProcessorGenerator3D
PostProcVector	blockLattice2D.h	/^    typedef std::vector<PostProcessor2D<T,Lattice>*> PostProcVector;$/;"	t	class:olb::BlockLattice2D
PostProcVector	blockLattice3D.h	/^    typedef std::vector<PostProcessor3D<T,Lattice>*> PostProcVector;$/;"	t	class:olb::BlockLattice3D
PostProcessor2D	postProcessing.h	/^struct PostProcessor2D {$/;"	s	namespace:olb
PostProcessor3D	postProcessing.h	/^struct PostProcessor3D {$/;"	s	namespace:olb
PostProcessorGenerator2D	postProcessing.h	/^class PostProcessorGenerator2D {$/;"	c	namespace:olb
PostProcessorGenerator2D	postProcessing.hh	/^PostProcessorGenerator2D<T,Lattice>::PostProcessorGenerator2D ($/;"	f	class:olb::PostProcessorGenerator2D
PostProcessorGenerator3D	postProcessing.h	/^class PostProcessorGenerator3D {$/;"	c	namespace:olb
PostProcessorGenerator3D	postProcessing.hh	/^PostProcessorGenerator3D<T,Lattice>::PostProcessorGenerator3D ($/;"	f	class:olb::PostProcessorGenerator3D
PressureBM	momentaOnBoundaries.h	/^class PressureBM : virtual public DirichletBoundaryMomenta<T,Lattice> {$/;"	c	namespace:olb
PressureBM	momentaOnBoundaries.hh	/^    PressureBM(const T values_[Lattice<T>::d])$/;"	f	class:olb::PressureBM
PressureBM	momentaOnBoundaries.hh	/^PressureBM<T,Lattice,direction,orientation>::PressureBM()$/;"	f	class:olb::PressureBM
RLBdynamics	dynamics.h	/^class RLBdynamics : public BasicDynamics<T,Lattice> {$/;"	c	namespace:olb
RLBdynamics	dynamics.hh	/^RLBdynamics<T,Lattice>::RLBdynamics ($/;"	f	class:olb::RLBdynamics
ROOT	Makefile	/^ROOT    := ..\/..$/;"	m
Re	units.h	/^    T latticeU, Re;$/;"	m	class:olb::LBunits
Reductor	postProcessing.h	/^struct Reductor {$/;"	s	namespace:olb
RegularizedBM	momentaOnBoundaries.h	/^class RegularizedBM : virtual public DirichletBoundaryMomenta<T,Lattice> {$/;"	c	namespace:olb
RegularizedBoundaryManager2D	boundaryCondition2D.hh	/^class RegularizedBoundaryManager2D {$/;"	c	namespace:olb
RegularizedBoundaryManager3D	boundaryCondition3D.hh	/^class RegularizedBoundaryManager3D {$/;"	c	namespace:olb
RegularizedPressureBM	momentaOnBoundaries.h	/^    RegularizedPressureBM() { }$/;"	f	class:olb::RegularizedPressureBM
RegularizedPressureBM	momentaOnBoundaries.h	/^    RegularizedPressureBM(const T values_[Lattice<T>::d])$/;"	f	class:olb::RegularizedPressureBM
RegularizedPressureBM	momentaOnBoundaries.h	/^class RegularizedPressureBM$/;"	c	namespace:olb
RegularizedVelocityBM	momentaOnBoundaries.h	/^    RegularizedVelocityBM() { }$/;"	f	class:olb::RegularizedVelocityBM
RegularizedVelocityBM	momentaOnBoundaries.h	/^    RegularizedVelocityBM(const T u_[Lattice<T>::d])$/;"	f	class:olb::RegularizedVelocityBM
RegularizedVelocityBM	momentaOnBoundaries.h	/^class RegularizedVelocityBM$/;"	c	namespace:olb
SERIALIZER_H	serializer.h	25;"	d
SERIALIZER_HH	serializer.hh	25;"	d
SIMULATION_SETUP_2D_H	simulationSetup2D.h	24;"	d
SIMULATION_SETUP_2D_HH	simulationSetup2D.hh	24;"	d
SIMULATION_SETUP_3D_H	simulationSetup3D.h	24;"	d
SIMULATION_SETUP_3D_HH	simulationSetup3D.hh	24;"	d
SINGLETON_H	singleton.h	27;"	d
SPATIALLY_EXTENDED_OBJECT_2D_H	spatiallyExtendedObject2D.h	25;"	d
SPATIALLY_EXTENDED_OBJECT_3D_H	spatiallyExtendedObject3D.h	25;"	d
ScalarField2D	dataFields2D.h	/^class ScalarField2D : public ScalarFieldBase2D<T> {$/;"	c	namespace:olb
ScalarField2D	dataFields2D.hh	/^ScalarField2D<T>::ScalarField2D(ScalarField2D<T> const& rhs) $/;"	f	class:olb::ScalarField2D
ScalarField2D	dataFields2D.hh	/^ScalarField2D<T>::ScalarField2D(int nx_, int ny_)$/;"	f	class:olb::ScalarField2D
ScalarField3D	dataFields3D.h	/^class ScalarField3D : public ScalarFieldBase3D<T> {$/;"	c	namespace:olb
ScalarField3D	dataFields3D.hh	/^ScalarField3D<T>::ScalarField3D(ScalarField3D<T> const& rhs)$/;"	f	class:olb::ScalarField3D
ScalarField3D	dataFields3D.hh	/^ScalarField3D<T>::ScalarField3D(int nx_, int ny_, int nz_)$/;"	f	class:olb::ScalarField3D
ScalarFieldBase2D	dataFieldBase2D.h	/^class ScalarFieldBase2D : public Serializable<T>, public SpatiallyExtendedObject2D {$/;"	c	namespace:olb
ScalarFieldBase3D	dataFieldBase3D.h	/^class ScalarFieldBase3D : public Serializable<T>, public SpatiallyExtendedObject3D {$/;"	c	namespace:olb
ScalingSerializer	serializer.h	/^class ScalingSerializer : public DataSerializer<T> {$/;"	c	namespace:olb
ScalingSerializer	serializer.hh	/^ScalingSerializer<T>::ScalingSerializer(DataSerializer<T> const& baseSerializer_, T scalingFactor_)$/;"	f	class:olb::ScalingSerializer
SequentialScalarFieldSerializer2D	dataFields2D.h	/^class SequentialScalarFieldSerializer2D : public DataSerializer<T> {$/;"	c	namespace:olb
SequentialScalarFieldSerializer2D	dataFields2D.hh	/^SequentialScalarFieldSerializer2D<T>::SequentialScalarFieldSerializer2D ($/;"	f	class:olb::SequentialScalarFieldSerializer2D
SequentialScalarFieldSerializer3D	dataFields3D.h	/^class SequentialScalarFieldSerializer3D : public DataSerializer<T> {$/;"	c	namespace:olb
SequentialScalarFieldSerializer3D	dataFields3D.hh	/^SequentialScalarFieldSerializer3D<T>::SequentialScalarFieldSerializer3D ($/;"	f	class:olb::SequentialScalarFieldSerializer3D
SequentialScalarFieldUnSerializer2D	dataFields2D.h	/^class SequentialScalarFieldUnSerializer2D : public DataUnSerializer<T> {$/;"	c	namespace:olb
SequentialScalarFieldUnSerializer2D	dataFields2D.hh	/^SequentialScalarFieldUnSerializer2D<T>::SequentialScalarFieldUnSerializer2D ($/;"	f	class:olb::SequentialScalarFieldUnSerializer2D
SequentialScalarFieldUnSerializer3D	dataFields3D.h	/^class SequentialScalarFieldUnSerializer3D : public DataUnSerializer<T> {$/;"	c	namespace:olb
SequentialScalarFieldUnSerializer3D	dataFields3D.hh	/^SequentialScalarFieldUnSerializer3D<T>::SequentialScalarFieldUnSerializer3D ($/;"	f	class:olb::SequentialScalarFieldUnSerializer3D
SequentialTensorFieldSerializer2D	dataFields2D.h	/^class SequentialTensorFieldSerializer2D : public DataSerializer<T> {$/;"	c	namespace:olb
SequentialTensorFieldSerializer2D	dataFields2D.hh	/^SequentialTensorFieldSerializer2D<T,nDim>::SequentialTensorFieldSerializer2D ($/;"	f	class:olb::SequentialTensorFieldSerializer2D
SequentialTensorFieldSerializer3D	dataFields3D.h	/^class SequentialTensorFieldSerializer3D : public DataSerializer<T> {$/;"	c	namespace:olb
SequentialTensorFieldSerializer3D	dataFields3D.hh	/^SequentialTensorFieldSerializer3D<T,nDim>::SequentialTensorFieldSerializer3D ($/;"	f	class:olb::SequentialTensorFieldSerializer3D
SequentialTensorFieldUnSerializer2D	dataFields2D.h	/^class SequentialTensorFieldUnSerializer2D : public DataUnSerializer<T> {$/;"	c	namespace:olb
SequentialTensorFieldUnSerializer2D	dataFields2D.hh	/^SequentialTensorFieldUnSerializer2D<T,nDim>::SequentialTensorFieldUnSerializer2D ($/;"	f	class:olb::SequentialTensorFieldUnSerializer2D
SequentialTensorFieldUnSerializer3D	dataFields3D.h	/^class SequentialTensorFieldUnSerializer3D : public DataUnSerializer<T> {$/;"	c	namespace:olb
SequentialTensorFieldUnSerializer3D	dataFields3D.hh	/^SequentialTensorFieldUnSerializer3D<T,nDim>::SequentialTensorFieldUnSerializer3D ($/;"	f	class:olb::SequentialTensorFieldUnSerializer3D
Serializable	serializer.h	/^struct Serializable {$/;"	s	namespace:olb
SpatiallyExtendedObject2D	spatiallyExtendedObject2D.h	/^struct SpatiallyExtendedObject2D {$/;"	s	namespace:olb
SpatiallyExtendedObject3D	spatiallyExtendedObject3D.h	/^struct SpatiallyExtendedObject3D {$/;"	s	namespace:olb
StatPPGenerator2D	postProcessing.h	/^class StatPPGenerator2D$/;"	c	namespace:olb
StatPPGenerator2D	postProcessing.hh	/^StatPPGenerator2D<T,Lattice>::StatPPGenerator2D()$/;"	f	class:olb::StatPPGenerator2D
StatPPGenerator3D	postProcessing.h	/^class StatPPGenerator3D$/;"	c	namespace:olb
StatPPGenerator3D	postProcessing.hh	/^StatPPGenerator3D<T,Lattice>::StatPPGenerator3D()$/;"	f	class:olb::StatPPGenerator3D
StatisticsPostProcessor2D	postProcessing.h	/^struct StatisticsPostProcessor2D : public GlobalPostProcessor2D<T,Lattice>$/;"	s	namespace:olb
StatisticsPostProcessor2D	postProcessing.hh	/^StatisticsPostProcessor2D<T,Lattice>::StatisticsPostProcessor2D()$/;"	f	class:olb::StatisticsPostProcessor2D
StatisticsPostProcessor3D	postProcessing.h	/^struct StatisticsPostProcessor3D : public GlobalPostProcessor3D<T,Lattice>$/;"	s	namespace:olb
StatisticsPostProcessor3D	postProcessing.hh	/^StatisticsPostProcessor3D<T,Lattice>::StatisticsPostProcessor3D()$/;"	f	class:olb::StatisticsPostProcessor3D
StraightFdBoundaryProcessor2D	boundaryPostProcessors2D.h	/^class StraightFdBoundaryProcessor2D : public LocalPostProcessor2D<T,Lattice>$/;"	c	namespace:olb
StraightFdBoundaryProcessor2D	boundaryPostProcessors2D.hh	/^    StraightFdBoundaryProcessor2D(int x0_, int x1_, int y0_, int y1_)$/;"	f	class:olb::StraightFdBoundaryProcessor2D
StraightFdBoundaryProcessorGenerator2D	boundaryPostProcessors2D.h	/^class StraightFdBoundaryProcessorGenerator2D : public PostProcessorGenerator2D<T,Lattice>$/;"	c	namespace:olb
StraightFdBoundaryProcessorGenerator2D	boundaryPostProcessors2D.hh	/^    StraightFdBoundaryProcessorGenerator2D(int x0_, int x1_, int y0_, int y1_)$/;"	f	class:olb::StraightFdBoundaryProcessorGenerator2D
SubIndex	util.h	/^        SubIndex() {$/;"	f	class:olb::util::SubIndex
SubIndex	util.h	/^    class SubIndex {$/;"	c	namespace:olb::util
SubIndexOutgoing	util.h	/^        SubIndexOutgoing() \/\/ finds the indexes outgoing from the walls$/;"	f	class:olb::util::SubIndexOutgoing
SubIndexOutgoing	util.h	/^    class SubIndexOutgoing {$/;"	c	namespace:olb::util
SubIndexOutgoingCorner2D	util.h	/^        SubIndexOutgoingCorner2D()$/;"	f	class:olb::util::SubIndexOutgoingCorner2D
SubIndexOutgoingCorner2D	util.h	/^    class SubIndexOutgoingCorner2D {$/;"	c	namespace:olb::util
Tensor	dataFieldBase2D.h	/^    typedef T Tensor[nDim];$/;"	t	class:olb::TensorFieldBase2D
Tensor	dataFieldBase3D.h	/^    typedef T Tensor[nDim];$/;"	t	class:olb::TensorFieldBase3D
Tensor	dataFields2D.h	/^    typedef T Tensor[nDim];$/;"	t	class:olb::TensorField2D
Tensor	dataFields3D.h	/^    typedef T Tensor[nDim];$/;"	t	class:olb::TensorField3D
TensorField2D	dataFields2D.h	/^class TensorField2D : public TensorFieldBase2D<T,nDim> {$/;"	c	namespace:olb
TensorField2D	dataFields2D.hh	/^TensorField2D<T,nDim>::TensorField2D(TensorField2D<T,nDim> const& rhs) $/;"	f	class:olb::TensorField2D
TensorField2D	dataFields2D.hh	/^TensorField2D<T,nDim>::TensorField2D(int nx_, int ny_)$/;"	f	class:olb::TensorField2D
TensorField3D	dataFields3D.h	/^class TensorField3D : public TensorFieldBase3D<T,nDim> {$/;"	c	namespace:olb
TensorField3D	dataFields3D.hh	/^TensorField3D<T,nDim>::TensorField3D(TensorField3D<T,nDim> const& rhs)$/;"	f	class:olb::TensorField3D
TensorField3D	dataFields3D.hh	/^TensorField3D<T,nDim>::TensorField3D(int nx_, int ny_, int nz_)$/;"	f	class:olb::TensorField3D
TensorFieldBase2D	dataFieldBase2D.h	/^class TensorFieldBase2D : public Serializable<T>, public SpatiallyExtendedObject2D {$/;"	c	namespace:olb
TensorFieldBase3D	dataFieldBase3D.h	/^class TensorFieldBase3D : public Serializable<T>, public SpatiallyExtendedObject3D {$/;"	c	namespace:olb
TensorVal	util.h	/^    template <typename Descriptor> struct TensorVal {$/;"	s	namespace:olb::util
TypeConversionSerializer	serializer.h	/^class TypeConversionSerializer : public DataSerializer<TConv> {$/;"	c	namespace:olb
TypeConversionSerializer	serializer.hh	/^TypeConversionSerializer<T,T>::TypeConversionSerializer ($/;"	f	class:olb::TypeConversionSerializer
TypeConversionSerializer	serializer.hh	/^TypeConversionSerializer<T,TConv>::TypeConversionSerializer ($/;"	f	class:olb::TypeConversionSerializer
TypeConversionSerializer	serializer.hh	/^class TypeConversionSerializer<T,T> : public DataSerializer<T> {$/;"	c	namespace:olb
UNITS_H	units.h	24;"	d
UTIL_H	util.h	28;"	d
UndefinedId	multiPhysics.h	/^        UndefinedId           = 0,$/;"	e	enum:olb::multiPhysics::__anon8
VelocityBM	momentaOnBoundaries.h	/^class VelocityBM : virtual public DirichletBoundaryMomenta<T,Lattice> {$/;"	c	namespace:olb
VelocityBM	momentaOnBoundaries.hh	/^    VelocityBM(const T u_[Lattice<T>::d])$/;"	f	class:olb::VelocityBM
VelocityBM	momentaOnBoundaries.hh	/^VelocityBM<T,Lattice,direction,orientation>::VelocityBM()$/;"	f	class:olb::VelocityBM
WriteCellFunctional	cell.h	/^struct WriteCellFunctional {$/;"	s	namespace:olb
_glob	loadBalancer.h	/^        std::vector<int> _glob;$/;"	m	class:olb::loadBalancer
_loc	loadBalancer.h	/^        std::map<int,int> _loc;$/;"	m	class:olb::loadBalancer
_rank	loadBalancer.h	/^        std::map<int,int> _rank;$/;"	m	class:olb::loadBalancer
addExternalForce	lbHelpers.h	/^    static void addExternalForce(Cell<T,Lattice>& cell, const T u[Lattice<T>::d], T omega, T amplitude) {$/;"	f	struct:olb::lbExternalHelpers
addExternalForce	lbHelpers.h	/^    static void addExternalForce(Cell<T,Lattice>& cell, const T u[Lattice<T>::d], T omega, T amplitude=(T)1)$/;"	f	struct:olb::lbHelpers
addExternalForce	lbHelpers2D.h	/^    static void addExternalForce($/;"	f	struct:olb::lbExternalHelpers
addExternalVelocityCorner	boundaryInstantiator2D.h	/^    addExternalVelocityCorner(int x, int y, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addExternalVelocityCorner	boundaryInstantiator3D.h	/^    addExternalVelocityCorner(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityCornerNN	boundaryInstantiator2D.h	/^    addExternalVelocityCornerNN(int x, int y, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addExternalVelocityCornerNNN	boundaryInstantiator3D.h	/^    addExternalVelocityCornerNNN(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityCornerNNP	boundaryInstantiator3D.h	/^    addExternalVelocityCornerNNP(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityCornerNP	boundaryInstantiator2D.h	/^    addExternalVelocityCornerNP(int x, int y, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addExternalVelocityCornerNPN	boundaryInstantiator3D.h	/^    addExternalVelocityCornerNPN(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityCornerNPP	boundaryInstantiator3D.h	/^    addExternalVelocityCornerNPP(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityCornerPN	boundaryInstantiator2D.h	/^    addExternalVelocityCornerPN(int x, int y, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addExternalVelocityCornerPNN	boundaryInstantiator3D.h	/^    addExternalVelocityCornerPNN(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityCornerPNP	boundaryInstantiator3D.h	/^    addExternalVelocityCornerPNP(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityCornerPP	boundaryInstantiator2D.h	/^    addExternalVelocityCornerPP(int x, int y, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addExternalVelocityCornerPPN	boundaryInstantiator3D.h	/^    addExternalVelocityCornerPPN(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityCornerPPP	boundaryInstantiator3D.h	/^    addExternalVelocityCornerPPP(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityEdge	boundaryInstantiator3D.h	/^    addExternalVelocityEdge(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityEdge0NN	boundaryInstantiator3D.h	/^    addExternalVelocityEdge0NN(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityEdge0NP	boundaryInstantiator3D.h	/^    addExternalVelocityEdge0NP(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityEdge0PN	boundaryInstantiator3D.h	/^    addExternalVelocityEdge0PN(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityEdge0PP	boundaryInstantiator3D.h	/^    addExternalVelocityEdge0PP(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityEdge1NN	boundaryInstantiator3D.h	/^    addExternalVelocityEdge1NN(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityEdge1NP	boundaryInstantiator3D.h	/^    addExternalVelocityEdge1NP(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityEdge1PN	boundaryInstantiator3D.h	/^    addExternalVelocityEdge1PN(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityEdge1PP	boundaryInstantiator3D.h	/^    addExternalVelocityEdge1PP(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityEdge2NN	boundaryInstantiator3D.h	/^    addExternalVelocityEdge2NN(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityEdge2NP	boundaryInstantiator3D.h	/^    addExternalVelocityEdge2NP(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityEdge2PN	boundaryInstantiator3D.h	/^    addExternalVelocityEdge2PN(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addExternalVelocityEdge2PP	boundaryInstantiator3D.h	/^    addExternalVelocityEdge2PP(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityCorner	boundaryInstantiator2D.h	/^    addInternalVelocityCorner(int x, int y, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addInternalVelocityCorner	boundaryInstantiator3D.h	/^    addInternalVelocityCorner(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityCornerNN	boundaryInstantiator2D.h	/^    addInternalVelocityCornerNN(int x, int y, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addInternalVelocityCornerNNN	boundaryInstantiator3D.h	/^    addInternalVelocityCornerNNN(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityCornerNNP	boundaryInstantiator3D.h	/^    addInternalVelocityCornerNNP(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityCornerNP	boundaryInstantiator2D.h	/^    addInternalVelocityCornerNP(int x, int y, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addInternalVelocityCornerNPN	boundaryInstantiator3D.h	/^    addInternalVelocityCornerNPN(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityCornerNPP	boundaryInstantiator3D.h	/^    addInternalVelocityCornerNPP(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityCornerPN	boundaryInstantiator2D.h	/^    addInternalVelocityCornerPN(int x, int y, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addInternalVelocityCornerPNN	boundaryInstantiator3D.h	/^    addInternalVelocityCornerPNN(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityCornerPNP	boundaryInstantiator3D.h	/^    addInternalVelocityCornerPNP(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityCornerPP	boundaryInstantiator2D.h	/^    addInternalVelocityCornerPP(int x, int y, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addInternalVelocityCornerPPN	boundaryInstantiator3D.h	/^    addInternalVelocityCornerPPN(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityCornerPPP	boundaryInstantiator3D.h	/^    addInternalVelocityCornerPPP(int x, int y, int z, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityEdge	boundaryInstantiator3D.h	/^    addInternalVelocityEdge(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityEdge0NN	boundaryInstantiator3D.h	/^    addInternalVelocityEdge0NN(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityEdge0NP	boundaryInstantiator3D.h	/^    addInternalVelocityEdge0NP(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityEdge0PN	boundaryInstantiator3D.h	/^    addInternalVelocityEdge0PN(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityEdge0PP	boundaryInstantiator3D.h	/^    addInternalVelocityEdge0PP(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityEdge1NN	boundaryInstantiator3D.h	/^    addInternalVelocityEdge1NN(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityEdge1NP	boundaryInstantiator3D.h	/^    addInternalVelocityEdge1NP(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityEdge1PN	boundaryInstantiator3D.h	/^    addInternalVelocityEdge1PN(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityEdge1PP	boundaryInstantiator3D.h	/^    addInternalVelocityEdge1PP(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityEdge2NN	boundaryInstantiator3D.h	/^    addInternalVelocityEdge2NN(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityEdge2NP	boundaryInstantiator3D.h	/^    addInternalVelocityEdge2NP(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityEdge2PN	boundaryInstantiator3D.h	/^    addInternalVelocityEdge2PN(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addInternalVelocityEdge2PP	boundaryInstantiator3D.h	/^    addInternalVelocityEdge2PP(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addLatticeCoupling	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::addLatticeCoupling ($/;"	f	class:olb::BlockLattice2D
addLatticeCoupling	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::addLatticeCoupling ($/;"	f	class:olb::BlockLattice3D
addLatticeCoupling	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::addLatticeCoupling ($/;"	f	class:olb::BlockLatticeView2D
addLatticeCoupling	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::addLatticeCoupling ($/;"	f	class:olb::BlockLatticeView3D
addPostProcessor	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::addPostProcessor ($/;"	f	class:olb::BlockLattice2D
addPostProcessor	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::addPostProcessor ($/;"	f	class:olb::BlockLattice3D
addPostProcessor	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::addPostProcessor ($/;"	f	class:olb::BlockLatticeView2D
addPostProcessor	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::addPostProcessor ($/;"	f	class:olb::BlockLatticeView3D
addPressureBoundary	boundaryInstantiator2D.h	/^    addPressureBoundary(int x0, int x1, int y0, int y1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addPressureBoundary	boundaryInstantiator3D.h	/^    addPressureBoundary(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addPressureBoundary0N	boundaryInstantiator2D.h	/^    addPressureBoundary0N(int x0, int x1, int y0, int y1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addPressureBoundary0N	boundaryInstantiator3D.h	/^    addPressureBoundary0N(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addPressureBoundary0P	boundaryInstantiator2D.h	/^    addPressureBoundary0P(int x0, int x1, int y0, int y1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addPressureBoundary0P	boundaryInstantiator3D.h	/^    addPressureBoundary0P(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addPressureBoundary1N	boundaryInstantiator2D.h	/^    addPressureBoundary1N(int x0, int x1, int y0, int y1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addPressureBoundary1N	boundaryInstantiator3D.h	/^    addPressureBoundary1N(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addPressureBoundary1P	boundaryInstantiator2D.h	/^    addPressureBoundary1P(int x0, int x1, int y0, int y1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addPressureBoundary1P	boundaryInstantiator3D.h	/^    addPressureBoundary1P(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addPressureBoundary2N	boundaryInstantiator3D.h	/^    addPressureBoundary2N(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addPressureBoundary2P	boundaryInstantiator3D.h	/^    addPressureBoundary2P(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addVelocityBoundary	boundaryInstantiator2D.h	/^    addVelocityBoundary(int x0, int x1, int y0, int y1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addVelocityBoundary	boundaryInstantiator3D.h	/^    addVelocityBoundary(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addVelocityBoundary0N	boundaryInstantiator2D.h	/^    addVelocityBoundary0N(int x0, int x1, int y0, int y1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addVelocityBoundary0N	boundaryInstantiator3D.h	/^    addVelocityBoundary0N(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addVelocityBoundary0P	boundaryInstantiator2D.h	/^    addVelocityBoundary0P(int x0, int x1, int y0, int y1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addVelocityBoundary0P	boundaryInstantiator3D.h	/^    addVelocityBoundary0P(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addVelocityBoundary1N	boundaryInstantiator2D.h	/^    addVelocityBoundary1N(int x0, int x1, int y0, int y1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addVelocityBoundary1N	boundaryInstantiator3D.h	/^    addVelocityBoundary1N(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addVelocityBoundary1P	boundaryInstantiator2D.h	/^    addVelocityBoundary1P(int x0, int x1, int y0, int y1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator2D
addVelocityBoundary1P	boundaryInstantiator3D.h	/^    addVelocityBoundary1P(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addVelocityBoundary2N	boundaryInstantiator3D.h	/^    addVelocityBoundary2N(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
addVelocityBoundary2P	boundaryInstantiator3D.h	/^    addVelocityBoundary2P(int x0, int x1, int y0, int y1, int z0, int z1, T omega)$/;"	f	class:olb::BoundaryConditionInstantiator3D
allocateMemory	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::allocateMemory() {$/;"	f	class:olb::BlockLattice2D
allocateMemory	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::allocateMemory() {$/;"	f	class:olb::BlockLattice3D
allocateMemory	dataFields2D.hh	/^void ScalarField2D<T>::allocateMemory() {$/;"	f	class:olb::ScalarField2D
allocateMemory	dataFields2D.hh	/^void TensorField2D<T,nDim>::allocateMemory() {$/;"	f	class:olb::TensorField2D
allocateMemory	dataFields3D.hh	/^void ScalarField3D<T>::allocateMemory() {$/;"	f	class:olb::ScalarField3D
allocateMemory	dataFields3D.hh	/^void TensorField3D<T,nDim>::allocateMemory() {$/;"	f	class:olb::TensorField3D
attributeF	cell.h	/^    Cell<T,Lattice>& attributeF(Cell<T,Lattice> const& rhs) {$/;"	f	class:olb::Cell
attributeValues	cell.h	/^    Cell<T,Lattice>& attributeValues(Cell<T,Lattice> const& rhs) {$/;"	f	class:olb::Cell
average	dataReductions.h	/^    T average;$/;"	m	class:olb::AverageReduction
average_energy	postProcessing.h	/^    T average_rho, average_energy, maxU;$/;"	m	class:olb::LatticeStatistics
average_rho	postProcessing.h	/^    T average_rho, average_energy, maxU;$/;"	m	class:olb::LatticeStatistics
backward	serializer.h	/^    typedef enum {forward, backward, memorySaving} OrderingT;$/;"	e	enum:olb::IndexOrdering::__anon9
baseSerializer	serializer.h	/^    DataSerializer<T> const& baseSerializer;$/;"	m	class:olb::ScalingSerializer
baseSerializer	serializer.h	/^    DataSerializer<T> const& baseSerializer;$/;"	m	class:olb::TypeConversionSerializer
baseSerializer	serializer.hh	/^    DataSerializer<T> const& baseSerializer;$/;"	m	class:olb::TypeConversionSerializer
basicMomenta	momentaOnBoundaries.h	/^    BulkMomenta<T,Lattice> basicMomenta;$/;"	m	class:olb::FixedVelocityBM
bgkCollision	lbHelpers.h	/^    static T bgkCollision(Cell<T,Lattice>& cell, T rho, const T u[Lattice<T>::d], T omega)$/;"	f	struct:olb::lbHelpers
bgkCollision	lbHelpers.h	/^    static T bgkCollision(T* cell, T rho, const T u[Descriptor::d], T omega) {$/;"	f	struct:olb::lbDynamicsHelpers
bgkCollision	lbHelpers2D.h	/^    static T bgkCollision ( T* cell, T rho, const T u[2], T omega) {$/;"	f	struct:olb::lbDynamicsHelpers
bgkCollision	lbHelpers3D.h	/^    static T bgkCollision(T* cell, T rho, const T u[3], T omega) {$/;"	f	struct:olb::lbDynamicsHelpers
block	boundaryInstantiator2D.h	/^    BlockStructure2D<T,Lattice>& block;$/;"	m	class:olb::BoundaryConditionInstantiator2D
block	boundaryInstantiator3D.h	/^    BlockStructure3D<T,Lattice>& block;$/;"	m	class:olb::BoundaryConditionInstantiator3D
block	dataAnalysis2D.h	/^    BlockStructure2D<T,Lattice> const& block;$/;"	m	class:olb::DataAnalysis2D
block	dataAnalysis3D.h	/^    BlockStructure3D<T,Lattice> const& block;$/;"	m	class:olb::DataAnalysis3D
blockLattice	blockLattice2D.h	/^    BlockLattice2D<T,Lattice> const& blockLattice;$/;"	m	class:olb::BlockLatticeSerializer2D
blockLattice	blockLattice2D.h	/^    BlockLattice2D<T,Lattice>& blockLattice;$/;"	m	class:olb::BlockLatticeUnSerializer2D
blockLattice	blockLattice3D.h	/^    BlockLattice3D<T,Lattice> const& blockLattice;$/;"	m	class:olb::BlockLatticeSerializer3D
blockLattice	blockLattice3D.h	/^    BlockLattice3D<T,Lattice>& blockLattice;$/;"	m	class:olb::BlockLatticeUnSerializer3D
boundaryDeriv	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::boundaryDeriv ($/;"	f	class:olb::DataAnalysis2D
boundaryDeriv	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::boundaryDeriv ($/;"	f	class:olb::DataAnalysis3D
boundaryDivRhoU	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::boundaryDivRhoU(int iX, int iY) const {$/;"	f	class:olb::DataAnalysis2D
boundaryDivRhoU	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::boundaryDivRhoU ($/;"	f	class:olb::DataAnalysis3D
boundaryDynamics	dynamics.h	/^    Dynamics boundaryDynamics;$/;"	m	class:olb::CombinedRLBdynamics
boundaryGradient	finiteDifference.h	/^        T boundaryGradient(T u_0, T u_1, T u_2) {$/;"	f	namespace:olb::fd
boundaryPoisson	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::boundaryPoisson(int iX, int iY) const {$/;"	f	class:olb::DataAnalysis2D
boundaryPoisson	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::boundaryPoisson ($/;"	f	class:olb::DataAnalysis3D
boundaryStrain	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::boundaryStrain ($/;"	f	class:olb::DataAnalysis2D
boundaryStrain	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::boundaryStrain ($/;"	f	class:olb::DataAnalysis3D
boundaryStream	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::boundaryStream ($/;"	f	class:olb::BlockLattice2D
boundaryStream	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::boundaryStream ($/;"	f	class:olb::BlockLattice3D
boundaryVorticity	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::boundaryVorticity(int iX, int iY) const {$/;"	f	class:olb::DataAnalysis2D
boundaryVorticityX	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::boundaryVorticityX ($/;"	f	class:olb::DataAnalysis3D
boundaryVorticityY	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::boundaryVorticityY ($/;"	f	class:olb::DataAnalysis3D
boundaryVorticityZ	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::boundaryVorticityZ ($/;"	f	class:olb::DataAnalysis3D
boundaryXderiv	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::boundaryXderiv ($/;"	f	class:olb::DataAnalysis2D
boundaryXderiv	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::boundaryXderiv ($/;"	f	class:olb::DataAnalysis3D
boundaryYderiv	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::boundaryYderiv ($/;"	f	class:olb::DataAnalysis2D
boundaryYderiv	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::boundaryYderiv ($/;"	f	class:olb::DataAnalysis3D
boundaryZderiv	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::boundaryZderiv ($/;"	f	class:olb::DataAnalysis3D
boundaryZeroGradient	finiteDifference.h	/^        T boundaryZeroGradient(T u_1, T u_2) {$/;"	f	namespace:olb::fd
buffer	blockLattice2D.h	/^    mutable std::vector<T> buffer;$/;"	m	class:olb::BlockLatticeSerializer2D
buffer	blockLattice2D.h	/^    mutable std::vector<T> buffer;$/;"	m	class:olb::BlockLatticeUnSerializer2D
buffer	blockLattice3D.h	/^    mutable std::vector<T> buffer;$/;"	m	class:olb::BlockLatticeSerializer3D
buffer	blockLattice3D.h	/^    mutable std::vector<T> buffer;$/;"	m	class:olb::BlockLatticeUnSerializer3D
buffer	dataFields2D.h	/^    mutable std::vector<T> buffer;$/;"	m	class:olb::SequentialScalarFieldSerializer2D
buffer	dataFields2D.h	/^    mutable std::vector<T> buffer;$/;"	m	class:olb::SequentialScalarFieldUnSerializer2D
buffer	dataFields2D.h	/^    mutable std::vector<T> buffer;$/;"	m	class:olb::SequentialTensorFieldSerializer2D
buffer	dataFields2D.h	/^    mutable std::vector<T> buffer;$/;"	m	class:olb::SequentialTensorFieldUnSerializer2D
buffer	dataFields3D.h	/^    mutable std::vector<T> buffer;$/;"	m	class:olb::SequentialScalarFieldSerializer3D
buffer	dataFields3D.h	/^    mutable std::vector<T> buffer;$/;"	m	class:olb::SequentialScalarFieldUnSerializer3D
buffer	dataFields3D.h	/^    mutable std::vector<T> buffer;$/;"	m	class:olb::SequentialTensorFieldSerializer3D
buffer	dataFields3D.h	/^    mutable std::vector<T> buffer;$/;"	m	class:olb::SequentialTensorFieldUnSerializer3D
bulkCollideAndStream	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::bulkCollideAndStream ($/;"	f	class:olb::BlockLattice2D
bulkCollideAndStream	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::bulkCollideAndStream ($/;"	f	class:olb::BlockLattice3D
bulkDeriv	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::bulkDeriv ($/;"	f	class:olb::DataAnalysis2D
bulkDeriv	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::bulkDeriv ($/;"	f	class:olb::DataAnalysis3D
bulkDivRhoU	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::bulkDivRhoU(int iX, int iY) const {$/;"	f	class:olb::DataAnalysis2D
bulkDivRhoU	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::bulkDivRhoU(int iX, int iY, int iZ) const {$/;"	f	class:olb::DataAnalysis3D
bulkPoisson	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::bulkPoisson(int iX, int iY) const {$/;"	f	class:olb::DataAnalysis2D
bulkPoisson	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::bulkPoisson(int iX, int iY, int iZ) const {$/;"	f	class:olb::DataAnalysis3D
bulkStrain	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::bulkStrain ($/;"	f	class:olb::DataAnalysis2D
bulkStrain	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::bulkStrain ($/;"	f	class:olb::DataAnalysis3D
bulkStream	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::bulkStream ($/;"	f	class:olb::BlockLattice2D
bulkStream	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::bulkStream ($/;"	f	class:olb::BlockLattice3D
bulkVorticity	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::bulkVorticity(int iX, int iY) const {$/;"	f	class:olb::DataAnalysis2D
bulkVorticityX	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::bulkVorticityX(int iX, int iY, int iZ) const {$/;"	f	class:olb::DataAnalysis3D
bulkVorticityY	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::bulkVorticityY(int iX, int iY, int iZ) const {$/;"	f	class:olb::DataAnalysis3D
bulkVorticityZ	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::bulkVorticityZ(int iX, int iY, int iZ) const {$/;"	f	class:olb::DataAnalysis3D
bulkXderiv	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::bulkXderiv ($/;"	f	class:olb::DataAnalysis2D
bulkXderiv	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::bulkXderiv ($/;"	f	class:olb::DataAnalysis3D
bulkYderiv	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::bulkYderiv ($/;"	f	class:olb::DataAnalysis2D
bulkYderiv	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::bulkYderiv ($/;"	f	class:olb::DataAnalysis3D
bulkZderiv	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::bulkZderiv ($/;"	f	class:olb::DataAnalysis3D
c	latticeDescriptors.h	/^        static const int c[q][d];   \/\/\/< lattice directions$/;"	m	struct:olb::descriptors::D2Q9DescriptorBase
c	latticeDescriptors.h	/^        static const int c[q][d];   \/\/\/< lattice directions$/;"	m	struct:olb::descriptors::D3Q13DescriptorBase
c	latticeDescriptors.h	/^        static const int c[q][d];   \/\/\/< lattice directions$/;"	m	struct:olb::descriptors::D3Q15DescriptorBase
c	latticeDescriptors.h	/^        static const int c[q][d];   \/\/\/< lattice directions$/;"	m	struct:olb::descriptors::D3Q19DescriptorBase
c	latticeDescriptors.h	/^        static const int c[q][d];   \/\/\/< lattice directions$/;"	m	struct:olb::descriptors::D3Q27DescriptorBase
c	latticeDescriptors.hh	/^    const int D2Q9DescriptorBase<T>::c$/;"	m	class:olb::descriptors::D2Q9DescriptorBase
c	latticeDescriptors.hh	/^    const int D3Q13DescriptorBase<T>::c$/;"	m	class:olb::descriptors::D3Q13DescriptorBase
c	latticeDescriptors.hh	/^    const int D3Q15DescriptorBase<T>::c$/;"	m	class:olb::descriptors::D3Q15DescriptorBase
c	latticeDescriptors.hh	/^    const int D3Q19DescriptorBase<T>::c$/;"	m	class:olb::descriptors::D3Q19DescriptorBase
c	latticeDescriptors.hh	/^    const int D3Q27DescriptorBase<T>::c$/;"	m	class:olb::descriptors::D3Q27DescriptorBase
centralGradient	finiteDifference.h	/^        T centralGradient(T u_p1, T u_m1) {$/;"	f	namespace:olb::fd
clearLatticeCouplings	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::clearLatticeCouplings() {$/;"	f	class:olb::BlockLattice2D
clearLatticeCouplings	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::clearLatticeCouplings() {$/;"	f	class:olb::BlockLattice3D
clearPostProcessors	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::clearPostProcessors() {$/;"	f	class:olb::BlockLattice2D
clearPostProcessors	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::clearPostProcessors() {$/;"	f	class:olb::BlockLattice3D
clone	boundaryPostProcessors2D.hh	/^    StraightFdBoundaryProcessorGenerator2D<T,Lattice,direction,orientation>::clone() const$/;"	f	class:olb::StraightFdBoundaryProcessorGenerator2D
clone	boundaryPostProcessors2D.hh	/^    clone() const$/;"	f	class:olb::OuterVelocityCornerProcessorGenerator2D
clone	boundaryPostProcessors3D.hh	/^    OuterVelocityCornerProcessorGenerator3D<T,Lattice, xNormal,yNormal,zNormal>::clone() const$/;"	f	class:olb::OuterVelocityCornerProcessorGenerator3D
clone	boundaryPostProcessors3D.hh	/^    OuterVelocityEdgeProcessorGenerator3D<T,Lattice, plane,normal1,normal2>::clone() const$/;"	f	class:olb::OuterVelocityEdgeProcessorGenerator3D
clone	boundaryPostProcessors3D.hh	/^    PlaneFdBoundaryProcessorGenerator3D<T,Lattice,direction,orientation>::clone() const$/;"	f	class:olb::PlaneFdBoundaryProcessorGenerator3D
clone	dynamics.hh	/^    CombinedRLBdynamics<T,Lattice, Dynamics>::clone() const$/;"	f	class:olb::CombinedRLBdynamics
clone	dynamics.hh	/^BGKdynamics<T,Lattice>* BGKdynamics<T,Lattice>::clone() const {$/;"	f	class:olb::BGKdynamics
clone	dynamics.hh	/^BounceBack<T,Lattice>* BounceBack<T,Lattice>::clone() const {$/;"	f	class:olb::BounceBack
clone	dynamics.hh	/^ConstRhoBGKdynamics<T,Lattice>* ConstRhoBGKdynamics<T,Lattice>::clone()$/;"	f	class:olb::ConstRhoBGKdynamics
clone	dynamics.hh	/^D3Q13dynamics<T,Lattice>* D3Q13dynamics<T,Lattice>::clone() const {$/;"	f	class:olb::D3Q13dynamics
clone	dynamics.hh	/^ForcedBGKdynamics<T,Lattice>* ForcedBGKdynamics<T,Lattice>::clone() const {$/;"	f	class:olb::ForcedBGKdynamics
clone	dynamics.hh	/^IncBGKdynamics<T,Lattice>* IncBGKdynamics<T,Lattice>::clone() const {$/;"	f	class:olb::IncBGKdynamics
clone	dynamics.hh	/^NoDynamics<T,Lattice>* NoDynamics<T,Lattice>::clone() const {$/;"	f	class:olb::NoDynamics
clone	dynamics.hh	/^RLBdynamics<T,Lattice>* RLBdynamics<T,Lattice>::clone() const {$/;"	f	class:olb::RLBdynamics
clone	postProcessing.hh	/^    StatPPGenerator2D<T,Lattice>::clone() const$/;"	f	class:olb::StatPPGenerator2D
clone	postProcessing.hh	/^PostProcessorGenerator3D<T,Lattice>* StatPPGenerator3D<T,Lattice>::clone() const {$/;"	f	class:olb::StatPPGenerator3D
collide	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::collide() {$/;"	f	class:olb::BlockLattice2D
collide	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::collide(int x0, int x1, int y0, int y1) {$/;"	f	class:olb::BlockLattice2D
collide	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::collide ($/;"	f	class:olb::BlockLattice3D
collide	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::collide() {$/;"	f	class:olb::BlockLattice3D
collide	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::collide ($/;"	f	class:olb::BlockLatticeView2D
collide	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::collide() {$/;"	f	class:olb::BlockLatticeView2D
collide	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::collide ($/;"	f	class:olb::BlockLatticeView3D
collide	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::collide() {$/;"	f	class:olb::BlockLatticeView3D
collide	cell.h	/^    void collide(LatticeStatistics<T>& statistics) {$/;"	f	class:olb::Cell
collide	dynamics.hh	/^void BGKdynamics<T,Lattice>::collide ($/;"	f	class:olb::BGKdynamics
collide	dynamics.hh	/^void BounceBack<T,Lattice>::collide ($/;"	f	class:olb::BounceBack
collide	dynamics.hh	/^void CombinedRLBdynamics<T,Lattice,Dynamics>::collide ($/;"	f	class:olb::CombinedRLBdynamics
collide	dynamics.hh	/^void ConstRhoBGKdynamics<T,Lattice>::collide ($/;"	f	class:olb::ConstRhoBGKdynamics
collide	dynamics.hh	/^void D3Q13dynamics<T,Lattice>::collide ($/;"	f	class:olb::D3Q13dynamics
collide	dynamics.hh	/^void ForcedBGKdynamics<T,Lattice>::collide ($/;"	f	class:olb::ForcedBGKdynamics
collide	dynamics.hh	/^void IncBGKdynamics<T,Lattice>::collide ($/;"	f	class:olb::IncBGKdynamics
collide	dynamics.hh	/^void NoDynamics<T,Lattice>::collide ($/;"	f	class:olb::NoDynamics
collide	dynamics.hh	/^void RLBdynamics<T,Lattice>::collide ($/;"	f	class:olb::RLBdynamics
collideAndStream	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::collideAndStream(bool periodic) {$/;"	f	class:olb::BlockLattice2D
collideAndStream	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::collideAndStream(int x0, int x1, int y0, int y1)$/;"	f	class:olb::BlockLattice2D
collideAndStream	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::collideAndStream(bool periodic) {$/;"	f	class:olb::BlockLattice3D
collideAndStream	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::collideAndStream(int x0, int x1, int y0, int y1, int z0, int z1) {$/;"	f	class:olb::BlockLattice3D
collideAndStream	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::collideAndStream(bool periodic) {$/;"	f	class:olb::BlockLatticeView2D
collideAndStream	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::collideAndStream(int x0_, int x1_, int y0_, int y1_) {$/;"	f	class:olb::BlockLatticeView2D
collideAndStream	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::collideAndStream ($/;"	f	class:olb::BlockLatticeView3D
collideAndStream	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::collideAndStream(bool periodic) {$/;"	f	class:olb::BlockLatticeView3D
collision	d3q13Helpers.h	/^    static T collision( Cell<T,descriptors::D3Q13Descriptor>& cell,$/;"	f	struct:olb::d3q13Helpers
commitData	blockLattice2D.hh	/^void BlockLatticeUnSerializer2D<T,Lattice>::commitData() {$/;"	f	class:olb::BlockLatticeUnSerializer2D
commitData	blockLattice3D.hh	/^void BlockLatticeUnSerializer3D<T,Lattice>::commitData() {$/;"	f	class:olb::BlockLatticeUnSerializer3D
commitData	dataFields2D.hh	/^void SequentialScalarFieldUnSerializer2D<T>::commitData() {$/;"	f	class:olb::SequentialScalarFieldUnSerializer2D
commitData	dataFields2D.hh	/^void SequentialTensorFieldUnSerializer2D<T, nDim>::commitData() {$/;"	f	class:olb::SequentialTensorFieldUnSerializer2D
commitData	dataFields3D.hh	/^void SequentialScalarFieldUnSerializer3D<T>::commitData() {$/;"	f	class:olb::SequentialScalarFieldUnSerializer3D
commitData	dataFields3D.hh	/^void SequentialTensorFieldUnSerializer3D<T, nDim>::commitData() {$/;"	f	class:olb::SequentialTensorFieldUnSerializer3D
components	dataFields2D.h	/^    mutable ScalarField2D<T> *components[nDim];$/;"	m	class:olb::TensorField2D
components	dataFields3D.h	/^    mutable ScalarField3D<T> *components[nDim];$/;"	m	class:olb::TensorField3D
computeAllMomenta	cell.h	/^    void computeAllMomenta ($/;"	f	class:olb::Cell
computeAllMomenta	dynamics.hh	/^void BasicDynamics<T,Lattice>::computeAllMomenta ($/;"	f	class:olb::BasicDynamics
computeAllMomenta	dynamics.hh	/^void BounceBack<T,Lattice>::computeAllMomenta ($/;"	f	class:olb::BounceBack
computeAllMomenta	dynamics.hh	/^void BulkMomenta<T,Lattice>::computeAllMomenta ($/;"	f	class:olb::BulkMomenta
computeAllMomenta	dynamics.hh	/^void ExternalVelocityMomenta<T,Lattice>::computeAllMomenta ($/;"	f	class:olb::ExternalVelocityMomenta
computeAllMomenta	dynamics.hh	/^void Momenta<T,Lattice>::computeAllMomenta ($/;"	f	class:olb::Momenta
computeAllMomenta	dynamics.hh	/^void NoDynamics<T,Lattice>::computeAllMomenta ($/;"	f	class:olb::NoDynamics
computeAllMomenta	lbHelpers.h	/^    static void computeAllMomenta(Cell<T,Lattice> const& cell, T& rho, T u[Lattice<T>::d],$/;"	f	struct:olb::lbHelpers
computeAllMomenta	lbHelpers.h	/^    static void computeAllMomenta(T const* cell, T& rho, T u[Descriptor::d],$/;"	f	struct:olb::lbDynamicsHelpers
computeAllMomenta	lbHelpers2D.h	/^    static void computeAllMomenta(T const* cell, T& rho, T u[2], T pi[3] ) {$/;"	f	struct:olb::lbDynamicsHelpers
computeAllMomenta	lbHelpers3D.h	/^    static void computeAllMomenta(T const* cell, T& rho, T u[3], T pi[6]) {$/;"	f	struct:olb::lbDynamicsHelpers
computeAllMomenta	momentaOnBoundaries.hh	/^void FixedVelocityBM<T,Lattice>::computeAllMomenta ($/;"	f	class:olb::FixedVelocityBM
computeAverage	dataReductions.hh	/^T computeAverage(ScalarField<T> const& field) {$/;"	f	namespace:olb
computeAverageDensity	blockLattice2D.hh	/^T BlockLattice2D<T,Lattice>::computeAverageDensity ($/;"	f	class:olb::BlockLattice2D
computeAverageDensity	blockLattice2D.hh	/^T BlockLattice2D<T,Lattice>::computeAverageDensity() const {$/;"	f	class:olb::BlockLattice2D
computeAverageDensity	blockLattice3D.hh	/^T BlockLattice3D<T,Lattice>::computeAverageDensity ($/;"	f	class:olb::BlockLattice3D
computeAverageDensity	blockLattice3D.hh	/^T BlockLattice3D<T,Lattice>::computeAverageDensity() const {$/;"	f	class:olb::BlockLattice3D
computeAverageDensity	blockLatticeView2D.hh	/^T BlockLatticeView2D<T,Lattice>::computeAverageDensity ($/;"	f	class:olb::BlockLatticeView2D
computeAverageDensity	blockLatticeView2D.hh	/^T BlockLatticeView2D<T,Lattice>::computeAverageDensity() const {$/;"	f	class:olb::BlockLatticeView2D
computeAverageDensity	blockLatticeView3D.hh	/^T BlockLatticeView3D<T,Lattice>::computeAverageDensity ($/;"	f	class:olb::BlockLatticeView3D
computeAverageDensity	blockLatticeView3D.hh	/^T BlockLatticeView3D<T,Lattice>::computeAverageDensity() const {$/;"	f	class:olb::BlockLatticeView3D
computeDivRhoUField	dataAnalysis2D.hh	/^void DataAnalysis2D<T,Lattice>::computeDivRhoUField() const {$/;"	f	class:olb::DataAnalysis2D
computeDivRhoUField	dataAnalysis3D.hh	/^void DataAnalysis3D<T,Lattice>::computeDivRhoUField() const {$/;"	f	class:olb::DataAnalysis3D
computeEquilibrium	cell.h	/^    T computeEquilibrium(int iPop, T rho, const T u[Lattice<T>::d], T uSqr) const$/;"	f	class:olb::Cell
computeEquilibrium	dynamics.hh	/^    computeEquilibrium(int iPop, T rho, const T u[Lattice<T>::d], T uSqr) const$/;"	f	class:olb::CombinedRLBdynamics
computeEquilibrium	dynamics.hh	/^T BGKdynamics<T,Lattice>::computeEquilibrium(int iPop, T rho, const T u[Lattice<T>::d], T uSqr) const$/;"	f	class:olb::BGKdynamics
computeEquilibrium	dynamics.hh	/^T BounceBack<T,Lattice>::computeEquilibrium(int iPop, T rho, const T u[Lattice<T>::d], T uSqr) const$/;"	f	class:olb::BounceBack
computeEquilibrium	dynamics.hh	/^T ConstRhoBGKdynamics<T,Lattice>::computeEquilibrium(int iPop, T rho, const T u[Lattice<T>::d], T uSqr) const$/;"	f	class:olb::ConstRhoBGKdynamics
computeEquilibrium	dynamics.hh	/^T D3Q13dynamics<T,Lattice>::computeEquilibrium(int iPop, T rho, const T u[Lattice<T>::d], T uSqr) const$/;"	f	class:olb::D3Q13dynamics
computeEquilibrium	dynamics.hh	/^T ForcedBGKdynamics<T,Lattice>::computeEquilibrium(int iPop, T rho, const T u[Lattice<T>::d], T uSqr) const$/;"	f	class:olb::ForcedBGKdynamics
computeEquilibrium	dynamics.hh	/^T IncBGKdynamics<T,Lattice>::computeEquilibrium(int iPop, T rho, const T u[Lattice<T>::d], T uSqr) const$/;"	f	class:olb::IncBGKdynamics
computeEquilibrium	dynamics.hh	/^T NoDynamics<T,Lattice>::computeEquilibrium(int iPop, T rho, const T u[Lattice<T>::d], T uSqr) const$/;"	f	class:olb::NoDynamics
computeEquilibrium	dynamics.hh	/^T RLBdynamics<T,Lattice>::computeEquilibrium(int iPop, T rho, const T u[Lattice<T>::d], T uSqr) const$/;"	f	class:olb::RLBdynamics
computeExternalField	cell.h	/^    void computeExternalField(int pos, int size, T* ext) const {$/;"	f	class:olb::Cell
computeExternalField	dynamics.hh	/^void Dynamics<T,Lattice>::computeExternalField ($/;"	f	class:olb::Dynamics
computeFneq	lbHelpers.h	/^    static void computeFneq ( Cell<T,Lattice> const& cell,$/;"	f	struct:olb::lbHelpers
computeFneq	lbHelpers.h	/^    static void computeFneq(T const* cell, T fNeq[Descriptor::q], T rho, const T u[Descriptor::d]) {$/;"	f	struct:olb::lbDynamicsHelpers
computeFneq	lbHelpers2D.h	/^    static void computeFneq ( T const* cell, T fNeq[9], T rho, const T u[2] ) {$/;"	f	struct:olb::lbDynamicsHelpers
computeFneq	lbHelpers3D.h	/^    static void computeFneq ($/;"	f	struct:olb::lbDynamicsHelpers
computeFneq	lbHelpers3D.h	/^    static void computeFneq(T const* cell, T fNeq[15], T rho, const T u[3] ) {$/;"	f	struct:olb::lbDynamicsHelpers
computeJ	dynamics.hh	/^void BasicDynamics<T,Lattice>::computeJ ($/;"	f	class:olb::BasicDynamics
computeJ	dynamics.hh	/^void BounceBack<T,Lattice>::computeJ ($/;"	f	class:olb::BounceBack
computeJ	dynamics.hh	/^void BulkMomenta<T,Lattice>::computeJ(Cell<T,Lattice> const& cell, T j[Lattice<T>::d]) const$/;"	f	class:olb::BulkMomenta
computeJ	dynamics.hh	/^void ExternalVelocityMomenta<T,Lattice>::computeJ(Cell<T,Lattice> const& cell, T j[Lattice<T>::d]) const$/;"	f	class:olb::ExternalVelocityMomenta
computeJ	dynamics.hh	/^void NoDynamics<T,Lattice>::computeJ ($/;"	f	class:olb::NoDynamics
computeJ	lbHelpers.h	/^    static void computeJ(Cell<T,Lattice> const& cell, T j[Lattice<T>::d] ) {$/;"	f	struct:olb::lbHelpers
computeJ	lbHelpers.h	/^    static void computeJ(T const* cell, T j[Descriptor::d]) {$/;"	f	struct:olb::lbDynamicsHelpers
computeJ	lbHelpers2D.h	/^    static void computeJ(T const* cell, T j[2] ) {$/;"	f	struct:olb::lbDynamicsHelpers
computeJ	lbHelpers3D.h	/^    static void computeJ(T const* cell, T j[3]) {$/;"	f	struct:olb::lbDynamicsHelpers
computeJ	momentaOnBoundaries.hh	/^void EquilibriumBM<T,Lattice>::computeJ ($/;"	f	class:olb::EquilibriumBM
computeJ	momentaOnBoundaries.hh	/^void FixedVelocityBM<T,Lattice>::computeJ(Cell<T,Lattice> const& cell, T j[Lattice<T>::d]) const$/;"	f	class:olb::FixedVelocityBM
computeJ	momentaOnBoundaries.hh	/^void PressureBM<T,Lattice,direction,orientation>::computeJ ($/;"	f	class:olb::PressureBM
computeJ	momentaOnBoundaries.hh	/^void VelocityBM<T,Lattice,direction,orientation>::computeJ ($/;"	f	class:olb::VelocityBM
computeJ	momentaOnBoundaries2D.hh	/^void InnerCornerVelBM2D<T,Lattice,normalX,normalY>::computeJ ($/;"	f	class:olb::InnerCornerVelBM2D
computeJ	momentaOnBoundaries3D.hh	/^void InnerCornerVelBM3D<T,Lattice,normalX,normalY,normalZ>::computeJ ($/;"	f	class:olb::InnerCornerVelBM3D
computeJ	momentaOnBoundaries3D.hh	/^void InnerEdgeVelBM3D<T,Lattice,plane,normal1,normal2>::computeJ ($/;"	f	class:olb::InnerEdgeVelBM3D
computeMax	dataReductions.hh	/^T computeMax(ScalarField<T> const& field) {$/;"	f	namespace:olb
computeMeanEnstrophy	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::computeMeanEnstrophy() const {$/;"	f	class:olb::DataAnalysis2D
computeMeanEnstrophy	dataAnalysis3D.hh	/^T DataAnalysis3D<T,Lattice>::computeMeanEnstrophy() const {$/;"	f	class:olb::DataAnalysis3D
computeMeanEnstrophy2	dataAnalysis2D.hh	/^T DataAnalysis2D<T,Lattice>::computeMeanEnstrophy2() const {$/;"	f	class:olb::DataAnalysis2D
computeMin	dataReductions.hh	/^T computeMin(ScalarField<T> const& field) {$/;"	f	namespace:olb
computeMomentumField	dataAnalysis2D.hh	/^void DataAnalysis2D<T,Lattice>::computeMomentumField() const {$/;"	f	class:olb::DataAnalysis2D
computeMomentumField	dataAnalysis3D.hh	/^void DataAnalysis3D<T,Lattice>::computeMomentumField() const {$/;"	f	class:olb::DataAnalysis3D
computeNormSqr	dataReductions.hh	/^T computeNormSqr(ScalarField<T> const& field) {$/;"	f	namespace:olb
computePoissonTerm	dataAnalysis2D.hh	/^void DataAnalysis2D<T,Lattice>::computePoissonTerm() const {$/;"	f	class:olb::DataAnalysis2D
computePoissonTerm	dataAnalysis3D.hh	/^void DataAnalysis3D<T,Lattice>::computePoissonTerm() const {$/;"	f	class:olb::DataAnalysis3D
computePopulationField	dataAnalysis2D.hh	/^void DataAnalysis2D<T,Lattice>::computePopulationField() const {$/;"	f	class:olb::DataAnalysis2D
computePopulations	cell.h	/^    void computePopulations(T* f) const {$/;"	f	class:olb::Cell
computePopulations	dataAnalysis3D.hh	/^void DataAnalysis3D<T,Lattice>::computePopulations() const {$/;"	f	class:olb::DataAnalysis3D
computePopulations	dynamics.hh	/^void Dynamics<T,Lattice>::computePopulations(Cell<T,Lattice> const& cell, T* f) const {$/;"	f	class:olb::Dynamics
computePressure2D	simulationSetup2D.hh	/^void computePressure2D(ScalarFieldBase2D<T> const& poissonTerm,$/;"	f	namespace:olb
computePressureField	dataAnalysis2D.hh	/^void DataAnalysis2D<T,Lattice>::computePressureField() const {$/;"	f	class:olb::DataAnalysis2D
computePressureField	dataAnalysis3D.hh	/^void DataAnalysis3D<T,Lattice>::computePressureField() const {$/;"	f	class:olb::DataAnalysis3D
computeRMS	dataReductions.hh	/^T computeRMS(ScalarField<T> const& field) {$/;"	f	namespace:olb
computeReduction	dataFields2D.hh	/^T ScalarField2D<T>::computeReduction(DataReduction<T>& reduction) const $/;"	f	class:olb::ScalarField2D
computeReduction	dataFields3D.hh	/^T ScalarField3D<T>::computeReduction(DataReduction<T>& reduction) const $/;"	f	class:olb::ScalarField3D
computeRho	cell.h	/^    T computeRho() const {$/;"	f	class:olb::Cell
computeRho	dynamics.hh	/^T BasicDynamics<T,Lattice>::computeRho(Cell<T,Lattice> const& cell) const$/;"	f	class:olb::BasicDynamics
computeRho	dynamics.hh	/^T BounceBack<T,Lattice>::computeRho(Cell<T,Lattice> const& cell) const {$/;"	f	class:olb::BounceBack
computeRho	dynamics.hh	/^T BulkMomenta<T,Lattice>::computeRho(Cell<T,Lattice> const& cell) const {$/;"	f	class:olb::BulkMomenta
computeRho	dynamics.hh	/^T ExternalVelocityMomenta<T,Lattice>::computeRho(Cell<T,Lattice> const& cell) const {$/;"	f	class:olb::ExternalVelocityMomenta
computeRho	dynamics.hh	/^T NoDynamics<T,Lattice>::computeRho(Cell<T,Lattice> const& cell) const$/;"	f	class:olb::NoDynamics
computeRho	lbHelpers.h	/^    static T computeRho(Cell<T,Lattice> const& cell) {$/;"	f	struct:olb::lbHelpers
computeRho	lbHelpers.h	/^    static T computeRho(T const* cell) {$/;"	f	struct:olb::lbDynamicsHelpers
computeRho	lbHelpers2D.h	/^    static T computeRho(T const* cell) {$/;"	f	struct:olb::lbDynamicsHelpers
computeRho	lbHelpers3D.h	/^    static T computeRho(T const* cell) {$/;"	f	struct:olb::lbDynamicsHelpers
computeRho	momentaOnBoundaries.hh	/^T EquilibriumBM<T,Lattice>::computeRho ($/;"	f	class:olb::EquilibriumBM
computeRho	momentaOnBoundaries.hh	/^T FixedVelocityBM<T,Lattice>::computeRho(Cell<T,Lattice> const& cell) const {$/;"	f	class:olb::FixedVelocityBM
computeRho	momentaOnBoundaries.hh	/^T PressureBM<T,Lattice,direction,orientation>::computeRho ($/;"	f	class:olb::PressureBM
computeRho	momentaOnBoundaries.hh	/^T PressureBM<T,Lattice,direction,orientation>::computeRho() const {$/;"	f	class:olb::PressureBM
computeRho	momentaOnBoundaries.hh	/^T VelocityBM<T,Lattice,direction,orientation>::computeRho ($/;"	f	class:olb::VelocityBM
computeRho	momentaOnBoundaries2D.hh	/^T InnerCornerVelBM2D<T,Lattice,normalX,normalY>::computeRho ($/;"	f	class:olb::InnerCornerVelBM2D
computeRho	momentaOnBoundaries3D.hh	/^T InnerCornerVelBM3D<T,Lattice,normalX,normalY,normalZ>::computeRho ($/;"	f	class:olb::InnerCornerVelBM3D
computeRho	momentaOnBoundaries3D.hh	/^T InnerEdgeVelBM3D<T,Lattice,plane,normal1,normal2>::computeRho ($/;"	f	class:olb::InnerEdgeVelBM3D
computeRhoU	cell.h	/^    void computeRhoU(T& rho, T u[Lattice<T>::d]) const {$/;"	f	class:olb::Cell
computeRhoU	dynamics.hh	/^void BasicDynamics<T,Lattice>::computeRhoU ($/;"	f	class:olb::BasicDynamics
computeRhoU	dynamics.hh	/^void BounceBack<T,Lattice>::computeRhoU ($/;"	f	class:olb::BounceBack
computeRhoU	dynamics.hh	/^void BulkMomenta<T,Lattice>::computeRhoU ($/;"	f	class:olb::BulkMomenta
computeRhoU	dynamics.hh	/^void ExternalVelocityMomenta<T,Lattice>::computeRhoU ($/;"	f	class:olb::ExternalVelocityMomenta
computeRhoU	dynamics.hh	/^void Momenta<T,Lattice>::computeRhoU ($/;"	f	class:olb::Momenta
computeRhoU	dynamics.hh	/^void NoDynamics<T,Lattice>::computeRhoU ($/;"	f	class:olb::NoDynamics
computeRhoU	lbHelpers.h	/^    static void computeRhoU(Cell<T,Lattice> const& cell, T& rho, T u[Lattice<T>::d])$/;"	f	struct:olb::lbHelpers
computeRhoU	lbHelpers.h	/^    static void computeRhoU(T const* cell, T& rho, T u[Descriptor::d]) {$/;"	f	struct:olb::lbDynamicsHelpers
computeRhoU	lbHelpers2D.h	/^    static void computeRhoU(T const* cell, T& rho, T u[2]) {$/;"	f	struct:olb::lbDynamicsHelpers
computeRhoU	lbHelpers3D.h	/^    static void computeRhoU(T const* cell, T& rho, T u[3]) {$/;"	f	struct:olb::lbDynamicsHelpers
computeRhoU	momentaOnBoundaries.hh	/^void FixedVelocityBM<T,Lattice>::computeRhoU ($/;"	f	class:olb::FixedVelocityBM
computeStrainRateField	dataAnalysis2D.hh	/^void DataAnalysis2D<T,Lattice>::computeStrainRateField() const {$/;"	f	class:olb::DataAnalysis2D
computeStrainRateField	dataAnalysis3D.hh	/^void DataAnalysis3D<T,Lattice>::computeStrainRateField() const {$/;"	f	class:olb::DataAnalysis3D
computeStrainRateFieldFromStress	dataAnalysis2D.hh	/^void DataAnalysis2D<T,Lattice>::computeStrainRateFieldFromStress() const {$/;"	f	class:olb::DataAnalysis2D
computeStrainRateFieldFromStress	dataAnalysis3D.hh	/^void DataAnalysis3D<T,Lattice>::computeStrainRateFieldFromStress() const {$/;"	f	class:olb::DataAnalysis3D
computeStress	cell.h	/^    void computeStress ($/;"	f	class:olb::Cell
computeStress	dynamics.hh	/^void BasicDynamics<T,Lattice>::computeStress ($/;"	f	class:olb::BasicDynamics
computeStress	dynamics.hh	/^void BounceBack<T,Lattice>::computeStress ($/;"	f	class:olb::BounceBack
computeStress	dynamics.hh	/^void BulkMomenta<T,Lattice>::computeStress ($/;"	f	class:olb::BulkMomenta
computeStress	dynamics.hh	/^void ExternalVelocityMomenta<T,Lattice>::computeStress ($/;"	f	class:olb::ExternalVelocityMomenta
computeStress	dynamics.hh	/^void NoDynamics<T,Lattice>::computeStress ($/;"	f	class:olb::NoDynamics
computeStress	lbHelpers.h	/^    static void computeStress ($/;"	f	struct:olb::BoundaryHelpers
computeStress	lbHelpers.h	/^    static void computeStress(Cell<T,Lattice> const& cell, T rho, const T u[Lattice<T>::d],$/;"	f	struct:olb::lbHelpers
computeStress	lbHelpers.h	/^    static void computeStress(T const* cell, T rho, const T u[Descriptor::d],$/;"	f	struct:olb::lbDynamicsHelpers
computeStress	lbHelpers2D.h	/^    static void computeStress(T const* cell, T rho, const T u[2], T pi[3]) {$/;"	f	struct:olb::lbDynamicsHelpers
computeStress	lbHelpers3D.h	/^    static void computeStress(T const* cell, T rho, const T u[3], T pi[6]) {$/;"	f	struct:olb::lbDynamicsHelpers
computeStress	momentaOnBoundaries.hh	/^void EquilibriumBM<T,Lattice>::computeStress ($/;"	f	class:olb::EquilibriumBM
computeStress	momentaOnBoundaries.hh	/^void FixedVelocityBM<T,Lattice>::computeStress ($/;"	f	class:olb::FixedVelocityBM
computeStress	momentaOnBoundaries.hh	/^void FreeStressBM<T,Lattice>::computeStress ($/;"	f	class:olb::FreeStressBM
computeStress	momentaOnBoundaries.hh	/^void RegularizedBM<T,Lattice,direction,orientation>::computeStress ($/;"	f	class:olb::RegularizedBM
computeStress	momentaOnBoundaries2D.hh	/^void InnerCornerVelBM2D<T,Lattice,normalX,normalY>::computeStress ($/;"	f	class:olb::InnerCornerVelBM2D
computeStress	momentaOnBoundaries3D.hh	/^    computeStress ($/;"	f	class:olb::InnerEdgeVelBM3D
computeStress	momentaOnBoundaries3D.hh	/^void InnerCornerVelBM3D<T,Lattice,normalX,normalY,normalZ>::computeStress ($/;"	f	class:olb::InnerCornerVelBM3D
computeU	cell.h	/^    void computeU(T u[Lattice<T>::d]) const {$/;"	f	class:olb::Cell
computeU	dynamics.hh	/^void BasicDynamics<T,Lattice>::computeU ($/;"	f	class:olb::BasicDynamics
computeU	dynamics.hh	/^void BounceBack<T,Lattice>::computeU ($/;"	f	class:olb::BounceBack
computeU	dynamics.hh	/^void BulkMomenta<T,Lattice>::computeU(Cell<T,Lattice> const& cell, T u[Lattice<T>::d]) const$/;"	f	class:olb::BulkMomenta
computeU	dynamics.hh	/^void ExternalVelocityMomenta<T,Lattice>::computeU(Cell<T,Lattice> const& cell, T u[Lattice<T>::d]) const$/;"	f	class:olb::ExternalVelocityMomenta
computeU	dynamics.hh	/^void NoDynamics<T,Lattice>::computeU ($/;"	f	class:olb::NoDynamics
computeU	momentaOnBoundaries.hh	/^void EquilibriumBM<T,Lattice>::computeU ($/;"	f	class:olb::EquilibriumBM
computeU	momentaOnBoundaries.hh	/^void FixedVelocityBM<T,Lattice>::computeU(Cell<T,Lattice> const& cell, T u[Lattice<T>::d]) const$/;"	f	class:olb::FixedVelocityBM
computeU	momentaOnBoundaries.hh	/^void PressureBM<T,Lattice,direction,orientation>::computeU ($/;"	f	class:olb::PressureBM
computeU	momentaOnBoundaries.hh	/^void VelocityBM<T,Lattice,direction,orientation>::computeU ($/;"	f	class:olb::VelocityBM
computeU	momentaOnBoundaries2D.hh	/^void InnerCornerVelBM2D<T,Lattice,normalX,normalY>::computeU ($/;"	f	class:olb::InnerCornerVelBM2D
computeU	momentaOnBoundaries3D.hh	/^void InnerCornerVelBM3D<T,Lattice,normalX,normalY,normalZ>::computeU ($/;"	f	class:olb::InnerCornerVelBM3D
computeU	momentaOnBoundaries3D.hh	/^void InnerEdgeVelBM3D<T,Lattice,plane,normal1,normal2>::computeU ($/;"	f	class:olb::InnerEdgeVelBM3D
computeVelocityField	dataAnalysis2D.hh	/^void DataAnalysis2D<T,Lattice>::computeVelocityField() const {$/;"	f	class:olb::DataAnalysis2D
computeVelocityField	dataAnalysis3D.hh	/^void DataAnalysis3D<T,Lattice>::computeVelocityField() const {$/;"	f	class:olb::DataAnalysis3D
computeVelocityNormField	dataAnalysis2D.hh	/^void DataAnalysis2D<T,Lattice>::computeVelocityNormField() const {$/;"	f	class:olb::DataAnalysis2D
computeVelocityNormField	dataAnalysis3D.hh	/^void DataAnalysis3D<T,Lattice>::computeVelocityNormField() const {$/;"	f	class:olb::DataAnalysis3D
computeVorticityField	dataAnalysis2D.hh	/^void DataAnalysis2D<T,Lattice>::computeVorticityField() const {$/;"	f	class:olb::DataAnalysis2D
computeVorticityField	dataAnalysis3D.hh	/^void DataAnalysis3D<T,Lattice>::computeVorticityField() const {$/;"	f	class:olb::DataAnalysis3D
computeVorticityNormField	dataAnalysis3D.hh	/^void DataAnalysis3D<T,Lattice>::computeVorticityNormField() const {$/;"	f	class:olb::DataAnalysis3D
constRhoBgkCollision	lbHelpers.h	/^    static T constRhoBgkCollision(Cell<T,Lattice>& cell,$/;"	f	struct:olb::lbHelpers
constRhoBgkCollision	lbHelpers.h	/^    static T constRhoBgkCollision(T* cell, T rho, const T u[Descriptor::d], T ratioRho, T omega) {$/;"	f	struct:olb::lbDynamicsHelpers
constRhoBgkCollision	lbHelpers2D.h	/^    static T constRhoBgkCollision(T* cell, T rho, const T u[2], T ratioRho, T omega) {$/;"	f	struct:olb::lbDynamicsHelpers
constRhoBgkCollision	lbHelpers3D.h	/^    static T constRhoBgkCollision(T* cell, T rho, const T u[3], T ratioRho, T omega) {$/;"	f	struct:olb::lbDynamicsHelpers
constRhoCollision	d3q13Helpers.h	/^    static T constRhoCollision( Cell<T,descriptors::D3Q13Descriptor>& cell,$/;"	f	struct:olb::d3q13Helpers
construct	dataFields2D.hh	/^void ScalarField2D<T>::construct() {$/;"	f	class:olb::ScalarField2D
construct	dataFields2D.hh	/^void TensorField2D<T,nDim>::construct() {$/;"	f	class:olb::TensorField2D
construct	dataFields3D.hh	/^void ScalarField3D<T>::construct() {$/;"	f	class:olb::ScalarField3D
construct	dataFields3D.hh	/^void TensorField3D<T,nDim>::construct() {$/;"	f	class:olb::TensorField3D
contained	util.h	/^    inline bool contained(int x, int y, int z,$/;"	f	namespace:olb::util
contained	util.h	/^    inline bool contained(int x, int y,$/;"	f	namespace:olb::util
convBuffer	serializer.h	/^    mutable std::vector<TConv> convBuffer;$/;"	m	class:olb::TypeConversionSerializer
convergeFixedVelocity	simulationSetup2D.hh	/^void convergeFixedVelocity(BlockLattice2D<T,Lattice>& lattice,$/;"	f	namespace:olb
convergeFixedVelocity	simulationSetup3D.hh	/^void convergeFixedVelocity(BlockLattice3D<T,Lattice>& lattice,$/;"	f	namespace:olb
copyDataBlock	serializer.hh	/^void copyDataBlock(Serializable<T> const& from, Serializable<T>& to, IndexOrdering::OrderingT ordering) {$/;"	f	namespace:olb
copySerializedData	serializer.hh	/^void copySerializedData(DataSerializer<T> const& serializer, DataUnSerializer<T>& unSerializer) {$/;"	f	namespace:olb
createInterpBoundaryCondition2D	boundaryCondition2D.h	/^createInterpBoundaryCondition2D(BlockStructure2D<T,Lattice>& block) {$/;"	f	namespace:olb
createInterpBoundaryCondition2D	boundaryCondition2D.hh	/^OnLatticeBoundaryCondition2D<T,Lattice>* createInterpBoundaryCondition2D(BlockStructure2D<T,Lattice>& block) {$/;"	f	namespace:olb
createInterpBoundaryCondition3D	boundaryCondition3D.h	/^createInterpBoundaryCondition3D(BlockStructure3D<T,Lattice>& block) {$/;"	f	namespace:olb
createInterpBoundaryCondition3D	boundaryCondition3D.hh	/^OnLatticeBoundaryCondition3D<T,Lattice>* createInterpBoundaryCondition3D(BlockStructure3D<T,Lattice>& block) {$/;"	f	namespace:olb
createLocalBoundaryCondition2D	boundaryCondition2D.h	/^createLocalBoundaryCondition2D(BlockStructure2D<T,Lattice>& block) {$/;"	f	namespace:olb
createLocalBoundaryCondition2D	boundaryCondition2D.hh	/^OnLatticeBoundaryCondition2D<T,Lattice>* createLocalBoundaryCondition2D(BlockStructure2D<T,Lattice>& block) {$/;"	f	namespace:olb
createLocalBoundaryCondition3D	boundaryCondition3D.h	/^createLocalBoundaryCondition3D(BlockStructure3D<T,Lattice>& block) {$/;"	f	namespace:olb
createLocalBoundaryCondition3D	boundaryCondition3D.hh	/^OnLatticeBoundaryCondition3D<T,Lattice>* createLocalBoundaryCondition3D(BlockStructure3D<T,Lattice>& block) {$/;"	f	namespace:olb
d	latticeDescriptors.h	/^        enum { d = 2, q = 9 };      \/\/\/< number of dimensions\/distr. functions$/;"	e	enum:olb::descriptors::D2Q9DescriptorBase::__anon2
d	latticeDescriptors.h	/^        enum { d = 3, q = 13 };     \/\/\/< number of dimensions\/distr. functions$/;"	e	enum:olb::descriptors::D3Q13DescriptorBase::__anon3
d	latticeDescriptors.h	/^        enum { d = 3, q = 15 };     \/\/\/< number of dimensions\/distr. functions$/;"	e	enum:olb::descriptors::D3Q15DescriptorBase::__anon4
d	latticeDescriptors.h	/^        enum { d = 3, q = 19 };     \/\/\/< number of dimensions\/distr. functions$/;"	e	enum:olb::descriptors::D3Q19DescriptorBase::__anon5
d	latticeDescriptors.h	/^        enum { d = 3, q = 27 };     \/\/\/< number of dimensions\/distr. functions$/;"	e	enum:olb::descriptors::D3Q27DescriptorBase::__anon6
d3q13Helpers	d3q13Helpers.h	/^struct d3q13Helpers {$/;"	s	namespace:olb
data	latticeDescriptors.h	/^        T data[ExternalField::numScalars];$/;"	m	class:olb::descriptors::ExternalFieldArray
dataAnalysis	blockLattice2D.h	/^    DataAnalysis2D<T,Lattice> *dataAnalysis;$/;"	m	class:olb::BlockLattice2D
dataAnalysis	blockLattice3D.h	/^    DataAnalysis3D<T,Lattice> *dataAnalysis;$/;"	m	class:olb::BlockLattice3D
dataAnalysis	blockLatticeView2D.h	/^    DataAnalysis2D<T,Lattice>    *dataAnalysis;$/;"	m	class:olb::BlockLatticeView2D
dataAnalysis	blockLatticeView3D.h	/^    DataAnalysis3D<T,Lattice>    *dataAnalysis;$/;"	m	class:olb::BlockLatticeView3D
deConstruct	dataFields2D.hh	/^void ScalarField2D<T>::deConstruct() {$/;"	f	class:olb::ScalarField2D
deConstruct	dataFields2D.hh	/^void TensorField2D<T,nDim>::deConstruct() {$/;"	f	class:olb::TensorField2D
deConstruct	dataFields3D.hh	/^void ScalarField3D<T>::deConstruct() {$/;"	f	class:olb::ScalarField3D
deConstruct	dataFields3D.hh	/^void TensorField3D<T,nDim>::deConstruct() {$/;"	f	class:olb::TensorField3D
defaultFields	dataAnalysis2D.h	/^    mutable AnalysisFieldsImpl2D<T,Lattice> defaultFields;$/;"	m	class:olb::DataAnalysis2D
defaultFields	dataAnalysis3D.h	/^    mutable AnalysisFieldsImpl3D<T,Lattice> defaultFields;$/;"	m	class:olb::DataAnalysis3D
defineAllMomenta	cell.h	/^    void defineAllMomenta ($/;"	f	class:olb::Cell
defineAllMomenta	dynamics.hh	/^void BasicDynamics<T,Lattice>::defineAllMomenta ($/;"	f	class:olb::BasicDynamics
defineAllMomenta	dynamics.hh	/^void BounceBack<T,Lattice>::defineAllMomenta ($/;"	f	class:olb::BounceBack
defineAllMomenta	dynamics.hh	/^void BulkMomenta<T,Lattice>::defineAllMomenta ($/;"	f	class:olb::BulkMomenta
defineAllMomenta	dynamics.hh	/^void ExternalVelocityMomenta<T,Lattice>::defineAllMomenta ($/;"	f	class:olb::ExternalVelocityMomenta
defineAllMomenta	dynamics.hh	/^void NoDynamics<T,Lattice>::defineAllMomenta ($/;"	f	class:olb::NoDynamics
defineAllMomenta	momentaOnBoundaries.hh	/^void EquilibriumBM<T,Lattice>::defineAllMomenta ($/;"	f	class:olb::EquilibriumBM
defineAllMomenta	momentaOnBoundaries.hh	/^void FixedVelocityBM<T,Lattice>::defineAllMomenta ($/;"	f	class:olb::FixedVelocityBM
defineAllMomenta	momentaOnBoundaries.hh	/^void PressureBM<T,Lattice,direction,orientation>::defineAllMomenta ($/;"	f	class:olb::PressureBM
defineAllMomenta	momentaOnBoundaries.hh	/^void VelocityBM<T,Lattice,direction,orientation>::defineAllMomenta ($/;"	f	class:olb::VelocityBM
defineAllMomenta	momentaOnBoundaries2D.hh	/^void InnerCornerVelBM2D<T,Lattice,normalX,normalY>::defineAllMomenta ($/;"	f	class:olb::InnerCornerVelBM2D
defineAllMomenta	momentaOnBoundaries3D.hh	/^    defineAllMomenta ($/;"	f	class:olb::InnerEdgeVelBM3D
defineAllMomenta	momentaOnBoundaries3D.hh	/^void InnerCornerVelBM3D<T,Lattice,normalX,normalY,normalZ>::defineAllMomenta ($/;"	f	class:olb::InnerCornerVelBM3D
defineDynamics	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::defineDynamics ($/;"	f	class:olb::BlockLattice2D
defineDynamics	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::defineDynamics ($/;"	f	class:olb::BlockLattice3D
defineDynamics	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::defineDynamics ($/;"	f	class:olb::BlockLatticeView2D
defineDynamics	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::defineDynamics ($/;"	f	class:olb::BlockLatticeView3D
defineDynamics	cell.hh	/^void Cell<T,Lattice>::defineDynamics(Dynamics<T,Lattice>* dynamics_) {$/;"	f	class:olb::Cell
defineExternalField	cell.h	/^    void defineExternalField(int pos, int size, const T* ext) {$/;"	f	class:olb::Cell
defineExternalField	dynamics.hh	/^void Dynamics<T,Lattice>::defineExternalField ($/;"	f	class:olb::Dynamics
definePopulations	cell.h	/^    void definePopulations(const T* f) {$/;"	f	class:olb::Cell
definePopulations	dynamics.hh	/^void Dynamics<T,Lattice>::definePopulations(Cell<T,Lattice>& cell, const T* f)$/;"	f	class:olb::Dynamics
defineRho	cell.h	/^    void defineRho(T rho) {$/;"	f	class:olb::Cell
defineRho	dynamics.hh	/^void BasicDynamics<T,Lattice>::defineRho(Cell<T,Lattice>& cell, T rho) {$/;"	f	class:olb::BasicDynamics
defineRho	dynamics.hh	/^void BounceBack<T,Lattice>::defineRho(Cell<T,Lattice>& cell, T rho)$/;"	f	class:olb::BounceBack
defineRho	dynamics.hh	/^void BulkMomenta<T,Lattice>::defineRho(Cell<T,Lattice>& cell, T rho) {$/;"	f	class:olb::BulkMomenta
defineRho	dynamics.hh	/^void ExternalVelocityMomenta<T,Lattice>::defineRho(Cell<T,Lattice>& cell, T rho) {$/;"	f	class:olb::ExternalVelocityMomenta
defineRho	dynamics.hh	/^void NoDynamics<T,Lattice>::defineRho(Cell<T,Lattice>& cell, T rho)$/;"	f	class:olb::NoDynamics
defineRho	momentaOnBoundaries.hh	/^void EquilibriumBM<T,Lattice>::defineRho ($/;"	f	class:olb::EquilibriumBM
defineRho	momentaOnBoundaries.hh	/^void FixedVelocityBM<T,Lattice>::defineRho(Cell<T,Lattice>& cell, T rho) {$/;"	f	class:olb::FixedVelocityBM
defineRho	momentaOnBoundaries.hh	/^void PressureBM<T,Lattice,direction,orientation>::defineRho ($/;"	f	class:olb::PressureBM
defineRho	momentaOnBoundaries.hh	/^void PressureBM<T,Lattice,direction,orientation>::defineRho(T rho_ ) {$/;"	f	class:olb::PressureBM
defineRho	momentaOnBoundaries.hh	/^void VelocityBM<T,Lattice,direction,orientation>::defineRho ($/;"	f	class:olb::VelocityBM
defineRho	momentaOnBoundaries2D.hh	/^void InnerCornerVelBM2D<T,Lattice,normalX,normalY>::defineRho ($/;"	f	class:olb::InnerCornerVelBM2D
defineRho	momentaOnBoundaries3D.hh	/^void InnerCornerVelBM3D<T,Lattice,normalX,normalY,normalZ>::defineRho ($/;"	f	class:olb::InnerCornerVelBM3D
defineRho	momentaOnBoundaries3D.hh	/^void InnerEdgeVelBM3D<T,Lattice,plane,normal1,normal2>::defineRho ($/;"	f	class:olb::InnerEdgeVelBM3D
defineRhoU	cell.h	/^    void defineRhoU(T rho, const T u[Lattice<T>::d]) {$/;"	f	class:olb::Cell
defineRhoU	dynamics.hh	/^void BasicDynamics<T,Lattice>::defineRhoU ($/;"	f	class:olb::BasicDynamics
defineRhoU	dynamics.hh	/^void BounceBack<T,Lattice>::defineRhoU ($/;"	f	class:olb::BounceBack
defineRhoU	dynamics.hh	/^void BulkMomenta<T,Lattice>::defineRhoU ($/;"	f	class:olb::BulkMomenta
defineRhoU	dynamics.hh	/^void ExternalVelocityMomenta<T,Lattice>::defineRhoU ($/;"	f	class:olb::ExternalVelocityMomenta
defineRhoU	dynamics.hh	/^void Momenta<T,Lattice>::defineRhoU ($/;"	f	class:olb::Momenta
defineRhoU	dynamics.hh	/^void NoDynamics<T,Lattice>::defineRhoU ($/;"	f	class:olb::NoDynamics
defineRhoU	momentaOnBoundaries.hh	/^void FixedVelocityBM<T,Lattice>::defineRhoU ($/;"	f	class:olb::FixedVelocityBM
defineStress	cell.h	/^    void defineStress ($/;"	f	class:olb::Cell
defineU	cell.h	/^    void defineU(const T u[Lattice<T>::d]) {$/;"	f	class:olb::Cell
defineU	dynamics.hh	/^void BasicDynamics<T,Lattice>::defineU ($/;"	f	class:olb::BasicDynamics
defineU	dynamics.hh	/^void BounceBack<T,Lattice>::defineU ($/;"	f	class:olb::BounceBack
defineU	dynamics.hh	/^void BulkMomenta<T,Lattice>::defineU ($/;"	f	class:olb::BulkMomenta
defineU	dynamics.hh	/^void ExternalVelocityMomenta<T,Lattice>::defineU ($/;"	f	class:olb::ExternalVelocityMomenta
defineU	dynamics.hh	/^void NoDynamics<T,Lattice>::defineU ($/;"	f	class:olb::NoDynamics
defineU	momentaOnBoundaries.hh	/^void EquilibriumBM<T,Lattice>::defineU ($/;"	f	class:olb::EquilibriumBM
defineU	momentaOnBoundaries.hh	/^void FixedVelocityBM<T,Lattice>::defineU ($/;"	f	class:olb::FixedVelocityBM
defineU	momentaOnBoundaries.hh	/^void PressureBM<T,Lattice,direction,orientation>::defineU ($/;"	f	class:olb::PressureBM
defineU	momentaOnBoundaries.hh	/^void VelocityBM<T,Lattice,direction,orientation>::defineU ($/;"	f	class:olb::VelocityBM
defineU	momentaOnBoundaries2D.hh	/^void InnerCornerVelBM2D<T,Lattice,normalX,normalY>::defineU ($/;"	f	class:olb::InnerCornerVelBM2D
defineU	momentaOnBoundaries3D.hh	/^void InnerCornerVelBM3D<T,Lattice,normalX,normalY,normalZ>::defineU ($/;"	f	class:olb::InnerCornerVelBM3D
defineU	momentaOnBoundaries3D.hh	/^void InnerEdgeVelBM3D<T,Lattice,plane,normal1,normal2>::defineU ($/;"	f	class:olb::InnerEdgeVelBM3D
descriptors	latticeDescriptors.cpp	/^    namespace descriptors {$/;"	n	namespace:olb	file:
descriptors	latticeDescriptors.h	/^namespace descriptors {$/;"	n	namespace:olb
descriptors	latticeDescriptors.hh	/^namespace descriptors {$/;"	n	namespace:olb
direction1	boundaryPostProcessors3D.h	/^    enum { direction1 = (plane+1)%3, direction2 = (plane+2)%3 };$/;"	e	enum:olb::OuterVelocityEdgeProcessor3D::__anon1
direction1	momentaOnBoundaries3D.h	/^    enum { direction1 = (plane+1)%3, direction2 = (plane+2)%3 };$/;"	e	enum:olb::InnerEdgeVelBM3D::__anon7
direction2	boundaryPostProcessors3D.h	/^    enum { direction1 = (plane+1)%3, direction2 = (plane+2)%3 };$/;"	e	enum:olb::OuterVelocityEdgeProcessor3D::__anon1
direction2	momentaOnBoundaries3D.h	/^    enum { direction1 = (plane+1)%3, direction2 = (plane+2)%3 };$/;"	e	enum:olb::InnerEdgeVelBM3D::__anon7
directories	singleton.h	/^inline Directories& directories() {$/;"	f	namespace:olb::singleton
divRhoUField	dataAnalysis2D.h	/^    ScalarField2D<T>   divRhoUField;$/;"	m	struct:olb::AnalysisFieldsImpl2D
divRhoUField	dataAnalysis2D.h	/^    ScalarField2D<T>&   divRhoUField;$/;"	m	struct:olb::AnalysisFields2D
divRhoUField	dataAnalysis3D.h	/^    ScalarField3D<T>   divRhoUField;$/;"	m	struct:olb::AnalysisFieldsImpl3D
divRhoUField	dataAnalysis3D.h	/^    ScalarField3D<T>&   divRhoUField;$/;"	m	struct:olb::AnalysisFields3D
divRhoUFieldComputed	analysisFlags.h	/^    bool divRhoUFieldComputed;$/;"	m	struct:olb::AnalysisFlags2D
divRhoUFieldComputed	analysisFlags.h	/^    bool divRhoUFieldComputed;$/;"	m	struct:olb::AnalysisFlags3D
dynamicParams	dynamics.h	/^namespace dynamicParams {$/;"	n	namespace:olb
dynamics	cell.h	/^    Dynamics<T,Lattice>* dynamics;  \/\/\/< local LB dynamics$/;"	m	class:olb::Cell
dynamicsVector	boundaryInstantiator2D.h	/^    std::vector<Dynamics<T,Lattice>*> dynamicsVector;$/;"	m	class:olb::BoundaryConditionInstantiator2D
dynamicsVector	boundaryInstantiator3D.h	/^    std::vector<Dynamics<T,Lattice>*> dynamicsVector;$/;"	m	class:olb::BoundaryConditionInstantiator3D
equilibrium	lbHelpers.h	/^    static T equilibrium(int iPop, T rho, const T u[Descriptor::d], const T uSqr) {$/;"	f	struct:olb::lbDynamicsHelpers
equilibrium	lbHelpers.h	/^    static T equilibrium(int iPop, T rho, const T u[Lattice<T>::d], const T uSqr) {$/;"	f	struct:olb::lbHelpers
equilibrium	lbHelpers2D.h	/^    static T equilibrium( int iPop, T rho, const T u[2], T uSqr ) {$/;"	f	struct:olb::lbDynamicsHelpers
equilibrium	lbHelpers3D.h	/^    static T equilibrium( int iPop, T rho, const T u[3], const T uSqr ) {$/;"	f	struct:olb::lbDynamicsHelpers
executeCoupling	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::executeCoupling() {$/;"	f	class:olb::BlockLattice2D
executeCoupling	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::executeCoupling(int x0_, int x1_, int y0_, int y1_) {$/;"	f	class:olb::BlockLattice2D
executeCoupling	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::executeCoupling ($/;"	f	class:olb::BlockLattice3D
executeCoupling	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::executeCoupling() {$/;"	f	class:olb::BlockLattice3D
executeCoupling	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::executeCoupling ($/;"	f	class:olb::BlockLatticeView2D
executeCoupling	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::executeCoupling() {$/;"	f	class:olb::BlockLatticeView2D
executeCoupling	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::executeCoupling($/;"	f	class:olb::BlockLatticeView3D
executeCoupling	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::executeCoupling() {$/;"	f	class:olb::BlockLatticeView3D
extent	boundaryPostProcessors2D.h	/^    virtual int extent() const { return 1; }$/;"	f	class:olb::StraightFdBoundaryProcessor2D
extent	boundaryPostProcessors2D.h	/^    virtual int extent() const { return 2; }$/;"	f	class:olb::OuterVelocityCornerProcessor2D
extent	boundaryPostProcessors2D.h	/^    virtual int extent(int whichDirection) const { return 1; }$/;"	f	class:olb::StraightFdBoundaryProcessor2D
extent	boundaryPostProcessors2D.h	/^    virtual int extent(int whichDirection) const { return 2; }$/;"	f	class:olb::OuterVelocityCornerProcessor2D
extent	boundaryPostProcessors3D.h	/^    virtual int extent() const { return 1; }$/;"	f	class:olb::PlaneFdBoundaryProcessor3D
extent	boundaryPostProcessors3D.h	/^    virtual int extent() const { return 2; }$/;"	f	class:olb::OuterVelocityCornerProcessor3D
extent	boundaryPostProcessors3D.h	/^    virtual int extent() const { return 2; }$/;"	f	class:olb::OuterVelocityEdgeProcessor3D
extent	boundaryPostProcessors3D.h	/^    virtual int extent(int whichDirection) const { return 1; }$/;"	f	class:olb::PlaneFdBoundaryProcessor3D
extent	boundaryPostProcessors3D.h	/^    virtual int extent(int whichDirection) const { return 2; }$/;"	f	class:olb::OuterVelocityCornerProcessor3D
extent	boundaryPostProcessors3D.h	/^    virtual int extent(int whichDirection) const { return 2; }$/;"	f	class:olb::OuterVelocityEdgeProcessor3D
extent	postProcessing.h	/^    virtual int extent() const {$/;"	f	struct:olb::GlobalPostProcessor2D
extent	postProcessing.h	/^    virtual int extent() const {$/;"	f	struct:olb::GlobalPostProcessor3D
extent	postProcessing.h	/^    virtual int extent(int direction) const {$/;"	f	struct:olb::GlobalPostProcessor2D
extent	postProcessing.h	/^    virtual int extent(int direction) const {$/;"	f	struct:olb::GlobalPostProcessor3D
external	cell.h	/^    External             external;  \/\/\/< external scalars$/;"	m	class:olb::Cell
extract	postProcessing.hh	/^    extract(int x0_, int x1_, int y0_, int y1_)$/;"	f	class:olb::PostProcessorGenerator2D
extract	postProcessing.hh	/^    extract(int x0_, int x1_, int y0_, int y1_, int z0_, int z1_)$/;"	f	class:olb::LatticeCouplingGenerator3D
extract	postProcessing.hh	/^    extract(int x0_, int x1_, int y0_, int y1_, int z0_, int z1_)$/;"	f	class:olb::PostProcessorGenerator3D
extract	postProcessing.hh	/^bool LatticeCouplingGenerator2D<T,Lattice>::extract(int x0_, int x1_, int y0_, int y1_)$/;"	f	class:olb::LatticeCouplingGenerator2D
extractComponent	dataFields2D.hh	/^ScalarField2D<T> const& TensorField2D<T,nDim>::extractComponent(int whichDim)$/;"	f	class:olb::TensorField2D
extractComponent	dataFields3D.hh	/^ScalarField3D<T> const& TensorField3D<T,nDim>::extractComponent(int iDim)$/;"	f	class:olb::TensorField3D
f	cell.h	/^    fPop                 f;         \/\/\/< distribution functions$/;"	m	class:olb::Cell
fPop	cell.h	/^    typedef T fPop[Lattice<T>::q];$/;"	t	class:olb::Cell
fd	finiteDifference.h	/^    namespace fd {$/;"	n	namespace:olb
fd	finiteDifference2D.h	/^namespace fd {$/;"	n	namespace:olb
fd	finiteDifference3D.h	/^namespace fd {$/;"	n	namespace:olb
field	dataFields2D.h	/^    T   **field;$/;"	m	class:olb::ScalarField2D
field	dataFields2D.h	/^    Tensor **field;$/;"	m	class:olb::TensorField2D
field	dataFields3D.h	/^    T   ***field;$/;"	m	class:olb::ScalarField3D
field	dataFields3D.h	/^    Tensor ***field;$/;"	m	class:olb::TensorField3D
fields	dataAnalysis2D.h	/^    mutable AnalysisFields2D<T,Lattice>     fields;$/;"	m	class:olb::DataAnalysis2D
fields	dataAnalysis3D.h	/^    mutable AnalysisFields3D<T,Lattice>     fields;$/;"	m	class:olb::DataAnalysis3D
findVelocity	util.h	/^    int findVelocity(const int v[Descriptor::d]) {$/;"	f	namespace:olb::util
firstCall	postProcessing.h	/^    bool firstCall;$/;"	m	class:olb::LatticeStatistics
firstGlobNum	loadBalancer.h	/^        int firstGlobNum;$/;"	m	class:olb::loadBalancer
firstOrderLbHelpers	firstOrderLbHelpers.h	/^struct firstOrderLbHelpers {$/;"	s	namespace:olb
fixU	momentaOnBoundaries.h	/^    T fixU[Lattice<T>::d];$/;"	m	class:olb::FixedVelocityBM
flags	dataAnalysis2D.h	/^    mutable AnalysisFlags2D                 flags;$/;"	m	class:olb::DataAnalysis2D
flags	dataAnalysis3D.h	/^    mutable AnalysisFlags3D                 flags;$/;"	m	class:olb::DataAnalysis3D
forAll	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::forAll ($/;"	f	class:olb::BlockLattice2D
forAll	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::forAll(WriteCellFunctional<T,Lattice> const& application) {$/;"	f	class:olb::BlockLattice2D
forAll	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::forAll ($/;"	f	class:olb::BlockLattice3D
forAll	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::forAll(WriteCellFunctional<T,Lattice> const& application) {$/;"	f	class:olb::BlockLattice3D
forAll	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::forAll ($/;"	f	class:olb::BlockLatticeView2D
forAll	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::forAll(WriteCellFunctional<T,Lattice> const& application)$/;"	f	class:olb::BlockLatticeView2D
forAll	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::forAll ($/;"	f	class:olb::BlockLatticeView3D
forAll	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::forAll(WriteCellFunctional<T,Lattice> const& application) {$/;"	f	class:olb::BlockLatticeView3D
forceBeginsAt	dynamics.h	/^    static const int forceBeginsAt = Lattice<T>::ExternalField::forceBeginsAt;$/;"	m	class:olb::ForcedBGKdynamics
forceBeginsAt	latticeDescriptors.h	/^        static const int forceBeginsAt = 0;$/;"	m	struct:olb::descriptors::Force2dDescriptor
forceBeginsAt	latticeDescriptors.h	/^        static const int forceBeginsAt = 0;$/;"	m	struct:olb::descriptors::Force3dDescriptor
forceBeginsAt	latticeDescriptors.h	/^        static const int forceBeginsAt = 0;$/;"	m	struct:olb::descriptors::NoExternalField
forward	serializer.h	/^    typedef enum {forward, backward, memorySaving} OrderingT;$/;"	e	enum:olb::IndexOrdering::__anon9
fromPiToFneq	firstOrderLbHelpers.h	/^    static T fromPiToFneq ($/;"	f	struct:olb::firstOrderLbHelpers
fromPiToFneq0	firstOrderLbHelpers2D.h	/^    T fromPiToFneq0(const T pi[3]) {$/;"	f	namespace:olb::neqPiD2Q9
fromPiToFneq1	firstOrderLbHelpers2D.h	/^    T fromPiToFneq1(const T pi[3]) {$/;"	f	namespace:olb::neqPiD2Q9
fromPiToFneq2	firstOrderLbHelpers2D.h	/^    T fromPiToFneq2(const T pi[3]) {$/;"	f	namespace:olb::neqPiD2Q9
fromPiToFneq3	firstOrderLbHelpers2D.h	/^    T fromPiToFneq3(const T pi[3]) {$/;"	f	namespace:olb::neqPiD2Q9
fromPiToFneq4	firstOrderLbHelpers2D.h	/^    T fromPiToFneq4(const T pi[3]) {$/;"	f	namespace:olb::neqPiD2Q9
fromStrainToFneq	firstOrderLbHelpers.h	/^    static T fromStrainToFneq ($/;"	f	struct:olb::firstOrderLbHelpers
gatherStats	postProcessing.h	/^    void gatherStats(T rho, T uSqr) {$/;"	f	class:olb::LatticeStatistics
generate	boundaryPostProcessors2D.hh	/^    StraightFdBoundaryProcessorGenerator2D<T,Lattice,direction,orientation>::generate() const$/;"	f	class:olb::StraightFdBoundaryProcessorGenerator2D
generate	boundaryPostProcessors2D.hh	/^OuterVelocityCornerProcessorGenerator2D<T, Lattice, xNormal, yNormal>::generate() const$/;"	f	class:olb::OuterVelocityCornerProcessorGenerator2D
generate	boundaryPostProcessors3D.hh	/^         generate() const$/;"	f	class:olb::OuterVelocityEdgeProcessorGenerator3D
generate	boundaryPostProcessors3D.hh	/^        generate() const$/;"	f	class:olb::OuterVelocityCornerProcessorGenerator3D
generate	boundaryPostProcessors3D.hh	/^        generate() const$/;"	f	class:olb::PlaneFdBoundaryProcessorGenerator3D
generate	postProcessing.hh	/^PostProcessor2D<T,Lattice>* StatPPGenerator2D<T,Lattice>::generate() const$/;"	f	class:olb::StatPPGenerator2D
generate	postProcessing.hh	/^PostProcessor3D<T,Lattice>* StatPPGenerator3D<T,Lattice>::generate() const {$/;"	f	class:olb::StatPPGenerator3D
get	blockLattice2D.h	/^    virtual Cell<T,Lattice> const& get(int iX, int iY) const {$/;"	f	class:olb::BlockLattice2D
get	blockLattice2D.h	/^    virtual Cell<T,Lattice>& get(int iX, int iY) {$/;"	f	class:olb::BlockLattice2D
get	blockLattice3D.h	/^    virtual Cell<T,Lattice> const& get(int iX, int iY, int iZ) const {$/;"	f	class:olb::BlockLattice3D
get	blockLattice3D.h	/^    virtual Cell<T,Lattice>& get(int iX, int iY, int iZ) {$/;"	f	class:olb::BlockLattice3D
get	blockLatticeView2D.hh	/^Cell<T,Lattice> const& BlockLatticeView2D<T,Lattice>::get ($/;"	f	class:olb::BlockLatticeView2D
get	blockLatticeView2D.hh	/^Cell<T,Lattice>& BlockLatticeView2D<T,Lattice>::get(int iX, int iY) {$/;"	f	class:olb::BlockLatticeView2D
get	blockLatticeView3D.hh	/^Cell<T,Lattice> const& BlockLatticeView3D<T,Lattice>::get ($/;"	f	class:olb::BlockLatticeView3D
get	blockLatticeView3D.hh	/^Cell<T,Lattice>& BlockLatticeView3D<T,Lattice>::get(int iX, int iY, int iZ) {$/;"	f	class:olb::BlockLatticeView3D
get	dataFields2D.h	/^    virtual T const& get(int iX, int iY) const {$/;"	f	class:olb::ScalarField2D
get	dataFields2D.h	/^    virtual T& get(int iX, int iY) {$/;"	f	class:olb::ScalarField2D
get	dataFields2D.h	/^    virtual Tensor const& get(int iX, int iY) const {$/;"	f	class:olb::TensorField2D
get	dataFields2D.h	/^    virtual Tensor& get(int iX, int iY) {$/;"	f	class:olb::TensorField2D
get	dataFields3D.h	/^    virtual T const& get(int iX, int iY, int iZ) const {$/;"	f	class:olb::ScalarField3D
get	dataFields3D.h	/^    virtual T& get(int iX, int iY, int iZ) {$/;"	f	class:olb::ScalarField3D
get	dataFields3D.h	/^    virtual Tensor const& get(int iX, int iY, int iZ) const {$/;"	f	class:olb::TensorField3D
get	dataFields3D.h	/^    virtual Tensor& get(int iX, int iY, int iZ) {$/;"	f	class:olb::TensorField3D
get	latticeDescriptors.h	/^        T const* get(int index) const {$/;"	f	class:olb::descriptors::ExternalFieldArray
get	latticeDescriptors.h	/^        T const* get(unsigned index) const {$/;"	f	class:olb::descriptors::ExternalFieldArray
get	latticeDescriptors.h	/^        T* get(int index) {$/;"	f	class:olb::descriptors::ExternalFieldArray
get	latticeDescriptors.h	/^        T* get(unsigned index) {$/;"	f	class:olb::descriptors::ExternalFieldArray
getAverageEnergy	postProcessing.h	/^    T getAverageEnergy()     const { return average_energy;}$/;"	f	class:olb::LatticeStatistics
getAverageEnergy	postProcessing.h	/^    T& getAverageEnergy() { return average_energy;}$/;"	f	class:olb::LatticeStatistics
getAverageRho	postProcessing.h	/^    T getAverageRho()        const { return average_rho;}$/;"	f	class:olb::LatticeStatistics
getAverageRho	postProcessing.h	/^    T& getAverageRho()    { return average_rho;}$/;"	f	class:olb::LatticeStatistics
getBlock	boundaryInstantiator2D.h	/^BlockStructure2D<T,Lattice> const& BoundaryConditionInstantiator2D<T,Lattice,BoundaryManager>::getBlock() const$/;"	f	class:olb::BoundaryConditionInstantiator2D
getBlock	boundaryInstantiator2D.h	/^BlockStructure2D<T,Lattice>& BoundaryConditionInstantiator2D<T,Lattice,BoundaryManager>::getBlock()$/;"	f	class:olb::BoundaryConditionInstantiator2D
getBlock	boundaryInstantiator3D.h	/^BlockStructure3D<T,Lattice> const& BoundaryConditionInstantiator3D<T,Lattice,BoundaryManager>::getBlock() const$/;"	f	class:olb::BoundaryConditionInstantiator3D
getBlock	boundaryInstantiator3D.h	/^BlockStructure3D<T,Lattice>& BoundaryConditionInstantiator3D<T,Lattice,BoundaryManager>::getBlock()$/;"	f	class:olb::BoundaryConditionInstantiator3D
getBounceBack	dynamics.hh	/^    BounceBack<T,Lattice>& getBounceBack() {$/;"	f	namespace:olb::instances
getBulkMomenta	dynamics.hh	/^    BulkMomenta<T,Lattice>& getBulkMomenta() {$/;"	f	namespace:olb::instances
getComponent	blockLattice2D.hh	/^SpatiallyExtendedObject2D const* BlockLattice2D<T,Lattice>::getComponent(int iBlock) const {$/;"	f	class:olb::BlockLattice2D
getComponent	blockLattice2D.hh	/^SpatiallyExtendedObject2D* BlockLattice2D<T,Lattice>::getComponent(int iBlock) {$/;"	f	class:olb::BlockLattice2D
getComponent	blockLattice3D.hh	/^SpatiallyExtendedObject3D const* BlockLattice3D<T,Lattice>::getComponent(int iBlock) const {$/;"	f	class:olb::BlockLattice3D
getComponent	blockLattice3D.hh	/^SpatiallyExtendedObject3D* BlockLattice3D<T,Lattice>::getComponent(int iBlock) {$/;"	f	class:olb::BlockLattice3D
getComponent	blockLatticeView2D.hh	/^SpatiallyExtendedObject2D const* BlockLatticeView2D<T,Lattice>::getComponent(int iBlock) const {$/;"	f	class:olb::BlockLatticeView2D
getComponent	blockLatticeView2D.hh	/^SpatiallyExtendedObject2D* BlockLatticeView2D<T,Lattice>::getComponent(int iBlock) {$/;"	f	class:olb::BlockLatticeView2D
getComponent	blockLatticeView3D.hh	/^SpatiallyExtendedObject3D const* BlockLatticeView3D<T,Lattice>::getComponent(int iBlock) const {$/;"	f	class:olb::BlockLatticeView3D
getComponent	blockLatticeView3D.hh	/^SpatiallyExtendedObject3D* BlockLatticeView3D<T,Lattice>::getComponent(int iBlock) {$/;"	f	class:olb::BlockLatticeView3D
getComponent	dataFields2D.hh	/^SpatiallyExtendedObject2D const* ScalarField2D<T>::getComponent(int iBlock) const {$/;"	f	class:olb::ScalarField2D
getComponent	dataFields2D.hh	/^SpatiallyExtendedObject2D const* TensorField2D<T,nDim>::getComponent(int iBlock) const {$/;"	f	class:olb::TensorField2D
getComponent	dataFields2D.hh	/^SpatiallyExtendedObject2D* ScalarField2D<T>::getComponent(int iBlock) {$/;"	f	class:olb::ScalarField2D
getComponent	dataFields2D.hh	/^SpatiallyExtendedObject2D* TensorField2D<T,nDim>::getComponent(int iBlock) {$/;"	f	class:olb::TensorField2D
getComponent	dataFields3D.hh	/^SpatiallyExtendedObject3D const* ScalarField3D<T>::getComponent(int iBlock) const {$/;"	f	class:olb::ScalarField3D
getComponent	dataFields3D.hh	/^SpatiallyExtendedObject3D const* TensorField3D<T,nDim>::getComponent(int iBlock) const {$/;"	f	class:olb::TensorField3D
getComponent	dataFields3D.hh	/^SpatiallyExtendedObject3D* ScalarField3D<T>::getComponent(int iBlock) {$/;"	f	class:olb::ScalarField3D
getComponent	dataFields3D.hh	/^SpatiallyExtendedObject3D* TensorField3D<T,nDim>::getComponent(int iBlock) {$/;"	f	class:olb::TensorField3D
getDataAnalysis	blockLattice2D.hh	/^DataAnalysisBase2D<T,Lattice> const& BlockLattice2D<T,Lattice>::getDataAnalysis() const {$/;"	f	class:olb::BlockLattice2D
getDataAnalysis	blockLattice3D.hh	/^DataAnalysisBase3D<T,Lattice> const& BlockLattice3D<T,Lattice>::getDataAnalysis() const {$/;"	f	class:olb::BlockLattice3D
getDataAnalysis	blockLatticeView2D.hh	/^DataAnalysisBase2D<T,Lattice> const& BlockLatticeView2D<T,Lattice>::getDataAnalysis() const {$/;"	f	class:olb::BlockLatticeView2D
getDataAnalysis	blockLatticeView3D.hh	/^DataAnalysisBase3D<T,Lattice> const& BlockLatticeView3D<T,Lattice>::getDataAnalysis() const {$/;"	f	class:olb::BlockLatticeView3D
getDataDistribution	blockLattice2D.hh	/^MultiDataDistribution2D BlockLattice2D<T,Lattice>::getDataDistribution() const {$/;"	f	class:olb::BlockLattice2D
getDataDistribution	blockLattice3D.hh	/^MultiDataDistribution3D BlockLattice3D<T,Lattice>::getDataDistribution() const {$/;"	f	class:olb::BlockLattice3D
getDataDistribution	blockLatticeView2D.hh	/^MultiDataDistribution2D BlockLatticeView2D<T,Lattice>::getDataDistribution() const {$/;"	f	class:olb::BlockLatticeView2D
getDataDistribution	blockLatticeView3D.hh	/^MultiDataDistribution3D BlockLatticeView3D<T,Lattice>::getDataDistribution() const {$/;"	f	class:olb::BlockLatticeView3D
getDataDistribution	dataFields2D.hh	/^MultiDataDistribution2D ScalarField2D<T>::getDataDistribution() const {$/;"	f	class:olb::ScalarField2D
getDataDistribution	dataFields2D.hh	/^MultiDataDistribution2D TensorField2D<T,nDim>::getDataDistribution() const {$/;"	f	class:olb::TensorField2D
getDataDistribution	dataFields3D.hh	/^MultiDataDistribution3D ScalarField3D<T>::getDataDistribution() const {$/;"	f	class:olb::ScalarField3D
getDataDistribution	dataFields3D.hh	/^MultiDataDistribution3D TensorField3D<T,nDim>::getDataDistribution() const {$/;"	f	class:olb::TensorField3D
getDeltaT	units.h	/^    T getDeltaT() const  { return getDeltaX()*getLatticeU(); }$/;"	f	class:olb::LBunits
getDeltaX	units.h	/^    T getDeltaX() const  { return (T)1\/(T)getResolution(); }$/;"	f	class:olb::LBunits
getDivRhoU	dataAnalysis2D.hh	/^    DataAnalysis2D<T,Lattice>::getDivRhoU() const$/;"	f	class:olb::DataAnalysis2D
getDivRhoU	dataAnalysis3D.hh	/^    DataAnalysis3D<T,Lattice>::getDivRhoU() const$/;"	f	class:olb::DataAnalysis3D
getDynamics	cell.hh	/^Dynamics<T,Lattice> const* Cell<T,Lattice>::getDynamics() const {$/;"	f	class:olb::Cell
getDynamics	cell.hh	/^Dynamics<T,Lattice>* Cell<T,Lattice>::getDynamics() {$/;"	f	class:olb::Cell
getExternal	cell.h	/^    T const* getExternal(int offset) const {$/;"	f	class:olb::Cell
getExternal	cell.h	/^    T* getExternal(int offset) {$/;"	f	class:olb::Cell
getExternalVelocityCornerDynamics	boundaryCondition2D.hh	/^    getExternalVelocityCornerDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::InterpolationBoundaryManager2D
getExternalVelocityCornerDynamics	boundaryCondition2D.hh	/^    getExternalVelocityCornerDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::RegularizedBoundaryManager2D
getExternalVelocityCornerDynamics	boundaryCondition3D.hh	/^        getExternalVelocityCornerDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::InterpolationBoundaryManager3D
getExternalVelocityCornerDynamics	boundaryCondition3D.hh	/^        getExternalVelocityCornerDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::RegularizedBoundaryManager3D
getExternalVelocityCornerMomenta	boundaryCondition2D.hh	/^    InterpolationBoundaryManager2D<T,Lattice,MixinDynamics>::getExternalVelocityCornerMomenta()$/;"	f	class:olb::InterpolationBoundaryManager2D
getExternalVelocityCornerMomenta	boundaryCondition2D.hh	/^    RegularizedBoundaryManager2D<T,Lattice,MixinDynamics>::getExternalVelocityCornerMomenta()$/;"	f	class:olb::RegularizedBoundaryManager2D
getExternalVelocityCornerMomenta	boundaryCondition3D.hh	/^    InterpolationBoundaryManager3D<T,Lattice,MixinDynamics>::getExternalVelocityCornerMomenta()$/;"	f	class:olb::InterpolationBoundaryManager3D
getExternalVelocityCornerMomenta	boundaryCondition3D.hh	/^    RegularizedBoundaryManager3D<T,Lattice,MixinDynamics>::getExternalVelocityCornerMomenta()$/;"	f	class:olb::RegularizedBoundaryManager3D
getExternalVelocityCornerProcessor	boundaryCondition2D.hh	/^        getExternalVelocityCornerProcessor(int x, int y)$/;"	f	class:olb::RegularizedBoundaryManager2D
getExternalVelocityCornerProcessor	boundaryCondition2D.hh	/^    InterpolationBoundaryManager2D<T,Lattice,MixinDynamics>::getExternalVelocityCornerProcessor(int x, int y)$/;"	f	class:olb::InterpolationBoundaryManager2D
getExternalVelocityCornerProcessor	boundaryCondition3D.hh	/^        getExternalVelocityCornerProcessor(int x, int y, int z)$/;"	f	class:olb::InterpolationBoundaryManager3D
getExternalVelocityCornerProcessor	boundaryCondition3D.hh	/^        getExternalVelocityCornerProcessor(int x, int y, int z)$/;"	f	class:olb::RegularizedBoundaryManager3D
getExternalVelocityEdgeDynamics	boundaryCondition3D.hh	/^        getExternalVelocityEdgeDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::InterpolationBoundaryManager3D
getExternalVelocityEdgeDynamics	boundaryCondition3D.hh	/^        getExternalVelocityEdgeDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::RegularizedBoundaryManager3D
getExternalVelocityEdgeMomenta	boundaryCondition3D.hh	/^    InterpolationBoundaryManager3D<T,Lattice,MixinDynamics>::getExternalVelocityEdgeMomenta()$/;"	f	class:olb::InterpolationBoundaryManager3D
getExternalVelocityEdgeMomenta	boundaryCondition3D.hh	/^    RegularizedBoundaryManager3D<T,Lattice,MixinDynamics>::getExternalVelocityEdgeMomenta()$/;"	f	class:olb::RegularizedBoundaryManager3D
getExternalVelocityEdgeProcessor	boundaryCondition3D.hh	/^        getExternalVelocityEdgeProcessor(int x0, int x1, int y0, int y1, int z0, int z1)$/;"	f	class:olb::InterpolationBoundaryManager3D
getExternalVelocityEdgeProcessor	boundaryCondition3D.hh	/^        getExternalVelocityEdgeProcessor(int x0, int x1, int y0, int y1, int z0, int z1)$/;"	f	class:olb::RegularizedBoundaryManager3D
getExternalVelocityMomenta	dynamics.hh	/^    ExternalVelocityMomenta<T,Lattice>& getExternalVelocityMomenta() {$/;"	f	namespace:olb::instances
getImageOutDir	singleton.h	/^    std::string getImageOutDir() const {$/;"	f	class:olb::singleton::Directories
getInternalVelocityCornerDynamics	boundaryCondition2D.hh	/^    getInternalVelocityCornerDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::InterpolationBoundaryManager2D
getInternalVelocityCornerDynamics	boundaryCondition2D.hh	/^    getInternalVelocityCornerDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::RegularizedBoundaryManager2D
getInternalVelocityCornerDynamics	boundaryCondition3D.hh	/^        getInternalVelocityCornerDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::InterpolationBoundaryManager3D
getInternalVelocityCornerDynamics	boundaryCondition3D.hh	/^        getInternalVelocityCornerDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::RegularizedBoundaryManager3D
getInternalVelocityCornerMomenta	boundaryCondition2D.hh	/^    InterpolationBoundaryManager2D<T,Lattice,MixinDynamics>::getInternalVelocityCornerMomenta()$/;"	f	class:olb::InterpolationBoundaryManager2D
getInternalVelocityCornerMomenta	boundaryCondition2D.hh	/^    RegularizedBoundaryManager2D<T,Lattice,MixinDynamics>::getInternalVelocityCornerMomenta()$/;"	f	class:olb::RegularizedBoundaryManager2D
getInternalVelocityCornerMomenta	boundaryCondition3D.hh	/^    InterpolationBoundaryManager3D<T,Lattice,MixinDynamics>::getInternalVelocityCornerMomenta()$/;"	f	class:olb::InterpolationBoundaryManager3D
getInternalVelocityCornerMomenta	boundaryCondition3D.hh	/^    RegularizedBoundaryManager3D<T,Lattice,MixinDynamics>::getInternalVelocityCornerMomenta()$/;"	f	class:olb::RegularizedBoundaryManager3D
getInternalVelocityCornerProcessor	boundaryCondition2D.hh	/^    InterpolationBoundaryManager2D<T,Lattice,MixinDynamics>::getInternalVelocityCornerProcessor (int x, int y)$/;"	f	class:olb::InterpolationBoundaryManager2D
getInternalVelocityCornerProcessor	boundaryCondition2D.hh	/^    RegularizedBoundaryManager2D<T,Lattice,MixinDynamics>::getInternalVelocityCornerProcessor$/;"	f	class:olb::RegularizedBoundaryManager2D
getInternalVelocityCornerProcessor	boundaryCondition3D.hh	/^        getInternalVelocityCornerProcessor(int x, int y, int z)$/;"	f	class:olb::InterpolationBoundaryManager3D
getInternalVelocityCornerProcessor	boundaryCondition3D.hh	/^        getInternalVelocityCornerProcessor(int x, int y, int z)$/;"	f	class:olb::RegularizedBoundaryManager3D
getInternalVelocityEdgeDynamics	boundaryCondition3D.hh	/^        getInternalVelocityEdgeDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::InterpolationBoundaryManager3D
getInternalVelocityEdgeDynamics	boundaryCondition3D.hh	/^        getInternalVelocityEdgeDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::RegularizedBoundaryManager3D
getInternalVelocityEdgeMomenta	boundaryCondition3D.hh	/^    InterpolationBoundaryManager3D<T,Lattice,MixinDynamics>::getInternalVelocityEdgeMomenta()$/;"	f	class:olb::InterpolationBoundaryManager3D
getInternalVelocityEdgeMomenta	boundaryCondition3D.hh	/^    RegularizedBoundaryManager3D<T,Lattice,MixinDynamics>::getInternalVelocityEdgeMomenta()$/;"	f	class:olb::RegularizedBoundaryManager3D
getInternalVelocityEdgeProcessor	boundaryCondition3D.hh	/^        getInternalVelocityEdgeProcessor(int x0, int x1, int y0, int y1, int z0, int z1)$/;"	f	class:olb::InterpolationBoundaryManager3D
getInternalVelocityEdgeProcessor	boundaryCondition3D.hh	/^        getInternalVelocityEdgeProcessor(int x0, int x1, int y0, int y1, int z0, int z1)$/;"	f	class:olb::RegularizedBoundaryManager3D
getLatticeNu	units.h	/^    T getLatticeNu() const { return getLatticeU()*getResolution()\/Re; }$/;"	f	class:olb::LBunits
getLatticeU	units.h	/^    T getLatticeU() const { return latticeU; }$/;"	f	class:olb::LBunits
getLogOutDir	singleton.h	/^    std::string getLogOutDir() const {$/;"	f	class:olb::singleton::Directories
getLx	units.h	/^    T getLx() const      { return lx; }$/;"	f	class:olb::LBunits
getLy	units.h	/^    T getLy() const      { return ly; }$/;"	f	class:olb::LBunits
getLz	units.h	/^    T getLz() const      { return lz; }$/;"	f	class:olb::LBunits
getMaxU	postProcessing.h	/^    T getMaxU()              const { return maxU;}$/;"	f	class:olb::LatticeStatistics
getMaxU	postProcessing.h	/^    T& getMaxU()          { return maxU;}$/;"	f	class:olb::LatticeStatistics
getMomentum	dataAnalysis2D.hh	/^    DataAnalysis2D<T,Lattice>::getMomentum() const$/;"	f	class:olb::DataAnalysis2D
getMomentum	dataAnalysis3D.hh	/^    DataAnalysis3D<T,Lattice>::getMomentum() const$/;"	f	class:olb::DataAnalysis3D
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<double,D2Q9Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<double,D3Q13Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<double,D3Q15Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<double,D3Q19Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<double,D3Q27Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<double,ForcedD2Q9Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<double,ForcedD3Q19Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<float,D2Q9Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<float,D3Q13Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<float,D3Q15Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<float,D3Q19Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<float,D3Q27Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<float,ForcedD2Q9Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<float,ForcedD3Q19Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<int,D2Q9Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<int,D3Q13Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<int,D3Q15Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<int,D3Q19Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<int,D3Q27Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<int,ForcedD2Q9Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsBlockId<int,ForcedD3Q19Descriptor>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsBlockId	multiPhysics.h	/^    MultiPhysicsId getMultiPhysicsBlockId() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsId	blockLattice2D.hh	/^multiPhysics::MultiPhysicsId BlockLattice2D<T,Lattice>::getMultiPhysicsId() const {$/;"	f	class:olb::BlockLattice2D
getMultiPhysicsId	blockLattice3D.hh	/^multiPhysics::MultiPhysicsId BlockLattice3D<T,Lattice>::getMultiPhysicsId() const {$/;"	f	class:olb::BlockLattice3D
getMultiPhysicsId	blockLatticeView2D.hh	/^multiPhysics::MultiPhysicsId BlockLatticeView2D<T,Lattice>::getMultiPhysicsId() const {$/;"	f	class:olb::BlockLatticeView2D
getMultiPhysicsId	blockLatticeView3D.hh	/^multiPhysics::MultiPhysicsId BlockLatticeView3D<T,Lattice>::getMultiPhysicsId() const {$/;"	f	class:olb::BlockLatticeView3D
getMultiPhysicsId	dataFields2D.hh	/^multiPhysics::MultiPhysicsId ScalarField2D<T>::getMultiPhysicsId() const {$/;"	f	class:olb::ScalarField2D
getMultiPhysicsId	dataFields2D.hh	/^multiPhysics::MultiPhysicsId TensorField2D<T,nDim>::getMultiPhysicsId() const {$/;"	f	class:olb::TensorField2D
getMultiPhysicsId	dataFields3D.hh	/^multiPhysics::MultiPhysicsId ScalarField3D<T>::getMultiPhysicsId() const {$/;"	f	class:olb::ScalarField3D
getMultiPhysicsId	dataFields3D.hh	/^multiPhysics::MultiPhysicsId TensorField3D<T,nDim>::getMultiPhysicsId() const {$/;"	f	class:olb::TensorField3D
getMultiPhysicsScalarId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsScalarId<double>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsScalarId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsScalarId<float>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsScalarId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsScalarId<int>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsScalarId	multiPhysics.h	/^    MultiPhysicsId getMultiPhysicsScalarId() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<double,2>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<double,3>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<double,4>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<double,6>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<double,9>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<float,2>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<float,3>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<float,4>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<float,6>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<float,9>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<int,2>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<int,3>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<int,4>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<int,6>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.cpp	/^    MultiPhysicsId getMultiPhysicsTensorId<int,9>() {$/;"	f	namespace:olb::multiPhysics
getMultiPhysicsTensorId	multiPhysics.h	/^    MultiPhysicsId getMultiPhysicsTensorId() {$/;"	f	namespace:olb::multiPhysics
getNeighborRho	boundaryPostProcessors3D.hh	/^    getNeighborRho(int x, int y, int z, int step1, int step2, BlockLattice3D<T,Lattice> const& blockLattice)$/;"	f	class:olb::OuterVelocityEdgeProcessor3D
getNeutralElement	dataReductions.h	/^    virtual T getNeutralElement() const { return neutralElement; }$/;"	f	class:olb::AverageReduction
getNeutralElement	dataReductions.h	/^    virtual T getNeutralElement() const { return neutralElement; }$/;"	f	class:olb::MaxReduction
getNeutralElement	dataReductions.h	/^    virtual T getNeutralElement() const { return neutralElement; }$/;"	f	class:olb::MinReduction
getNeutralElement	dataReductions.h	/^    virtual T getNeutralElement() const { return neutralElement; }$/;"	f	class:olb::NormSqrReduction
getNextDataBuffer	blockLattice2D.hh	/^T* BlockLatticeUnSerializer2D<T,Lattice>::getNextDataBuffer(size_t& bufferSize) {$/;"	f	class:olb::BlockLatticeUnSerializer2D
getNextDataBuffer	blockLattice2D.hh	/^const T* BlockLatticeSerializer2D<T,Lattice>::getNextDataBuffer(size_t& bufferSize) const {$/;"	f	class:olb::BlockLatticeSerializer2D
getNextDataBuffer	blockLattice3D.hh	/^T* BlockLatticeUnSerializer3D<T,Lattice>::getNextDataBuffer(size_t& bufferSize) {$/;"	f	class:olb::BlockLatticeUnSerializer3D
getNextDataBuffer	blockLattice3D.hh	/^const T* BlockLatticeSerializer3D<T,Lattice>::getNextDataBuffer(size_t& bufferSize) const {$/;"	f	class:olb::BlockLatticeSerializer3D
getNextDataBuffer	dataFields2D.hh	/^T* SequentialScalarFieldUnSerializer2D<T>::getNextDataBuffer(size_t& bufferSize) {$/;"	f	class:olb::SequentialScalarFieldUnSerializer2D
getNextDataBuffer	dataFields2D.hh	/^T* SequentialTensorFieldUnSerializer2D<T, nDim>::getNextDataBuffer(size_t& bufferSize) {$/;"	f	class:olb::SequentialTensorFieldUnSerializer2D
getNextDataBuffer	dataFields2D.hh	/^const T* SequentialScalarFieldSerializer2D<T>::getNextDataBuffer(size_t& bufferSize) const {$/;"	f	class:olb::SequentialScalarFieldSerializer2D
getNextDataBuffer	dataFields2D.hh	/^const T* SequentialTensorFieldSerializer2D<T, nDim>::getNextDataBuffer(size_t& bufferSize) const {$/;"	f	class:olb::SequentialTensorFieldSerializer2D
getNextDataBuffer	dataFields3D.hh	/^T* SequentialScalarFieldUnSerializer3D<T>::getNextDataBuffer(size_t& bufferSize) {$/;"	f	class:olb::SequentialScalarFieldUnSerializer3D
getNextDataBuffer	dataFields3D.hh	/^T* SequentialTensorFieldUnSerializer3D<T, nDim>::getNextDataBuffer(size_t& bufferSize) {$/;"	f	class:olb::SequentialTensorFieldUnSerializer3D
getNextDataBuffer	dataFields3D.hh	/^const T* SequentialScalarFieldSerializer3D<T>::getNextDataBuffer(size_t& bufferSize) const {$/;"	f	class:olb::SequentialScalarFieldSerializer3D
getNextDataBuffer	dataFields3D.hh	/^const T* SequentialTensorFieldSerializer3D<T, nDim>::getNextDataBuffer(size_t& bufferSize) const {$/;"	f	class:olb::SequentialTensorFieldSerializer3D
getNextDataBuffer	serializer.hh	/^const T* ScalingSerializer<T>::getNextDataBuffer(size_t& bufferSize) const {$/;"	f	class:olb::ScalingSerializer
getNextDataBuffer	serializer.hh	/^const T* TypeConversionSerializer<T,T>::getNextDataBuffer(size_t& bufferSize) const {$/;"	f	class:olb::TypeConversionSerializer
getNextDataBuffer	serializer.hh	/^const TConv* TypeConversionSerializer<T,TConv>::getNextDataBuffer(size_t& bufferSize) const {$/;"	f	class:olb::TypeConversionSerializer
getNoDynamics	dynamics.hh	/^    NoDynamics<T,Lattice>& getNoDynamics() {$/;"	f	namespace:olb::instances
getNumCells	postProcessing.h	/^    int const& getNumCells() const { return numCells; }$/;"	f	class:olb::LatticeStatistics
getNx	blockLattice2D.h	/^    virtual int getNx() const { return nx; }$/;"	f	class:olb::BlockLattice2D
getNx	blockLattice3D.h	/^    virtual int getNx() const { return nx; }$/;"	f	class:olb::BlockLattice3D
getNx	blockLatticeView2D.h	/^    virtual int getNx() const { return nx; }$/;"	f	class:olb::BlockLatticeView2D
getNx	blockLatticeView3D.h	/^    virtual int getNx() const { return nx; }$/;"	f	class:olb::BlockLatticeView3D
getNx	dataAnalysis2D.h	/^    virtual int getNx() const { return block.getNx(); }$/;"	f	class:olb::DataAnalysis2D
getNx	dataAnalysis3D.h	/^    virtual int getNx() const { return block.getNx(); }$/;"	f	class:olb::DataAnalysis3D
getNx	dataFields2D.h	/^    virtual int getNx() const { return nx; }$/;"	f	class:olb::ScalarField2D
getNx	dataFields2D.h	/^    virtual int getNx() const { return nx; }$/;"	f	class:olb::TensorField2D
getNx	dataFields3D.h	/^    virtual int getNx() const { return nx; }$/;"	f	class:olb::ScalarField3D
getNx	dataFields3D.h	/^    virtual int getNx() const { return nx; }$/;"	f	class:olb::TensorField3D
getNx	units.h	/^    int getNx(bool offLattice=false) const { return nCell(lx)+1+(int)offLattice; }$/;"	f	class:olb::LBunits
getNy	blockLattice2D.h	/^    virtual int getNy() const { return ny; }$/;"	f	class:olb::BlockLattice2D
getNy	blockLattice3D.h	/^    virtual int getNy() const { return ny; }$/;"	f	class:olb::BlockLattice3D
getNy	blockLatticeView2D.h	/^    virtual int getNy() const { return ny; }$/;"	f	class:olb::BlockLatticeView2D
getNy	blockLatticeView3D.h	/^    virtual int getNy() const { return ny; }$/;"	f	class:olb::BlockLatticeView3D
getNy	dataAnalysis2D.h	/^    virtual int getNy() const { return block.getNy(); }$/;"	f	class:olb::DataAnalysis2D
getNy	dataAnalysis3D.h	/^    virtual int getNy() const { return block.getNy(); }$/;"	f	class:olb::DataAnalysis3D
getNy	dataFields2D.h	/^    virtual int getNy() const { return ny; }$/;"	f	class:olb::ScalarField2D
getNy	dataFields2D.h	/^    virtual int getNy() const { return ny; }$/;"	f	class:olb::TensorField2D
getNy	dataFields3D.h	/^    virtual int getNy() const { return ny; }$/;"	f	class:olb::ScalarField3D
getNy	dataFields3D.h	/^    virtual int getNy() const { return ny; }$/;"	f	class:olb::TensorField3D
getNy	units.h	/^    int getNy(bool offLattice=false) const { return nCell(ly)+1+(int)offLattice; }$/;"	f	class:olb::LBunits
getNz	blockLattice3D.h	/^    virtual int getNz() const { return nz; }$/;"	f	class:olb::BlockLattice3D
getNz	blockLatticeView3D.h	/^    virtual int getNz() const { return nz; }$/;"	f	class:olb::BlockLatticeView3D
getNz	dataAnalysis3D.h	/^    virtual int getNz() const { return block.getNz(); }$/;"	f	class:olb::DataAnalysis3D
getNz	dataFields3D.h	/^    virtual int getNz() const { return nz; }$/;"	f	class:olb::ScalarField3D
getNz	dataFields3D.h	/^    virtual int getNz() const { return nz; }$/;"	f	class:olb::TensorField3D
getNz	units.h	/^    int getNz(bool offLattice=false) const { return nCell(lz)+1+(int)offLattice; }$/;"	f	class:olb::LBunits
getOlbDir	singleton.h	/^    std::string getOlbDir() const {$/;"	f	class:olb::singleton::Directories
getOmega	dynamics.hh	/^T BGKdynamics<T,Lattice>::getOmega() const {$/;"	f	class:olb::BGKdynamics
getOmega	dynamics.hh	/^T BounceBack<T,Lattice>::getOmega() const {$/;"	f	class:olb::BounceBack
getOmega	dynamics.hh	/^T CombinedRLBdynamics<T,Lattice,Dynamics>::getOmega() const $/;"	f	class:olb::CombinedRLBdynamics
getOmega	dynamics.hh	/^T ConstRhoBGKdynamics<T,Lattice>::getOmega() const {$/;"	f	class:olb::ConstRhoBGKdynamics
getOmega	dynamics.hh	/^T D3Q13dynamics<T,Lattice>::getOmega() const {$/;"	f	class:olb::D3Q13dynamics
getOmega	dynamics.hh	/^T ForcedBGKdynamics<T,Lattice>::getOmega() const {$/;"	f	class:olb::ForcedBGKdynamics
getOmega	dynamics.hh	/^T IncBGKdynamics<T,Lattice>::getOmega() const {$/;"	f	class:olb::IncBGKdynamics
getOmega	dynamics.hh	/^T NoDynamics<T,Lattice>::getOmega() const {$/;"	f	class:olb::NoDynamics
getOmega	dynamics.hh	/^T RLBdynamics<T,Lattice>::getOmega() const {$/;"	f	class:olb::RLBdynamics
getOmega	units.h	/^    T getOmega() const     { return (T)1 \/ getTau(); }$/;"	f	class:olb::LBunits
getParameter	dynamics.hh	/^T CombinedRLBdynamics<T,Lattice,Dynamics>::getParameter(int whichParameter) const {$/;"	f	class:olb::CombinedRLBdynamics
getParameter	dynamics.hh	/^T Dynamics<T,Lattice>::getParameter(int whichParameter) const {$/;"	f	class:olb::Dynamics
getPoissonTerm	dataAnalysis2D.hh	/^    DataAnalysis2D<T,Lattice>::getPoissonTerm() const$/;"	f	class:olb::DataAnalysis2D
getPoissonTerm	dataAnalysis3D.hh	/^    DataAnalysis3D<T,Lattice>::getPoissonTerm() const$/;"	f	class:olb::DataAnalysis3D
getPopulations	dataAnalysis2D.hh	/^    DataAnalysis2D<T,Lattice>::getPopulations() const$/;"	f	class:olb::DataAnalysis2D
getPopulations	dataAnalysis3D.hh	/^    DataAnalysis3D<T,Lattice>::getPopulations() const$/;"	f	class:olb::DataAnalysis3D
getPressure	dataAnalysis2D.hh	/^    DataAnalysis2D<T,Lattice>::getPressure() const$/;"	f	class:olb::DataAnalysis2D
getPressure	dataAnalysis3D.hh	/^    DataAnalysis3D<T,Lattice>::getPressure() const$/;"	f	class:olb::DataAnalysis3D
getPressureBoundaryDynamics	boundaryCondition2D.hh	/^    getPressureBoundaryDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::InterpolationBoundaryManager2D
getPressureBoundaryDynamics	boundaryCondition2D.hh	/^    getPressureBoundaryDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::RegularizedBoundaryManager2D
getPressureBoundaryDynamics	boundaryCondition3D.hh	/^    getPressureBoundaryDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::InterpolationBoundaryManager3D
getPressureBoundaryDynamics	boundaryCondition3D.hh	/^    getPressureBoundaryDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::RegularizedBoundaryManager3D
getPressureBoundaryMomenta	boundaryCondition2D.hh	/^    InterpolationBoundaryManager2D<T,Lattice,MixinDynamics>::getPressureBoundaryMomenta()$/;"	f	class:olb::InterpolationBoundaryManager2D
getPressureBoundaryMomenta	boundaryCondition2D.hh	/^    RegularizedBoundaryManager2D<T,Lattice,MixinDynamics>::getPressureBoundaryMomenta()$/;"	f	class:olb::RegularizedBoundaryManager2D
getPressureBoundaryMomenta	boundaryCondition3D.hh	/^    InterpolationBoundaryManager3D<T,Lattice,MixinDynamics>::getPressureBoundaryMomenta()$/;"	f	class:olb::InterpolationBoundaryManager3D
getPressureBoundaryMomenta	boundaryCondition3D.hh	/^    RegularizedBoundaryManager3D<T,Lattice,MixinDynamics>::getPressureBoundaryMomenta()$/;"	f	class:olb::RegularizedBoundaryManager3D
getPressureBoundaryProcessor	boundaryCondition2D.hh	/^        getPressureBoundaryProcessor(int x0, int x1, int y0, int y1)$/;"	f	class:olb::InterpolationBoundaryManager2D
getPressureBoundaryProcessor	boundaryCondition2D.hh	/^        getPressureBoundaryProcessor(int x0, int x1, int y0, int y1)$/;"	f	class:olb::RegularizedBoundaryManager2D
getPressureBoundaryProcessor	boundaryCondition3D.hh	/^        getPressureBoundaryProcessor(int x0, int x1, int y0, int y1, int z0, int z1)$/;"	f	class:olb::InterpolationBoundaryManager3D
getPressureBoundaryProcessor	boundaryCondition3D.hh	/^        getPressureBoundaryProcessor(int x0, int x1, int y0, int y1, int z0, int z1)$/;"	f	class:olb::RegularizedBoundaryManager3D
getRe	units.h	/^    T getRe() const      { return Re; }$/;"	f	class:olb::LBunits
getResolution	units.h	/^    int getResolution() const { return resolution; }$/;"	f	class:olb::LBunits
getResult	dataReductions.h	/^    virtual T getResult() const { return maximum; }$/;"	f	class:olb::MaxReduction
getResult	dataReductions.h	/^    virtual T getResult() const { return minimum; }$/;"	f	class:olb::MinReduction
getResult	dataReductions.hh	/^T AverageReduction<T>::getResult() const {$/;"	f	class:olb::AverageReduction
getResult	dataReductions.hh	/^T NormSqrReduction<T>::getResult() const {$/;"	f	class:olb::NormSqrReduction
getSerializer	blockLattice2D.hh	/^DataSerializer<T> const& BlockLattice2D<T,Lattice>::getSerializer(IndexOrdering::OrderingT ordering) const {$/;"	f	class:olb::BlockLattice2D
getSerializer	blockLattice3D.hh	/^DataSerializer<T> const& BlockLattice3D<T,Lattice>::getSerializer(IndexOrdering::OrderingT ordering) const {$/;"	f	class:olb::BlockLattice3D
getSerializer	blockLatticeView2D.hh	/^DataSerializer<T> const& BlockLatticeView2D<T,Lattice>::getSerializer(IndexOrdering::OrderingT ordering) const {$/;"	f	class:olb::BlockLatticeView2D
getSerializer	blockLatticeView3D.hh	/^    getSerializer(IndexOrdering::OrderingT ordering) const$/;"	f	class:olb::BlockLatticeView3D
getSerializer	dataFields2D.hh	/^DataSerializer<T> const& ScalarField2D<T>::getSerializer(IndexOrdering::OrderingT ordering) const$/;"	f	class:olb::ScalarField2D
getSerializer	dataFields2D.hh	/^DataSerializer<T> const& TensorField2D<T,nDim>::getSerializer(IndexOrdering::OrderingT ordering) const$/;"	f	class:olb::TensorField2D
getSerializer	dataFields3D.hh	/^DataSerializer<T> const& ScalarField3D<T>::getSerializer(IndexOrdering::OrderingT ordering) const$/;"	f	class:olb::ScalarField3D
getSerializer	dataFields3D.hh	/^DataSerializer<T> const& TensorField3D<T,nDim>::getSerializer(IndexOrdering::OrderingT ordering) const$/;"	f	class:olb::TensorField3D
getSize	blockLattice2D.hh	/^size_t BlockLatticeSerializer2D<T,Lattice>::getSize() const {$/;"	f	class:olb::BlockLatticeSerializer2D
getSize	blockLattice2D.hh	/^size_t BlockLatticeUnSerializer2D<T,Lattice>::getSize() const {$/;"	f	class:olb::BlockLatticeUnSerializer2D
getSize	blockLattice3D.hh	/^size_t BlockLatticeSerializer3D<T,Lattice>::getSize() const {$/;"	f	class:olb::BlockLatticeSerializer3D
getSize	blockLattice3D.hh	/^size_t BlockLatticeUnSerializer3D<T,Lattice>::getSize() const {$/;"	f	class:olb::BlockLatticeUnSerializer3D
getSize	dataFields2D.h	/^    virtual size_t getSize() const { return (size_t)nx*(size_t)ny; }$/;"	f	class:olb::ScalarField2D
getSize	dataFields2D.hh	/^size_t SequentialScalarFieldSerializer2D<T>::getSize() const {$/;"	f	class:olb::SequentialScalarFieldSerializer2D
getSize	dataFields2D.hh	/^size_t SequentialScalarFieldUnSerializer2D<T>::getSize() const {$/;"	f	class:olb::SequentialScalarFieldUnSerializer2D
getSize	dataFields2D.hh	/^size_t SequentialTensorFieldSerializer2D<T, nDim>::getSize() const {$/;"	f	class:olb::SequentialTensorFieldSerializer2D
getSize	dataFields2D.hh	/^size_t SequentialTensorFieldUnSerializer2D<T, nDim>::getSize() const {$/;"	f	class:olb::SequentialTensorFieldUnSerializer2D
getSize	dataFields3D.h	/^    virtual size_t getSize() const { return (size_t)nx*(size_t)ny*(size_t)nz; }$/;"	f	class:olb::ScalarField3D
getSize	dataFields3D.hh	/^size_t SequentialScalarFieldSerializer3D<T>::getSize() const {$/;"	f	class:olb::SequentialScalarFieldSerializer3D
getSize	dataFields3D.hh	/^size_t SequentialScalarFieldUnSerializer3D<T>::getSize() const {$/;"	f	class:olb::SequentialScalarFieldUnSerializer3D
getSize	dataFields3D.hh	/^size_t SequentialTensorFieldSerializer3D<T, nDim>::getSize() const {$/;"	f	class:olb::SequentialTensorFieldSerializer3D
getSize	dataFields3D.hh	/^size_t SequentialTensorFieldUnSerializer3D<T, nDim>::getSize() const {$/;"	f	class:olb::SequentialTensorFieldUnSerializer3D
getSize	serializer.hh	/^size_t ScalingSerializer<T>::getSize() const {$/;"	f	class:olb::ScalingSerializer
getSize	serializer.hh	/^size_t TypeConversionSerializer<T,T>::getSize() const {$/;"	f	class:olb::TypeConversionSerializer
getSize	serializer.hh	/^size_t TypeConversionSerializer<T,TConv>::getSize() const {$/;"	f	class:olb::TypeConversionSerializer
getStatistics	blockLattice2D.hh	/^LatticeStatistics<T> const& BlockLattice2D<T,Lattice>::getStatistics() const {$/;"	f	class:olb::BlockLattice2D
getStatistics	blockLattice2D.hh	/^LatticeStatistics<T>& BlockLattice2D<T,Lattice>::getStatistics() {$/;"	f	class:olb::BlockLattice2D
getStatistics	blockLattice3D.hh	/^    BlockLattice3D<T,Lattice>::getStatistics() const$/;"	f	class:olb::BlockLattice3D
getStatistics	blockLattice3D.hh	/^LatticeStatistics<T>& BlockLattice3D<T,Lattice>::getStatistics() {$/;"	f	class:olb::BlockLattice3D
getStatistics	blockLatticeView2D.hh	/^LatticeStatistics<T> const& BlockLatticeView2D<T,Lattice>::getStatistics() const$/;"	f	class:olb::BlockLatticeView2D
getStatistics	blockLatticeView2D.hh	/^LatticeStatistics<T>& BlockLatticeView2D<T,Lattice>::getStatistics()$/;"	f	class:olb::BlockLatticeView2D
getStatistics	blockLatticeView3D.hh	/^    getStatistics()$/;"	f	class:olb::BlockLatticeView3D
getStatistics	blockLatticeView3D.hh	/^LatticeStatistics<T> const& BlockLatticeView3D<T,Lattice>::getStatistics() const$/;"	f	class:olb::BlockLatticeView3D
getStrainRate	dataAnalysis2D.hh	/^    DataAnalysis2D<T,Lattice>::getStrainRate() const$/;"	f	class:olb::DataAnalysis2D
getStrainRate	dataAnalysis3D.hh	/^    DataAnalysis3D<T,Lattice>::getStrainRate() const$/;"	f	class:olb::DataAnalysis3D
getStrainRateFromStress	dataAnalysis2D.hh	/^    DataAnalysis2D<T,Lattice>::getStrainRateFromStress() const$/;"	f	class:olb::DataAnalysis2D
getStrainRateFromStress	dataAnalysis3D.hh	/^    DataAnalysis3D<T,Lattice>::getStrainRateFromStress() const$/;"	f	class:olb::DataAnalysis3D
getSubSerializer	blockLattice2D.hh	/^DataSerializer<T> const& BlockLattice2D<T,Lattice>::getSubSerializer ($/;"	f	class:olb::BlockLattice2D
getSubSerializer	blockLattice3D.hh	/^DataSerializer<T> const& BlockLattice3D<T,Lattice>::getSubSerializer ($/;"	f	class:olb::BlockLattice3D
getSubSerializer	blockLatticeView2D.hh	/^DataSerializer<T> const& BlockLatticeView2D<T,Lattice>::getSubSerializer ($/;"	f	class:olb::BlockLatticeView2D
getSubSerializer	blockLatticeView3D.hh	/^DataSerializer<T> const& BlockLatticeView3D<T,Lattice>::getSubSerializer ($/;"	f	class:olb::BlockLatticeView3D
getSubSerializer	dataFields2D.hh	/^DataSerializer<T> const& ScalarField2D<T>::getSubSerializer ($/;"	f	class:olb::ScalarField2D
getSubSerializer	dataFields2D.hh	/^DataSerializer<T> const& TensorField2D<T,nDim>::getSubSerializer ($/;"	f	class:olb::TensorField2D
getSubSerializer	dataFields3D.hh	/^DataSerializer<T> const& ScalarField3D<T>::getSubSerializer ($/;"	f	class:olb::ScalarField3D
getSubSerializer	dataFields3D.hh	/^DataSerializer<T> const& TensorField3D<T,nDim>::getSubSerializer ($/;"	f	class:olb::TensorField3D
getSubUnSerializer	blockLattice2D.hh	/^DataUnSerializer<T>& BlockLattice2D<T,Lattice>::getSubUnSerializer ($/;"	f	class:olb::BlockLattice2D
getSubUnSerializer	blockLattice3D.hh	/^DataUnSerializer<T>& BlockLattice3D<T,Lattice>::getSubUnSerializer ($/;"	f	class:olb::BlockLattice3D
getSubUnSerializer	blockLatticeView2D.hh	/^DataUnSerializer<T>& BlockLatticeView2D<T,Lattice>::getSubUnSerializer ($/;"	f	class:olb::BlockLatticeView2D
getSubUnSerializer	blockLatticeView3D.hh	/^DataUnSerializer<T>& BlockLatticeView3D<T,Lattice>::getSubUnSerializer ($/;"	f	class:olb::BlockLatticeView3D
getSubUnSerializer	dataFields2D.hh	/^DataUnSerializer<T>& ScalarField2D<T>::getSubUnSerializer ($/;"	f	class:olb::ScalarField2D
getSubUnSerializer	dataFields2D.hh	/^DataUnSerializer<T>& TensorField2D<T,nDim>::getSubUnSerializer ($/;"	f	class:olb::TensorField2D
getSubUnSerializer	dataFields3D.hh	/^DataUnSerializer<T>& ScalarField3D<T>::getSubUnSerializer ($/;"	f	class:olb::ScalarField3D
getSubUnSerializer	dataFields3D.hh	/^DataUnSerializer<T>& TensorField3D<T,nDim>::getSubUnSerializer ($/;"	f	class:olb::TensorField3D
getTau	units.h	/^    T getTau() const       { return (T)3*getLatticeNu()+(T)0.5; }$/;"	f	class:olb::LBunits
getUnSerializer	blockLattice2D.hh	/^DataUnSerializer<T>& BlockLattice2D<T,Lattice>::getUnSerializer(IndexOrdering::OrderingT ordering) {$/;"	f	class:olb::BlockLattice2D
getUnSerializer	blockLattice3D.hh	/^DataUnSerializer<T>& BlockLattice3D<T,Lattice>::getUnSerializer(IndexOrdering::OrderingT ordering) {$/;"	f	class:olb::BlockLattice3D
getUnSerializer	blockLatticeView2D.hh	/^DataUnSerializer<T>& BlockLatticeView2D<T,Lattice>::getUnSerializer(IndexOrdering::OrderingT ordering) {$/;"	f	class:olb::BlockLatticeView2D
getUnSerializer	blockLatticeView3D.hh	/^    getUnSerializer(IndexOrdering::OrderingT ordering)$/;"	f	class:olb::BlockLatticeView3D
getUnSerializer	dataFields2D.hh	/^DataUnSerializer<T>& ScalarField2D<T>::getUnSerializer(IndexOrdering::OrderingT ordering)$/;"	f	class:olb::ScalarField2D
getUnSerializer	dataFields2D.hh	/^DataUnSerializer<T>& TensorField2D<T,nDim>::getUnSerializer(IndexOrdering::OrderingT ordering)$/;"	f	class:olb::TensorField2D
getUnSerializer	dataFields3D.hh	/^DataUnSerializer<T>& ScalarField3D<T>::getUnSerializer(IndexOrdering::OrderingT ordering)$/;"	f	class:olb::ScalarField3D
getUnSerializer	dataFields3D.hh	/^DataUnSerializer<T>& TensorField3D<T,nDim>::getUnSerializer(IndexOrdering::OrderingT ordering)$/;"	f	class:olb::TensorField3D
getVelocity	dataAnalysis2D.hh	/^    DataAnalysis2D<T,Lattice>::getVelocity() const$/;"	f	class:olb::DataAnalysis2D
getVelocity	dataAnalysis3D.hh	/^TensorFieldBase3D<T,3> const& DataAnalysis3D<T,Lattice>::getVelocity() const$/;"	f	class:olb::DataAnalysis3D
getVelocityBoundaryDynamics	boundaryCondition2D.hh	/^    getVelocityBoundaryDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::InterpolationBoundaryManager2D
getVelocityBoundaryDynamics	boundaryCondition2D.hh	/^    getVelocityBoundaryDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::RegularizedBoundaryManager2D
getVelocityBoundaryDynamics	boundaryCondition3D.hh	/^    getVelocityBoundaryDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::InterpolationBoundaryManager3D
getVelocityBoundaryDynamics	boundaryCondition3D.hh	/^    getVelocityBoundaryDynamics(T omega, Momenta<T,Lattice>& momenta)$/;"	f	class:olb::RegularizedBoundaryManager3D
getVelocityBoundaryMomenta	boundaryCondition2D.hh	/^    InterpolationBoundaryManager2D<T,Lattice,MixinDynamics>::getVelocityBoundaryMomenta()$/;"	f	class:olb::InterpolationBoundaryManager2D
getVelocityBoundaryMomenta	boundaryCondition2D.hh	/^    RegularizedBoundaryManager2D<T,Lattice,MixinDynamics>::getVelocityBoundaryMomenta()$/;"	f	class:olb::RegularizedBoundaryManager2D
getVelocityBoundaryMomenta	boundaryCondition3D.hh	/^    InterpolationBoundaryManager3D<T,Lattice,MixinDynamics>::getVelocityBoundaryMomenta()$/;"	f	class:olb::InterpolationBoundaryManager3D
getVelocityBoundaryMomenta	boundaryCondition3D.hh	/^    RegularizedBoundaryManager3D<T,Lattice,MixinDynamics>::getVelocityBoundaryMomenta()$/;"	f	class:olb::RegularizedBoundaryManager3D
getVelocityBoundaryProcessor	boundaryCondition2D.hh	/^        getVelocityBoundaryProcessor(int x0, int x1, int y0, int y1)$/;"	f	class:olb::InterpolationBoundaryManager2D
getVelocityBoundaryProcessor	boundaryCondition2D.hh	/^        getVelocityBoundaryProcessor(int x0, int x1, int y0, int y1)$/;"	f	class:olb::RegularizedBoundaryManager2D
getVelocityBoundaryProcessor	boundaryCondition3D.hh	/^        getVelocityBoundaryProcessor(int x0, int x1, int y0, int y1, int z0, int z1)$/;"	f	class:olb::InterpolationBoundaryManager3D
getVelocityBoundaryProcessor	boundaryCondition3D.hh	/^        getVelocityBoundaryProcessor(int x0, int x1, int y0, int y1, int z0, int z1)$/;"	f	class:olb::RegularizedBoundaryManager3D
getVelocityNorm	dataAnalysis2D.hh	/^    DataAnalysis2D<T,Lattice>::getVelocityNorm() const$/;"	f	class:olb::DataAnalysis2D
getVelocityNorm	dataAnalysis3D.hh	/^    DataAnalysis3D<T,Lattice>::getVelocityNorm() const$/;"	f	class:olb::DataAnalysis3D
getVorticity	dataAnalysis2D.hh	/^    DataAnalysis2D<T,Lattice>::getVorticity() const$/;"	f	class:olb::DataAnalysis2D
getVorticity	dataAnalysis3D.hh	/^    DataAnalysis3D<T,Lattice>::getVorticity() const$/;"	f	class:olb::DataAnalysis3D
getVorticityNorm	dataAnalysis3D.hh	/^    DataAnalysis3D<T,Lattice>::getVorticityNorm() const$/;"	f	class:olb::DataAnalysis3D
getVtkOutDir	singleton.h	/^    std::string getVtkOutDir() const {$/;"	f	class:olb::singleton::Directories
get_firstGlobNum	loadBalancer.cpp	/^int loadBalancer::get_firstGlobNum() const {$/;"	f	class:olb::loadBalancer
get_lastGlobNum	loadBalancer.cpp	/^int loadBalancer::get_lastGlobNum() const {$/;"	f	class:olb::loadBalancer
get_locChunkSize	loadBalancer.cpp	/^int loadBalancer::get_locChunkSize() const {$/;"	f	class:olb::loadBalancer
get_rank	ompManager.cpp	/^        int ompManager::get_rank() const { $/;"	f	class:ompManager
get_size	ompManager.cpp	/^        int ompManager::get_size() const {$/;"	f	class:ompManager
glob	loadBalancer.cpp	/^int loadBalancer::glob(int loc) const {$/;"	f	class:olb::loadBalancer
grid	blockLattice2D.h	/^    Cell<T,Lattice>      **grid;$/;"	m	class:olb::BlockLattice2D
grid	blockLattice3D.h	/^    Cell<T,Lattice>      ***grid;$/;"	m	class:olb::BlockLattice3D
hasReductions	postProcessing.h	/^    virtual bool hasReductions() const { return false; }$/;"	f	struct:olb::LocalPostProcessor2D
hasReductions	postProcessing.h	/^    virtual bool hasReductions() const { return false; }$/;"	f	struct:olb::LocalPostProcessor3D
hasReductions	postProcessing.h	/^    virtual bool hasReductions() const { return true; }$/;"	f	struct:olb::GlobalPostProcessor2D
hasReductions	postProcessing.h	/^    virtual bool hasReductions() const { return true; }$/;"	f	struct:olb::GlobalPostProcessor3D
iX	blockLattice2D.h	/^    mutable int iX, iY;$/;"	m	class:olb::BlockLatticeSerializer2D
iX	blockLattice2D.h	/^    mutable int iX, iY;$/;"	m	class:olb::BlockLatticeUnSerializer2D
iX	blockLattice3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::BlockLatticeSerializer3D
iX	blockLattice3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::BlockLatticeUnSerializer3D
iX	dataFields2D.h	/^    mutable int iX, iY;$/;"	m	class:olb::SequentialScalarFieldSerializer2D
iX	dataFields2D.h	/^    mutable int iX, iY;$/;"	m	class:olb::SequentialScalarFieldUnSerializer2D
iX	dataFields2D.h	/^    mutable int iX, iY;$/;"	m	class:olb::SequentialTensorFieldSerializer2D
iX	dataFields2D.h	/^    mutable int iX, iY;$/;"	m	class:olb::SequentialTensorFieldUnSerializer2D
iX	dataFields3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::SequentialScalarFieldSerializer3D
iX	dataFields3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::SequentialScalarFieldUnSerializer3D
iX	dataFields3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::SequentialTensorFieldSerializer3D
iX	dataFields3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::SequentialTensorFieldUnSerializer3D
iY	blockLattice2D.h	/^    mutable int iX, iY;$/;"	m	class:olb::BlockLatticeSerializer2D
iY	blockLattice2D.h	/^    mutable int iX, iY;$/;"	m	class:olb::BlockLatticeUnSerializer2D
iY	blockLattice3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::BlockLatticeSerializer3D
iY	blockLattice3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::BlockLatticeUnSerializer3D
iY	dataFields2D.h	/^    mutable int iX, iY;$/;"	m	class:olb::SequentialScalarFieldSerializer2D
iY	dataFields2D.h	/^    mutable int iX, iY;$/;"	m	class:olb::SequentialScalarFieldUnSerializer2D
iY	dataFields2D.h	/^    mutable int iX, iY;$/;"	m	class:olb::SequentialTensorFieldSerializer2D
iY	dataFields2D.h	/^    mutable int iX, iY;$/;"	m	class:olb::SequentialTensorFieldUnSerializer2D
iY	dataFields3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::SequentialScalarFieldSerializer3D
iY	dataFields3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::SequentialScalarFieldUnSerializer3D
iY	dataFields3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::SequentialTensorFieldSerializer3D
iY	dataFields3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::SequentialTensorFieldUnSerializer3D
iZ	blockLattice3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::BlockLatticeSerializer3D
iZ	blockLattice3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::BlockLatticeUnSerializer3D
iZ	dataFields3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::SequentialScalarFieldSerializer3D
iZ	dataFields3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::SequentialScalarFieldUnSerializer3D
iZ	dataFields3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::SequentialTensorFieldSerializer3D
iZ	dataFields3D.h	/^    mutable int iX, iY, iZ;$/;"	m	class:olb::SequentialTensorFieldUnSerializer3D
imageOutDir	singleton.h	/^    std::string imageOutDir;$/;"	m	class:olb::singleton::Directories
incBgkCollision	lbHelpers.h	/^    static T incBgkCollision(Cell<T,Lattice>& cell, T pressure, const T j[Lattice<T>::d], T omega)$/;"	f	struct:olb::lbHelpers
incBgkCollision	lbHelpers.h	/^    static T incBgkCollision(T* cell, T pressure, const T j[Descriptor::d], T omega) {$/;"	f	struct:olb::lbDynamicsHelpers
incBgkCollision	lbHelpers2D.h	/^    static T incBgkCollision ( T* cell, T pressure, const T j[2], T omega) {$/;"	f	struct:olb::lbDynamicsHelpers
incBgkCollision	lbHelpers3D.h	/^    static T incBgkCollision(T* cell, T pressure, const T j[3], T omega) {$/;"	f	struct:olb::lbDynamicsHelpers
incEquilibrium	lbHelpers.h	/^    static T incEquilibrium( int iPop, const T j[Descriptor::d],$/;"	f	struct:olb::lbDynamicsHelpers
incEquilibrium	lbHelpers.h	/^    static T incEquilibrium(int iPop, const T j[Lattice<T>::d], const T jSqr, const T pressure) {$/;"	f	struct:olb::lbHelpers
incEquilibrium	lbHelpers2D.h	/^    static T incEquilibrium( int iPop, const T j[2], const T jSqr, const T pressure ) {$/;"	f	struct:olb::lbDynamicsHelpers
incEquilibrium	lbHelpers3D.h	/^    static T incEquilibrium(int iPop, const T j[3], const T jSqr, const T pressure) {$/;"	f	struct:olb::lbDynamicsHelpers
incEquilibrium	lbHelpers3D.h	/^    static T incEquilibrium(int iPop, const T j[3], const T jSqr, const T pressure)$/;"	f	struct:olb::lbDynamicsHelpers
indices	util.h	/^        std::vector<int> indices;$/;"	m	class:olb::util::SubIndex
indices	util.h	/^        std::vector<int> indices;$/;"	m	class:olb::util::SubIndexOutgoing
indices	util.h	/^        std::vector<int> indices;$/;"	m	class:olb::util::SubIndexOutgoingCorner2D
iniEquilibrium	cell.h	/^    void iniEquilibrium(T rho, const T u[Lattice<T>::d]) {$/;"	f	class:olb::Cell
iniEquilibrium	dynamics.hh	/^void Dynamics<T,Lattice>::iniEquilibrium(Cell<T,Lattice>& cell, T rho, const T u[Lattice<T>::d]) {$/;"	f	class:olb::Dynamics
iniExternal	cell.hh	/^void Cell<T,Lattice>::iniExternal() {$/;"	f	class:olb::Cell
iniFirstOrder2D	simulationSetup2D.hh	/^void iniFirstOrder2D(BlockLatticeView2D<T,Lattice> lattice) {$/;"	f	namespace:olb
iniFirstOrder3D	simulationSetup3D.hh	/^void iniFirstOrder3D(BlockLatticeView3D<T,Lattice> lattice) {$/;"	f	namespace:olb
iniPop	cell.hh	/^void Cell<T,Lattice>::iniPop() {$/;"	f	class:olb::Cell
iniPressure2D	simulationSetup2D.hh	/^void iniPressure2D(BlockLatticeView2D<T,Lattice> lattice,$/;"	f	namespace:olb
iniPressure3D	simulationSetup3D.hh	/^void iniPressure3D(BlockLatticeView3D<T,Lattice> lattice, T epsilon, T lambda) {$/;"	f	namespace:olb
init	ompManager.cpp	/^        void ompManager::init() {$/;"	f	class:ompManager
init_chunkD	loadBalancer.cpp	/^void loadBalancer::init_chunkD(int rank, int size, int globChunkSize, int offset) {$/;"	f	class:olb::loadBalancer
initialize	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::initialize() {$/;"	f	class:olb::BlockLattice2D
initialize	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::initialize() {$/;"	f	class:olb::BlockLattice3D
initialize	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::initialize() {$/;"	f	class:olb::BlockLatticeView2D
initialize	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::initialize() {$/;"	f	class:olb::BlockLatticeView3D
initialize	postProcessing.hh	/^void LatticeStatistics<T>::initialize() {$/;"	f	class:olb::LatticeStatistics
instances	dynamics.cpp	/^    namespace instances {$/;"	n	namespace:olb	file:
instances	dynamics.h	/^namespace instances {$/;"	n	namespace:olb
instances	dynamics.hh	/^namespace instances {$/;"	n	namespace:olb
interpolateGradients	boundaryPostProcessors2D.hh	/^    interpolateGradients(BlockLattice2D<T,Lattice> const& blockLattice,$/;"	f	class:olb::StraightFdBoundaryProcessor2D
interpolateGradients	boundaryPostProcessors3D.hh	/^    interpolateGradients(BlockLattice3D<T,Lattice> const& blockLattice, T velDeriv[Lattice<T>::d],$/;"	f	class:olb::PlaneFdBoundaryProcessor3D
interpolateGradients	boundaryPostProcessors3D.hh	/^    interpolateGradients(BlockLattice3D<T,Lattice> const& blockLattice,$/;"	f	class:olb::OuterVelocityEdgeProcessor3D
interpolateScalar	finiteDifference2D.h	/^        static void  interpolateScalar(T& rhoDeriv,$/;"	f	struct:olb::fd::DirectedGradients2D
interpolateScalar	finiteDifference2D.h	/^        static void interpolateScalar(T& rhoDeriv,$/;"	f	struct:olb::fd::DirectedGradients2D
interpolateScalar	finiteDifference3D.h	/^        static void  interpolateScalar(T& rhoDeriv,$/;"	f	struct:olb::fd::DirectedGradients3D
interpolateScalar	finiteDifference3D.h	/^        static void interpolateScalar(T& rhoDeriv,$/;"	f	struct:olb::fd::DirectedGradients3D
interpolateVector	finiteDifference2D.h	/^        static void interpolateVector(T velDeriv[Lattice<T>::d],$/;"	f	struct:olb::fd::DirectedGradients2D
interpolateVector	finiteDifference3D.h	/^        static void  interpolateVector(T velDeriv[Lattice<T>::d],$/;"	f	struct:olb::fd::DirectedGradients3D
interpolateVector	finiteDifference3D.h	/^        static void interpolateVector(T velDeriv[Lattice<T>::d],$/;"	f	struct:olb::fd::DirectedGradients3D
intersect	util.h	/^    inline bool intersect ($/;"	f	namespace:olb::util
invCs2	latticeDescriptors.h	/^        static const T invCs2;      \/\/\/< inverse square of speed of sound$/;"	m	struct:olb::descriptors::D2Q9DescriptorBase
invCs2	latticeDescriptors.h	/^        static const T invCs2;      \/\/\/< inverse square of speed of sound$/;"	m	struct:olb::descriptors::D3Q13DescriptorBase
invCs2	latticeDescriptors.h	/^        static const T invCs2;      \/\/\/< inverse square of speed of sound$/;"	m	struct:olb::descriptors::D3Q15DescriptorBase
invCs2	latticeDescriptors.h	/^        static const T invCs2;      \/\/\/< inverse square of speed of sound$/;"	m	struct:olb::descriptors::D3Q19DescriptorBase
invCs2	latticeDescriptors.h	/^        static const T invCs2;      \/\/\/< inverse square of speed of sound$/;"	m	struct:olb::descriptors::D3Q27DescriptorBase
invCs2	latticeDescriptors.hh	/^    const T D2Q9DescriptorBase<T>::invCs2 = (T)3;$/;"	m	class:olb::descriptors::D2Q9DescriptorBase
invCs2	latticeDescriptors.hh	/^    const T D3Q13DescriptorBase<T>::invCs2 = (T)3;$/;"	m	class:olb::descriptors::D3Q13DescriptorBase
invCs2	latticeDescriptors.hh	/^    const T D3Q15DescriptorBase<T>::invCs2 = (T)3;$/;"	m	class:olb::descriptors::D3Q15DescriptorBase
invCs2	latticeDescriptors.hh	/^    const T D3Q19DescriptorBase<T>::invCs2 = (T)3;$/;"	m	class:olb::descriptors::D3Q19DescriptorBase
invCs2	latticeDescriptors.hh	/^    const T D3Q27DescriptorBase<T>::invCs2 = (T)3;$/;"	m	class:olb::descriptors::D3Q27DescriptorBase
isConstructed	dataFields2D.hh	/^bool ScalarField2D<T>::isConstructed() const {$/;"	f	class:olb::ScalarField2D
isConstructed	dataFields2D.hh	/^bool TensorField2D<T,nDim>::isConstructed() const {$/;"	f	class:olb::TensorField2D
isConstructed	dataFields3D.hh	/^bool ScalarField3D<T>::isConstructed() const {$/;"	f	class:olb::ScalarField3D
isConstructed	dataFields3D.hh	/^bool TensorField3D<T,nDim>::isConstructed() const {$/;"	f	class:olb::TensorField3D
isEmpty	blockLattice2D.hh	/^bool BlockLatticeSerializer2D<T,Lattice>::isEmpty() const {$/;"	f	class:olb::BlockLatticeSerializer2D
isEmpty	blockLattice3D.hh	/^bool BlockLatticeSerializer3D<T,Lattice>::isEmpty() const {$/;"	f	class:olb::BlockLatticeSerializer3D
isEmpty	dataFields2D.hh	/^bool SequentialScalarFieldSerializer2D<T>::isEmpty() const {$/;"	f	class:olb::SequentialScalarFieldSerializer2D
isEmpty	dataFields2D.hh	/^bool SequentialTensorFieldSerializer2D<T, nDim>::isEmpty() const {$/;"	f	class:olb::SequentialTensorFieldSerializer2D
isEmpty	dataFields3D.hh	/^bool SequentialScalarFieldSerializer3D<T>::isEmpty() const {$/;"	f	class:olb::SequentialScalarFieldSerializer3D
isEmpty	dataFields3D.hh	/^bool SequentialTensorFieldSerializer3D<T, nDim>::isEmpty() const {$/;"	f	class:olb::SequentialTensorFieldSerializer3D
isEmpty	serializer.hh	/^bool ScalingSerializer<T>::isEmpty() const {$/;"	f	class:olb::ScalingSerializer
isEmpty	serializer.hh	/^bool TypeConversionSerializer<T,T>::isEmpty() const {$/;"	f	class:olb::TypeConversionSerializer
isEmpty	serializer.hh	/^bool TypeConversionSerializer<T,TConv>::isEmpty() const {$/;"	f	class:olb::TypeConversionSerializer
isFull	blockLattice2D.hh	/^bool BlockLatticeUnSerializer2D<T,Lattice>::isFull() const {$/;"	f	class:olb::BlockLatticeUnSerializer2D
isFull	blockLattice3D.hh	/^bool BlockLatticeUnSerializer3D<T,Lattice>::isFull() const {$/;"	f	class:olb::BlockLatticeUnSerializer3D
isFull	dataFields2D.hh	/^bool SequentialScalarFieldUnSerializer2D<T>::isFull() const {$/;"	f	class:olb::SequentialScalarFieldUnSerializer2D
isFull	dataFields2D.hh	/^bool SequentialTensorFieldUnSerializer2D<T, nDim>::isFull() const {$/;"	f	class:olb::SequentialTensorFieldUnSerializer2D
isFull	dataFields3D.hh	/^bool SequentialScalarFieldUnSerializer3D<T>::isFull() const {$/;"	f	class:olb::SequentialScalarFieldUnSerializer3D
isFull	dataFields3D.hh	/^bool SequentialTensorFieldUnSerializer3D<T, nDim>::isFull() const {$/;"	f	class:olb::SequentialTensorFieldUnSerializer3D
lambda_e	latticeDescriptors.h	/^        static const T lambda_e;    \/\/\/< relaxation parameter for the bulk stress$/;"	m	struct:olb::descriptors::D3Q13DescriptorBase
lambda_e	latticeDescriptors.hh	/^    const T D3Q13DescriptorBase<T>::lambda_e = (T)1.5;$/;"	m	class:olb::descriptors::D3Q13DescriptorBase
lambda_h	latticeDescriptors.h	/^        static const T lambda_h;    \/\/\/< additional relaxation parameter$/;"	m	struct:olb::descriptors::D3Q13DescriptorBase
lambda_h	latticeDescriptors.hh	/^    const T D3Q13DescriptorBase<T>::lambda_h = (T)1.8;$/;"	m	class:olb::descriptors::D3Q13DescriptorBase
lambda_nu	dynamics.h	/^    T lambda_nu;        \/\/\/< first relaxation parameter$/;"	m	class:olb::D3Q13dynamics
lambda_nu_prime	dynamics.h	/^    T lambda_nu_prime;  \/\/\/< second relaxation parameter$/;"	m	class:olb::D3Q13dynamics
lastGlobNum	loadBalancer.h	/^        int lastGlobNum;$/;"	m	class:olb::loadBalancer
latticeCouplings	blockLattice2D.h	/^    PostProcVector       postProcessors, latticeCouplings;$/;"	m	class:olb::BlockLattice2D
latticeCouplings	blockLattice3D.h	/^    PostProcVector       postProcessors, latticeCouplings;$/;"	m	class:olb::BlockLattice3D
latticeU	units.h	/^    T latticeU, Re;$/;"	m	class:olb::LBunits
lbDynamicsHelpers	lbHelpers.h	/^struct lbDynamicsHelpers {$/;"	s	namespace:olb
lbDynamicsHelpers	lbHelpers2D.h	/^struct lbDynamicsHelpers<T, descriptors::D2Q9DescriptorBase<T> > {$/;"	s	namespace:olb
lbDynamicsHelpers	lbHelpers3D.h	/^struct lbDynamicsHelpers<T, descriptors::D3Q15DescriptorBase<T> > {$/;"	s	namespace:olb
lbDynamicsHelpers	lbHelpers3D.h	/^struct lbDynamicsHelpers<T, descriptors::D3Q19DescriptorBase<T> > {$/;"	s	namespace:olb
lbExternalHelpers	lbHelpers.h	/^struct lbExternalHelpers {$/;"	s	namespace:olb
lbExternalHelpers	lbHelpers2D.h	/^struct lbExternalHelpers<T, descriptors::ForcedD2Q9Descriptor> {$/;"	s	namespace:olb
lbHelpers	lbHelpers.h	/^struct lbHelpers {$/;"	s	namespace:olb
lbLatticeHelpers	lbHelpers.h	/^struct lbLatticeHelpers {$/;"	s	namespace:olb
lbLatticeHelpers	lbHelpers2D.h	/^struct lbLatticeHelpers<T, descriptors::D2Q9Descriptor> {$/;"	s	namespace:olb
lbLatticeHelpers	lbHelpers2D.h	/^struct lbLatticeHelpers<T, descriptors::ForcedD2Q9Descriptor> {$/;"	s	namespace:olb
lbLatticeHelpers	lbHelpers3D.h	/^struct lbLatticeHelpers<T, descriptors::D3Q15Descriptor> {$/;"	s	namespace:olb
lbLatticeHelpers	lbHelpers3D.h	/^struct lbLatticeHelpers<T, descriptors::D3Q19Descriptor> {$/;"	s	namespace:olb
lbLatticeHelpers	lbHelpers3D.h	/^struct lbLatticeHelpers<T, descriptors::ForcedD3Q15Descriptor> {$/;"	s	namespace:olb
lbLatticeHelpers	lbHelpers3D.h	/^struct lbLatticeHelpers<T, descriptors::ForcedD3Q19Descriptor> {$/;"	s	namespace:olb
loadBalancer	loadBalancer.cpp	/^loadBalancer::loadBalancer(int rank, int size, int globChunkSize, int offset) {$/;"	f	class:olb::loadBalancer
loadBalancer	loadBalancer.h	/^        loadBalancer() {};$/;"	f	class:olb::loadBalancer
loadBalancer	loadBalancer.h	/^class loadBalancer {$/;"	c	namespace:olb
loc	loadBalancer.cpp	/^int loadBalancer::loc(const int& glob) {$/;"	f	class:olb::loadBalancer
loc	loadBalancer.cpp	/^int loadBalancer::loc(int glob) const {$/;"	f	class:olb::loadBalancer
locChunkSize	loadBalancer.h	/^        int locChunkSize;$/;"	m	class:olb::loadBalancer
logOutDir	singleton.h	/^    std::string logOutDir;$/;"	m	class:olb::singleton::Directories
lx	units.h	/^    T lx, ly, lz;$/;"	m	class:olb::LBunits
ly	units.h	/^    T lx, ly, lz;$/;"	m	class:olb::LBunits
lz	units.h	/^    T lx, ly, lz;$/;"	m	class:olb::LBunits
makePeriodic	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::makePeriodic() {$/;"	f	class:olb::BlockLattice2D
makePeriodic	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::makePeriodic() {$/;"	f	class:olb::BlockLattice3D
maxU	postProcessing.h	/^    T average_rho, average_energy, maxU;$/;"	m	class:olb::LatticeStatistics
max_uSqr	postProcessing.h	/^    T sum_rho, sum_uSqr, max_uSqr;$/;"	m	class:olb::LatticeStatistics
maximum	dataReductions.h	/^    T maximum;$/;"	m	class:olb::MaxReduction
memorySaving	serializer.h	/^    typedef enum {forward, backward, memorySaving} OrderingT;$/;"	e	enum:olb::IndexOrdering::__anon9
minimum	dataReductions.h	/^    T minimum;$/;"	m	class:olb::MinReduction
modifyVelocity	lbHelpers.h	/^    static void modifyVelocity(Cell<T,Lattice>& cell, const T newU[Lattice<T>::d]) {$/;"	f	struct:olb::lbHelpers
modifyVelocity	lbHelpers.h	/^    static void modifyVelocity(T* cell, const T newU[Descriptor::d]) {$/;"	f	struct:olb::lbDynamicsHelpers
modifyVelocity	lbHelpers2D.h	/^    static void modifyVelocity(T* cell, const T newU[2]) {$/;"	f	struct:olb::lbDynamicsHelpers
modifyVelocity	lbHelpers3D.h	/^    static void modifyVelocity(T* cell, const T newU[3]) {$/;"	f	struct:olb::lbDynamicsHelpers
momenta	dynamics.h	/^    Momenta<T,Lattice>& momenta;  \/\/\/< computation of velocity momenta$/;"	m	class:olb::BasicDynamics
momenta1	momentaOnBoundaries3D.h	/^    RegularizedVelocityBM<T,Lattice,direction1,normal1> momenta1;$/;"	m	class:olb::InnerEdgeVelBM3D
momenta2	momentaOnBoundaries3D.h	/^    RegularizedVelocityBM<T,Lattice,direction2,normal2> momenta2;$/;"	m	class:olb::InnerEdgeVelBM3D
momentaVector	boundaryInstantiator2D.h	/^    std::vector<Momenta<T,Lattice>*>  momentaVector;$/;"	m	class:olb::BoundaryConditionInstantiator2D
momentaVector	boundaryInstantiator3D.h	/^    std::vector<Momenta<T,Lattice>*>  momentaVector;$/;"	m	class:olb::BoundaryConditionInstantiator3D
momentumField	dataAnalysis2D.h	/^    TensorField2D<T,2> momentumField;$/;"	m	struct:olb::AnalysisFieldsImpl2D
momentumField	dataAnalysis2D.h	/^    TensorField2D<T,2>& momentumField;$/;"	m	struct:olb::AnalysisFields2D
momentumField	dataAnalysis3D.h	/^    TensorField3D<T,3> momentumField;$/;"	m	struct:olb::AnalysisFieldsImpl3D
momentumField	dataAnalysis3D.h	/^    TensorField3D<T,3>& momentumField;$/;"	m	struct:olb::AnalysisFields3D
momentumFieldComputed	analysisFlags.h	/^    bool momentumFieldComputed;$/;"	m	struct:olb::AnalysisFlags2D
momentumFieldComputed	analysisFlags.h	/^    bool momentumFieldComputed;$/;"	m	struct:olb::AnalysisFlags3D
multiPhysics	multiPhysics.cpp	/^namespace multiPhysics {$/;"	n	namespace:olb	file:
multiPhysics	multiPhysics.h	/^namespace multiPhysics {$/;"	n	namespace:olb
n	util.h	/^        static const int n = $/;"	m	struct:olb::util::TensorVal
nCell	units.h	/^    int nCell(T l) const { return (int)(l\/getDeltaX()+(T)0.5); }$/;"	f	class:olb::LBunits
nStep	units.h	/^    int nStep(T t) const { return (int)(t\/getDeltaT()+(T)0.5); }$/;"	f	class:olb::LBunits
neqPiD2Q9	firstOrderLbHelpers2D.h	/^namespace neqPiD2Q9 {$/;"	n	namespace:olb
neutralElement	dataReductions.h	/^    static const T neutralElement;$/;"	m	class:olb::AverageReduction
neutralElement	dataReductions.h	/^    static const T neutralElement;$/;"	m	class:olb::MaxReduction
neutralElement	dataReductions.h	/^    static const T neutralElement;$/;"	m	class:olb::MinReduction
neutralElement	dataReductions.h	/^    static const T neutralElement;$/;"	m	class:olb::NormSqrReduction
neutralElement	dataReductions.hh	/^const T AverageReduction<T>::neutralElement = T();$/;"	m	class:olb::AverageReduction
neutralElement	dataReductions.hh	/^const T MaxReduction<T>::neutralElement = std::numeric_limits<T>::min();$/;"	m	class:olb::MaxReduction
neutralElement	dataReductions.hh	/^const T MinReduction<T>::neutralElement = std::numeric_limits<T>::max();$/;"	m	class:olb::MinReduction
neutralElement	dataReductions.hh	/^const T NormSqrReduction<T>::neutralElement = T();$/;"	m	class:olb::NormSqrReduction
normSqr	dataReductions.h	/^    T normSqr;$/;"	m	class:olb::NormSqrReduction
normSqr	util.h	/^    T normSqr(const T u[d]) {$/;"	f	namespace:olb::util
numCells	postProcessing.h	/^    int numCells;$/;"	m	class:olb::LatticeStatistics
numScalars	latticeDescriptors.h	/^        static const int numScalars = 0;$/;"	m	struct:olb::descriptors::NoExternalField
numScalars	latticeDescriptors.h	/^        static const int numScalars = 2;$/;"	m	struct:olb::descriptors::Force2dDescriptor
numScalars	latticeDescriptors.h	/^        static const int numScalars = 3;$/;"	m	struct:olb::descriptors::Force3dDescriptor
numSpecies	latticeDescriptors.h	/^        static const int numSpecies = 0;$/;"	m	struct:olb::descriptors::NoExternalField
numSpecies	latticeDescriptors.h	/^        static const int numSpecies = 1;$/;"	m	struct:olb::descriptors::Force2dDescriptor
numSpecies	latticeDescriptors.h	/^        static const int numSpecies = 1;$/;"	m	struct:olb::descriptors::Force3dDescriptor
nx	blockLattice2D.h	/^    int                  nx, ny;$/;"	m	class:olb::BlockLattice2D
nx	blockLattice3D.h	/^    int                  nx, ny, nz;$/;"	m	class:olb::BlockLattice3D
nx	blockLatticeView2D.h	/^    int                          nx,ny;$/;"	m	class:olb::BlockLatticeView2D
nx	blockLatticeView3D.h	/^    int                          nx,ny,nz;$/;"	m	class:olb::BlockLatticeView3D
nx	dataFields2D.h	/^    int nx;$/;"	m	class:olb::ScalarField2D
nx	dataFields2D.h	/^    int nx;$/;"	m	class:olb::TensorField2D
nx	dataFields3D.h	/^    int nx;$/;"	m	class:olb::ScalarField3D
nx	dataFields3D.h	/^    int nx;$/;"	m	class:olb::TensorField3D
ny	blockLattice2D.h	/^    int                  nx, ny;$/;"	m	class:olb::BlockLattice2D
ny	blockLattice3D.h	/^    int                  nx, ny, nz;$/;"	m	class:olb::BlockLattice3D
ny	blockLatticeView2D.h	/^    int                          nx,ny;$/;"	m	class:olb::BlockLatticeView2D
ny	blockLatticeView3D.h	/^    int                          nx,ny,nz;$/;"	m	class:olb::BlockLatticeView3D
ny	dataFields2D.h	/^    int ny;$/;"	m	class:olb::ScalarField2D
ny	dataFields2D.h	/^    int ny;$/;"	m	class:olb::TensorField2D
ny	dataFields3D.h	/^    int ny;$/;"	m	class:olb::ScalarField3D
ny	dataFields3D.h	/^    int ny;$/;"	m	class:olb::TensorField3D
nz	blockLattice3D.h	/^    int                  nx, ny, nz;$/;"	m	class:olb::BlockLattice3D
nz	blockLatticeView3D.h	/^    int                          nx,ny,nz;$/;"	m	class:olb::BlockLatticeView3D
nz	dataFields3D.h	/^    int nz;$/;"	m	class:olb::ScalarField3D
nz	dataFields3D.h	/^    int nz;$/;"	m	class:olb::TensorField3D
olb	analysisFlags.cpp	/^namespace olb {$/;"	n	file:
olb	analysisFlags.h	/^namespace olb {$/;"	n
olb	blockLattice2D.cpp	/^namespace olb {$/;"	n	file:
olb	blockLattice2D.h	/^namespace olb {$/;"	n
olb	blockLattice2D.hh	/^namespace olb {$/;"	n
olb	blockLattice3D.cpp	/^namespace olb {$/;"	n	file:
olb	blockLattice3D.h	/^namespace olb {$/;"	n
olb	blockLattice3D.hh	/^namespace olb {$/;"	n
olb	blockLatticeView2D.cpp	/^namespace olb {$/;"	n	file:
olb	blockLatticeView2D.h	/^namespace olb {$/;"	n
olb	blockLatticeView2D.hh	/^namespace olb {$/;"	n
olb	blockLatticeView3D.cpp	/^namespace olb {$/;"	n	file:
olb	blockLatticeView3D.h	/^namespace olb {$/;"	n
olb	blockLatticeView3D.hh	/^namespace olb {$/;"	n
olb	blockStructure2D.h	/^namespace olb {$/;"	n
olb	blockStructure3D.h	/^namespace olb {$/;"	n
olb	boundaryCondition2D.cpp	/^namespace olb {$/;"	n	file:
olb	boundaryCondition2D.h	/^namespace olb {$/;"	n
olb	boundaryCondition2D.hh	/^namespace olb {$/;"	n
olb	boundaryCondition3D.cpp	/^namespace olb {$/;"	n	file:
olb	boundaryCondition3D.h	/^namespace olb {$/;"	n
olb	boundaryCondition3D.hh	/^namespace olb {$/;"	n
olb	boundaryInstantiator2D.h	/^namespace olb {$/;"	n
olb	boundaryInstantiator3D.h	/^namespace olb {$/;"	n
olb	boundaryPostProcessors2D.cpp	/^namespace olb {$/;"	n	file:
olb	boundaryPostProcessors2D.h	/^namespace olb {$/;"	n
olb	boundaryPostProcessors2D.hh	/^namespace olb {$/;"	n
olb	boundaryPostProcessors3D.cpp	/^namespace olb {$/;"	n	file:
olb	boundaryPostProcessors3D.h	/^namespace olb {$/;"	n
olb	boundaryPostProcessors3D.hh	/^namespace olb {$/;"	n
olb	cell.cpp	/^namespace olb {$/;"	n	file:
olb	cell.h	/^namespace olb {$/;"	n
olb	cell.hh	/^namespace olb {$/;"	n
olb	d3q13Helpers.h	/^namespace olb {$/;"	n
olb	dataAnalysis2D.cpp	/^namespace olb {$/;"	n	file:
olb	dataAnalysis2D.h	/^namespace olb {$/;"	n
olb	dataAnalysis2D.hh	/^namespace olb {$/;"	n
olb	dataAnalysis3D.cpp	/^namespace olb {$/;"	n	file:
olb	dataAnalysis3D.h	/^namespace olb {$/;"	n
olb	dataAnalysis3D.hh	/^namespace olb {$/;"	n
olb	dataAnalysisBase2D.h	/^namespace olb {$/;"	n
olb	dataAnalysisBase3D.h	/^namespace olb {$/;"	n
olb	dataFieldBase2D.h	/^namespace olb {$/;"	n
olb	dataFieldBase3D.h	/^namespace olb {$/;"	n
olb	dataFields2D.cpp	/^namespace olb {$/;"	n	file:
olb	dataFields2D.h	/^namespace olb {$/;"	n
olb	dataFields2D.hh	/^namespace olb {$/;"	n
olb	dataFields3D.cpp	/^namespace olb {$/;"	n	file:
olb	dataFields3D.h	/^namespace olb {$/;"	n
olb	dataFields3D.hh	/^namespace olb {$/;"	n
olb	dataReductions.cpp	/^namespace olb {$/;"	n	file:
olb	dataReductions.h	/^namespace olb {$/;"	n
olb	dataReductions.hh	/^namespace olb {$/;"	n
olb	dynamics.cpp	/^namespace olb {$/;"	n	file:
olb	dynamics.h	/^namespace olb {$/;"	n
olb	dynamics.hh	/^namespace olb {$/;"	n
olb	finiteDifference.h	/^namespace olb {$/;"	n
olb	finiteDifference2D.h	/^namespace olb {$/;"	n
olb	finiteDifference3D.h	/^namespace olb {$/;"	n
olb	firstOrderLbHelpers.h	/^namespace olb {$/;"	n
olb	firstOrderLbHelpers2D.h	/^namespace olb {$/;"	n
olb	firstOrderLbHelpers3D.h	/^namespace olb {$/;"	n
olb	latticeDescriptors.cpp	/^namespace olb {$/;"	n	file:
olb	latticeDescriptors.h	/^namespace olb {$/;"	n
olb	latticeDescriptors.hh	/^namespace olb {$/;"	n
olb	lbHelpers.h	/^namespace olb {$/;"	n
olb	lbHelpers2D.h	/^namespace olb {$/;"	n
olb	lbHelpers3D.h	/^namespace olb {$/;"	n
olb	loadBalancer.cpp	/^namespace olb {$/;"	n	file:
olb	loadBalancer.h	/^namespace olb {$/;"	n
olb	momentaOnBoundaries.h	/^namespace olb {$/;"	n
olb	momentaOnBoundaries.hh	/^namespace olb {$/;"	n
olb	momentaOnBoundaries2D.cpp	/^namespace olb {$/;"	n	file:
olb	momentaOnBoundaries2D.h	/^namespace olb {$/;"	n
olb	momentaOnBoundaries2D.hh	/^namespace olb {$/;"	n
olb	momentaOnBoundaries3D.cpp	/^namespace olb {$/;"	n	file:
olb	momentaOnBoundaries3D.h	/^namespace olb {$/;"	n
olb	momentaOnBoundaries3D.hh	/^namespace olb {$/;"	n
olb	multiPhysics.cpp	/^namespace olb {$/;"	n	file:
olb	multiPhysics.h	/^namespace olb {$/;"	n
olb	olbInit.h	/^namespace olb {$/;"	n
olb	postProcessing.h	/^namespace olb {$/;"	n
olb	postProcessing.hh	/^namespace olb {$/;"	n
olb	postProcessing2D.cpp	/^namespace olb {$/;"	n	file:
olb	postProcessing3D.cpp	/^namespace olb {$/;"	n	file:
olb	serializer.cpp	/^namespace olb {$/;"	n	file:
olb	serializer.h	/^namespace olb {$/;"	n
olb	serializer.hh	/^namespace olb {$/;"	n
olb	simulationSetup2D.cpp	/^namespace olb {$/;"	n	file:
olb	simulationSetup2D.h	/^namespace olb {$/;"	n
olb	simulationSetup2D.hh	/^namespace olb {$/;"	n
olb	simulationSetup3D.cpp	/^namespace olb {$/;"	n	file:
olb	simulationSetup3D.h	/^namespace olb {$/;"	n
olb	simulationSetup3D.hh	/^namespace olb {$/;"	n
olb	singleton.h	/^namespace olb {$/;"	n
olb	spatiallyExtendedObject2D.h	/^namespace olb {$/;"	n
olb	spatiallyExtendedObject3D.h	/^namespace olb {$/;"	n
olb	units.h	/^namespace olb {$/;"	n
olb	util.h	/^namespace olb {$/;"	n
olbDir	singleton.h	/^    std::string olbDir;$/;"	m	class:olb::singleton::Directories
olbInit	olbInit.h	/^inline void olbInit(int *argc, char ***argv, bool verbous=false) {$/;"	f	namespace:olb
omega	dynamics.h	/^    T omega;  \/\/\/< relaxation parameter$/;"	m	class:olb::BGKdynamics
omega	dynamics.h	/^    T omega;  \/\/\/< relaxation parameter$/;"	m	class:olb::ConstRhoBGKdynamics
omega	dynamics.h	/^    T omega;  \/\/\/< relaxation parameter$/;"	m	class:olb::ForcedBGKdynamics
omega	dynamics.h	/^    T omega;  \/\/\/< relaxation parameter$/;"	m	class:olb::IncBGKdynamics
omega	dynamics.h	/^    T omega;  \/\/\/< relaxation parameter$/;"	m	class:olb::RLBdynamics
omega_bulk	dynamics.h	/^    const int omega_bulk  = 1;$/;"	m	namespace:olb::dynamicParams
omega_shear	dynamics.h	/^    const int omega_shear = 0;$/;"	m	namespace:olb::dynamicParams
omp	ompManager.cpp	/^        ompManager omp;$/;"	v
ompManager	ompManager.h	/^        class ompManager {$/;"	c
operator =	blockLattice2D.hh	/^BlockLattice2D<T,Lattice>& BlockLattice2D<T,Lattice>::operator= ($/;"	f	class:olb::BlockLattice2D
operator =	blockLattice3D.hh	/^BlockLattice3D<T,Lattice>& BlockLattice3D<T,Lattice>::operator= ($/;"	f	class:olb::BlockLattice3D
operator =	blockLatticeView2D.hh	/^BlockLatticeView2D<T,Lattice>& BlockLatticeView2D<T,Lattice>::operator= ($/;"	f	class:olb::BlockLatticeView2D
operator =	blockLatticeView3D.hh	/^BlockLatticeView3D<T,Lattice>& BlockLatticeView3D<T,Lattice>::operator= ($/;"	f	class:olb::BlockLatticeView3D
operator =	dataFields2D.hh	/^ScalarField2D<T>& ScalarField2D<T>::operator=(ScalarField2D<T> const& rhs) {$/;"	f	class:olb::ScalarField2D
operator =	dataFields2D.hh	/^TensorField2D<T,nDim>& TensorField2D<T,nDim>::operator=(TensorField2D<T,nDim> const& rhs) {$/;"	f	class:olb::TensorField2D
operator =	dataFields3D.hh	/^ScalarField3D<T>& ScalarField3D<T>::operator=(ScalarField3D<T> const& rhs) {$/;"	f	class:olb::ScalarField3D
operator =	dataFields3D.hh	/^TensorField3D<T,nDim>& TensorField3D<T,nDim>::operator=(TensorField3D<T,nDim> const& rhs) {$/;"	f	class:olb::TensorField3D
operator []	cell.h	/^    T const& operator[](int iPop) const {$/;"	f	class:olb::Cell
operator []	cell.h	/^    T& operator[](int iPop) {$/;"	f	class:olb::Cell
operator []	dataFields2D.h	/^    T const& operator[] (int ind) const {$/;"	f	class:olb::ScalarField2D
operator []	dataFields2D.h	/^    T& operator[] (int ind) {$/;"	f	class:olb::ScalarField2D
operator []	dataFields2D.h	/^    Tensor const& operator[] (int ind) const {$/;"	f	class:olb::TensorField2D
operator []	dataFields2D.h	/^    Tensor& operator[] (int ind) {$/;"	f	class:olb::TensorField2D
operator []	dataFields3D.h	/^    T const& operator[] (int ind) const {$/;"	f	class:olb::ScalarField3D
operator []	dataFields3D.h	/^    T& operator[] (int ind) {$/;"	f	class:olb::ScalarField3D
operator []	dataFields3D.h	/^    virtual Tensor const& operator[] (int ind) const {$/;"	f	class:olb::TensorField3D
operator []	dataFields3D.h	/^    virtual Tensor& operator[] (int ind) {$/;"	f	class:olb::TensorField3D
opposite	util.h	/^    template <typename Descriptor> inline int opposite(int iPop) {$/;"	f	namespace:olb::util
ordering	blockLattice2D.h	/^    IndexOrdering::OrderingT ordering;$/;"	m	class:olb::BlockLatticeSerializer2D
ordering	blockLattice2D.h	/^    IndexOrdering::OrderingT ordering;$/;"	m	class:olb::BlockLatticeUnSerializer2D
ordering	blockLattice3D.h	/^    IndexOrdering::OrderingT ordering;$/;"	m	class:olb::BlockLatticeSerializer3D
ordering	blockLattice3D.h	/^    IndexOrdering::OrderingT ordering;$/;"	m	class:olb::BlockLatticeUnSerializer3D
ordering	dataFields2D.h	/^    IndexOrdering::OrderingT ordering;$/;"	m	class:olb::SequentialScalarFieldSerializer2D
ordering	dataFields2D.h	/^    IndexOrdering::OrderingT ordering;$/;"	m	class:olb::SequentialScalarFieldUnSerializer2D
ordering	dataFields2D.h	/^    IndexOrdering::OrderingT ordering;$/;"	m	class:olb::SequentialTensorFieldSerializer2D
ordering	dataFields2D.h	/^    IndexOrdering::OrderingT ordering;$/;"	m	class:olb::SequentialTensorFieldUnSerializer2D
ordering	dataFields3D.h	/^    IndexOrdering::OrderingT ordering;$/;"	m	class:olb::SequentialScalarFieldSerializer3D
ordering	dataFields3D.h	/^    IndexOrdering::OrderingT ordering;$/;"	m	class:olb::SequentialScalarFieldUnSerializer3D
ordering	dataFields3D.h	/^    IndexOrdering::OrderingT ordering;$/;"	m	class:olb::SequentialTensorFieldSerializer3D
ordering	dataFields3D.h	/^    IndexOrdering::OrderingT ordering;$/;"	m	class:olb::SequentialTensorFieldUnSerializer3D
originalLattice	blockLatticeView2D.h	/^    BlockStructure2D<T,Lattice>  *originalLattice;$/;"	m	class:olb::BlockLatticeView2D
originalLattice	blockLatticeView3D.h	/^    BlockStructure3D<T,Lattice>  *originalLattice;$/;"	m	class:olb::BlockLatticeView3D
partial_rho	lbHelpers2D.h	/^    static void partial_rho ( T const* cell,$/;"	f	struct:olb::lbDynamicsHelpers
partial_rho	lbHelpers3D.h	/^    static void partial_rho ( T const* cell,$/;"	f	struct:olb::lbDynamicsHelpers
partial_rho	lbHelpers3D.h	/^    static void partial_rho(T const* cell,$/;"	f	struct:olb::lbDynamicsHelpers
periodicEdge	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::periodicEdge(int from, int to) {$/;"	f	class:olb::BlockLattice2D
periodicSurface	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::periodicSurface ($/;"	f	class:olb::BlockLattice3D
pointsToDefaultFields	dataAnalysis2D.h	/^    bool pointsToDefaultFields;$/;"	m	class:olb::DataAnalysis2D
pointsToDefaultFields	dataAnalysis3D.h	/^    bool pointsToDefaultFields;$/;"	m	class:olb::DataAnalysis3D
poissonField	dataAnalysis2D.h	/^    ScalarField2D<T>   poissonField;$/;"	m	struct:olb::AnalysisFieldsImpl2D
poissonField	dataAnalysis2D.h	/^    ScalarField2D<T>&   poissonField;$/;"	m	struct:olb::AnalysisFields2D
poissonField	dataAnalysis3D.h	/^    ScalarField3D<T>   poissonField;$/;"	m	struct:olb::AnalysisFieldsImpl3D
poissonField	dataAnalysis3D.h	/^    ScalarField3D<T>&   poissonField;$/;"	m	struct:olb::AnalysisFields3D
poissonFieldComputed	analysisFlags.h	/^    bool poissonFieldComputed;$/;"	m	struct:olb::AnalysisFlags2D
poissonFieldComputed	analysisFlags.h	/^    bool poissonFieldComputed;$/;"	m	struct:olb::AnalysisFlags3D
populationField	dataAnalysis2D.h	/^    TensorField2D<T,Lattice<T>::q > populationField;$/;"	m	struct:olb::AnalysisFieldsImpl2D
populationField	dataAnalysis2D.h	/^    TensorField2D<T,Lattice<T>::q >& populationField;$/;"	m	struct:olb::AnalysisFields2D
populationField	dataAnalysis3D.h	/^    TensorField3D<T,Lattice<T>::q > populationField;$/;"	m	struct:olb::AnalysisFieldsImpl3D
populationField	dataAnalysis3D.h	/^    TensorField3D<T,Lattice<T>::q >& populationField;$/;"	m	struct:olb::AnalysisFields3D
populationFieldComputed	analysisFlags.h	/^    bool populationFieldComputed;$/;"	m	struct:olb::AnalysisFlags2D
populationFieldComputed	analysisFlags.h	/^    bool populationFieldComputed;$/;"	m	struct:olb::AnalysisFlags3D
postProcess	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::postProcess() {$/;"	f	class:olb::BlockLattice2D
postProcess	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::postProcess(int x0_, int x1_, int y0_, int y1_)$/;"	f	class:olb::BlockLattice2D
postProcess	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::postProcess ($/;"	f	class:olb::BlockLattice3D
postProcess	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::postProcess() {$/;"	f	class:olb::BlockLattice3D
postProcess	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::postProcess ($/;"	f	class:olb::BlockLatticeView2D
postProcess	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::postProcess() {$/;"	f	class:olb::BlockLatticeView2D
postProcess	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::postProcess($/;"	f	class:olb::BlockLatticeView3D
postProcess	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::postProcess() {$/;"	f	class:olb::BlockLatticeView3D
postProcessors	blockLattice2D.h	/^    PostProcVector       postProcessors, latticeCouplings;$/;"	m	class:olb::BlockLattice2D
postProcessors	blockLattice3D.h	/^    PostProcVector       postProcessors, latticeCouplings;$/;"	m	class:olb::BlockLattice3D
pressureField	dataAnalysis2D.h	/^    ScalarField2D<T>   pressureField;$/;"	m	struct:olb::AnalysisFieldsImpl2D
pressureField	dataAnalysis2D.h	/^    ScalarField2D<T>&   pressureField;$/;"	m	struct:olb::AnalysisFields2D
pressureField	dataAnalysis3D.h	/^    ScalarField3D<T>   pressureField;$/;"	m	struct:olb::AnalysisFieldsImpl3D
pressureField	dataAnalysis3D.h	/^    ScalarField3D<T>&   pressureField;$/;"	m	struct:olb::AnalysisFields3D
pressureFieldComputed	analysisFlags.h	/^    bool pressureFieldComputed;$/;"	m	struct:olb::AnalysisFlags2D
pressureFieldComputed	analysisFlags.h	/^    bool pressureFieldComputed;$/;"	m	struct:olb::AnalysisFlags3D
process	boundaryPostProcessors2D.hh	/^    process(BlockLattice2D<T,Lattice>& blockLattice)$/;"	f	class:olb::OuterVelocityCornerProcessor2D
process	boundaryPostProcessors2D.hh	/^    process(BlockLattice2D<T,Lattice>& blockLattice)$/;"	f	class:olb::StraightFdBoundaryProcessor2D
process	boundaryPostProcessors3D.hh	/^    process(BlockLattice3D<T,Lattice>& blockLattice)$/;"	f	class:olb::OuterVelocityCornerProcessor3D
process	boundaryPostProcessors3D.hh	/^    process(BlockLattice3D<T,Lattice>& blockLattice)$/;"	f	class:olb::OuterVelocityEdgeProcessor3D
process	boundaryPostProcessors3D.hh	/^    process(BlockLattice3D<T,Lattice>& blockLattice)$/;"	f	class:olb::PlaneFdBoundaryProcessor3D
process	postProcessing.hh	/^void StatisticsPostProcessor2D<T,Lattice>::process ($/;"	f	class:olb::StatisticsPostProcessor2D
process	postProcessing.hh	/^void StatisticsPostProcessor3D<T,Lattice>::process ($/;"	f	class:olb::StatisticsPostProcessor3D
processSubDomain	boundaryPostProcessors2D.hh	/^    processSubDomain(BlockLattice2D<T,Lattice>& blockLattice, int x0_, int x1_, int y0_, int y1_)$/;"	f	class:olb::StraightFdBoundaryProcessor2D
processSubDomain	boundaryPostProcessors2D.hh	/^    processSubDomain(BlockLattice2D<T,Lattice>& blockLattice,$/;"	f	class:olb::OuterVelocityCornerProcessor2D
processSubDomain	boundaryPostProcessors3D.hh	/^    processSubDomain(BlockLattice3D<T,Lattice>& blockLattice,$/;"	f	class:olb::OuterVelocityCornerProcessor3D
processSubDomain	boundaryPostProcessors3D.hh	/^    processSubDomain(BlockLattice3D<T,Lattice>& blockLattice,$/;"	f	class:olb::OuterVelocityEdgeProcessor3D
processSubDomain	boundaryPostProcessors3D.hh	/^    processSubDomain(BlockLattice3D<T,Lattice>& blockLattice,$/;"	f	class:olb::PlaneFdBoundaryProcessor3D
processSubDomain	postProcessing.h	/^    virtual void processSubDomain(BlockLattice2D<T,Lattice>& blockLattice,$/;"	f	struct:olb::GlobalPostProcessor2D
processSubDomain	postProcessing.h	/^    virtual void processSubDomain(BlockLattice3D<T,Lattice>& blockLattice,$/;"	f	struct:olb::GlobalPostProcessor3D
q	latticeDescriptors.h	/^        enum { d = 2, q = 9 };      \/\/\/< number of dimensions\/distr. functions$/;"	e	enum:olb::descriptors::D2Q9DescriptorBase::__anon2
q	latticeDescriptors.h	/^        enum { d = 3, q = 13 };     \/\/\/< number of dimensions\/distr. functions$/;"	e	enum:olb::descriptors::D3Q13DescriptorBase::__anon3
q	latticeDescriptors.h	/^        enum { d = 3, q = 15 };     \/\/\/< number of dimensions\/distr. functions$/;"	e	enum:olb::descriptors::D3Q15DescriptorBase::__anon4
q	latticeDescriptors.h	/^        enum { d = 3, q = 19 };     \/\/\/< number of dimensions\/distr. functions$/;"	e	enum:olb::descriptors::D3Q19DescriptorBase::__anon5
q	latticeDescriptors.h	/^        enum { d = 3, q = 27 };     \/\/\/< number of dimensions\/distr. functions$/;"	e	enum:olb::descriptors::D3Q27DescriptorBase::__anon6
rank	loadBalancer.cpp	/^int loadBalancer::rank(const int& glob) {$/;"	f	class:olb::loadBalancer
rank	loadBalancer.cpp	/^int loadBalancer::rank(int glob) const {$/;"	f	class:olb::loadBalancer
rank	ompManager.h	/^                int rank;$/;"	m	class:ompManager
rawData	blockLattice2D.h	/^    Cell<T,Lattice>      *rawData;$/;"	m	class:olb::BlockLattice2D
rawData	blockLattice3D.h	/^    Cell<T,Lattice>      *rawData;$/;"	m	class:olb::BlockLattice3D
rawData	dataFields2D.h	/^    T   *rawData;$/;"	m	class:olb::ScalarField2D
rawData	dataFields2D.h	/^    Tensor *rawData;$/;"	m	class:olb::TensorField2D
rawData	dataFields3D.h	/^    T   *rawData;$/;"	m	class:olb::ScalarField3D
rawData	dataFields3D.h	/^    Tensor *rawData;$/;"	m	class:olb::TensorField3D
reduceParallel	dataReductions.hh	/^void AverageReduction<T>::reduceParallel() {$/;"	f	class:olb::AverageReduction
reduceParallel	dataReductions.hh	/^void MaxReduction<T>::reduceParallel() {$/;"	f	class:olb::MaxReduction
reduceParallel	dataReductions.hh	/^void MinReduction<T>::reduceParallel() {$/;"	f	class:olb::MinReduction
reduceParallel	dataReductions.hh	/^void NormSqrReduction<T>::reduceParallel() {$/;"	f	class:olb::NormSqrReduction
releaseMemory	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::releaseMemory() {$/;"	f	class:olb::BlockLattice2D
releaseMemory	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::releaseMemory() {$/;"	f	class:olb::BlockLattice3D
releaseMemory	dataFields2D.hh	/^void ScalarField2D<T>::releaseMemory() {$/;"	f	class:olb::ScalarField2D
releaseMemory	dataFields2D.hh	/^void TensorField2D<T,nDim>::releaseMemory() {$/;"	f	class:olb::TensorField2D
releaseMemory	dataFields3D.hh	/^void ScalarField3D<T>::releaseMemory() {$/;"	f	class:olb::ScalarField3D
releaseMemory	dataFields3D.hh	/^void TensorField3D<T,nDim>::releaseMemory() {$/;"	f	class:olb::TensorField3D
remainingIndexes	util.h	/^    std::vector<int> remainingIndexes(const std::vector<int> &indices)$/;"	f	namespace:olb::util
reset	analysisFlags.cpp	/^void AnalysisFlags2D::reset() {$/;"	f	class:olb::AnalysisFlags2D
reset	analysisFlags.cpp	/^void AnalysisFlags3D::reset() {$/;"	f	class:olb::AnalysisFlags3D
reset	dataAnalysis2D.hh	/^void DataAnalysis2D<T,Lattice>::reset() const {$/;"	f	class:olb::DataAnalysis2D
reset	dataAnalysis3D.hh	/^void DataAnalysis3D<T,Lattice>::reset() const {$/;"	f	class:olb::DataAnalysis3D
reset	dataFields2D.hh	/^void ScalarField2D<T>::reset() {$/;"	f	class:olb::ScalarField2D
reset	dataFields2D.hh	/^void TensorField2D<T,nDim>::reset() {$/;"	f	class:olb::TensorField2D
reset	dataFields3D.hh	/^void ScalarField3D<T>::reset() {$/;"	f	class:olb::ScalarField3D
reset	dataFields3D.hh	/^void TensorField3D<T,nDim>::reset() {$/;"	f	class:olb::TensorField3D
reset	dataReductions.h	/^    virtual void reset() { average = neutralElement; weight=T(); }$/;"	f	class:olb::AverageReduction
reset	dataReductions.h	/^    virtual void reset() { maximum = neutralElement; }$/;"	f	class:olb::MaxReduction
reset	dataReductions.h	/^    virtual void reset() { minimum = neutralElement; }$/;"	f	class:olb::MinReduction
reset	dataReductions.h	/^    virtual void reset() { normSqr = neutralElement; weight=T(); }$/;"	f	class:olb::NormSqrReduction
reset	postProcessing.hh	/^void LatticeStatistics<T>::reset ($/;"	f	class:olb::LatticeStatistics
reset	postProcessing.hh	/^void LatticeStatistics<T>::reset() {$/;"	f	class:olb::LatticeStatistics
resetPostProcessors	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::resetPostProcessors() {$/;"	f	class:olb::BlockLattice2D
resetPostProcessors	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::resetPostProcessors() {$/;"	f	class:olb::BlockLattice3D
resetPostProcessors	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::resetPostProcessors() {$/;"	f	class:olb::BlockLatticeView2D
resetPostProcessors	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::resetPostProcessors() {$/;"	f	class:olb::BlockLatticeView3D
resolution	units.h	/^    int resolution;$/;"	m	class:olb::LBunits
revert	cell.hh	/^void Cell<T,Lattice>::revert() {$/;"	f	class:olb::Cell
rho	dynamics.h	/^    T rho;$/;"	m	class:olb::BounceBack
rho	momentaOnBoundaries.h	/^    T rho, u[Lattice<T>::d];$/;"	m	class:olb::EquilibriumBM
rlbCollision	firstOrderLbHelpers.h	/^    static T rlbCollision ($/;"	f	struct:olb::rlbHelpers
rlbCollision	firstOrderLbHelpers2D.h	/^    static T rlbCollision ($/;"	f	struct:olb::rlbHelpers
rlbHelpers	firstOrderLbHelpers.h	/^struct rlbHelpers {$/;"	s	namespace:olb
rlbHelpers	firstOrderLbHelpers2D.h	/^struct rlbHelpers<T, descriptors::D2Q9Descriptor> {$/;"	s	namespace:olb
scalarField	dataFields2D.h	/^    ScalarField2D<T> const& scalarField;$/;"	m	class:olb::SequentialScalarFieldSerializer2D
scalarField	dataFields2D.h	/^    ScalarField2D<T>& scalarField;$/;"	m	class:olb::SequentialScalarFieldUnSerializer2D
scalarField	dataFields3D.h	/^    ScalarField3D<T> const& scalarField;$/;"	m	class:olb::SequentialScalarFieldSerializer3D
scalarField	dataFields3D.h	/^    ScalarField3D<T>& scalarField;$/;"	m	class:olb::SequentialScalarFieldUnSerializer3D
scalarProduct	util.h	/^    T scalarProduct(const T u1[d], const T u2[d]) {$/;"	f	namespace:olb::util
scaledBuffer	serializer.h	/^    mutable std::vector<T> scaledBuffer;$/;"	m	class:olb::ScalingSerializer
scalingFactor	serializer.h	/^    T scalingFactor;$/;"	m	class:olb::ScalingSerializer
serialize	cell.hh	/^void Cell<T,Lattice>::serialize(T* data) const {$/;"	f	class:olb::Cell
serializer	blockLattice2D.h	/^    mutable BlockLatticeSerializer2D<T,Lattice>* serializer;$/;"	m	class:olb::BlockLattice2D
serializer	blockLattice3D.h	/^    mutable BlockLatticeSerializer3D<T,Lattice>* serializer;$/;"	m	class:olb::BlockLattice3D
serializer	dataFields2D.h	/^    mutable SequentialScalarFieldSerializer2D<T>* serializer;$/;"	m	class:olb::ScalarField2D
serializer	dataFields2D.h	/^    mutable SequentialTensorFieldSerializer2D<T,nDim>* serializer;$/;"	m	class:olb::TensorField2D
serializer	dataFields3D.h	/^    mutable SequentialScalarFieldSerializer3D<T>* serializer;$/;"	m	class:olb::ScalarField3D
serializer	dataFields3D.h	/^    mutable SequentialTensorFieldSerializer3D<T,nDim>* serializer;$/;"	m	class:olb::TensorField3D
setImageOutDir	singleton.h	/^    void setImageOutDir(std::string imageOutDir_) {$/;"	f	class:olb::singleton::Directories
setLogOutDir	singleton.h	/^    void setLogOutDir(std::string logOutDir_) {$/;"	f	class:olb::singleton::Directories
setOlbDir	singleton.h	/^    void setOlbDir(std::string olbDir_) {$/;"	f	class:olb::singleton::Directories
setOmega	dynamics.hh	/^void BGKdynamics<T,Lattice>::setOmega(T omega_) {$/;"	f	class:olb::BGKdynamics
setOmega	dynamics.hh	/^void BounceBack<T,Lattice>::setOmega(T omega_)$/;"	f	class:olb::BounceBack
setOmega	dynamics.hh	/^void CombinedRLBdynamics<T,Lattice,Dynamics>::setOmega(T omega_)$/;"	f	class:olb::CombinedRLBdynamics
setOmega	dynamics.hh	/^void ConstRhoBGKdynamics<T,Lattice>::setOmega(T omega_) {$/;"	f	class:olb::ConstRhoBGKdynamics
setOmega	dynamics.hh	/^void D3Q13dynamics<T,Lattice>::setOmega(T omega_) {$/;"	f	class:olb::D3Q13dynamics
setOmega	dynamics.hh	/^void ForcedBGKdynamics<T,Lattice>::setOmega(T omega_) {$/;"	f	class:olb::ForcedBGKdynamics
setOmega	dynamics.hh	/^void IncBGKdynamics<T,Lattice>::setOmega(T omega_) {$/;"	f	class:olb::IncBGKdynamics
setOmega	dynamics.hh	/^void NoDynamics<T,Lattice>::setOmega(T omega_)$/;"	f	class:olb::NoDynamics
setOmega	dynamics.hh	/^void RLBdynamics<T,Lattice>::setOmega(T omega_) {$/;"	f	class:olb::RLBdynamics
setOutputDir	singleton.h	/^    void setOutputDir(std::string outputDir) {$/;"	f	class:olb::singleton::Directories
setParameter	dynamics.hh	/^void CombinedRLBdynamics<T,Lattice,Dynamics>::setParameter(int whichParameter, T value) {$/;"	f	class:olb::CombinedRLBdynamics
setParameter	dynamics.hh	/^void Dynamics<T,Lattice>::setParameter(int whichParameter, T value) {$/;"	f	class:olb::Dynamics
setVtkOutDir	singleton.h	/^    void setVtkOutDir(std::string vtkOutDir_) {$/;"	f	class:olb::singleton::Directories
set_dynamic	ompManager.cpp	/^        void ompManager::set_dynamic(int dynamicThreads) { $/;"	f	class:ompManager
shift	postProcessing.hh	/^void LatticeCouplingGenerator2D<T,Lattice>::shift(int deltaX, int deltaY) {$/;"	f	class:olb::LatticeCouplingGenerator2D
shift	postProcessing.hh	/^void LatticeCouplingGenerator3D<T,Lattice>::shift ($/;"	f	class:olb::LatticeCouplingGenerator3D
shift	postProcessing.hh	/^void PostProcessorGenerator2D<T,Lattice>::shift(int deltaX, int deltaY) {$/;"	f	class:olb::PostProcessorGenerator2D
shift	postProcessing.hh	/^void PostProcessorGenerator3D<T,Lattice>::shift ($/;"	f	class:olb::PostProcessorGenerator3D
singleton	singleton.h	/^namespace singleton {$/;"	n	namespace:olb
size	loadBalancer.cpp	/^int loadBalancer::size() const {$/;"	f	class:olb::loadBalancer
size	loadBalancer.cpp	/^int loadBalancer::size() {$/;"	f	class:olb::loadBalancer
size	ompManager.h	/^                int size;$/;"	m	class:ompManager
sizeOfCell	blockLattice2D.h	/^    int sizeOfCell;$/;"	m	class:olb::BlockLatticeSerializer2D
sizeOfCell	blockLattice2D.h	/^    int sizeOfCell;$/;"	m	class:olb::BlockLatticeUnSerializer2D
sizeOfCell	blockLattice3D.h	/^    int sizeOfCell;$/;"	m	class:olb::BlockLatticeSerializer3D
sizeOfCell	blockLattice3D.h	/^    int sizeOfCell;$/;"	m	class:olb::BlockLatticeUnSerializer3D
sizeOfForce	dynamics.h	/^    static const int sizeOfForce   = Lattice<T>::ExternalField::sizeOfForce;$/;"	m	class:olb::ForcedBGKdynamics
sizeOfForce	latticeDescriptors.h	/^        static const int sizeOfForce   = 0;$/;"	m	struct:olb::descriptors::NoExternalField
sizeOfForce	latticeDescriptors.h	/^        static const int sizeOfForce   = 2;$/;"	m	struct:olb::descriptors::Force2dDescriptor
sizeOfForce	latticeDescriptors.h	/^        static const int sizeOfForce   = 3;$/;"	m	struct:olb::descriptors::Force3dDescriptor
sliceX	dataFields3D.hh	/^ScalarField2D<T> const& ScalarField3D<T>::sliceX(int xVal) const {$/;"	f	class:olb::ScalarField3D
sliceX	dataFields3D.hh	/^TensorField2D<T,nDim> const& TensorField3D<T,nDim>::sliceX(int xVal) const {$/;"	f	class:olb::TensorField3D
sliceY	dataFields3D.hh	/^ScalarField2D<T> const& ScalarField3D<T>::sliceY(int yVal) const {$/;"	f	class:olb::ScalarField3D
sliceY	dataFields3D.hh	/^TensorField2D<T,nDim> const& TensorField3D<T,nDim>::sliceY(int yVal) const {$/;"	f	class:olb::TensorField3D
sliceZ	dataFields3D.hh	/^ScalarField2D<T> const& ScalarField3D<T>::sliceZ(int zVal) const {$/;"	f	class:olb::ScalarField3D
sliceZ	dataFields3D.hh	/^TensorField2D<T,nDim> const& TensorField3D<T,nDim>::sliceZ(int zVal) const {$/;"	f	class:olb::TensorField3D
specifyStatisticsStatus	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::specifyStatisticsStatus ($/;"	f	class:olb::BlockLattice2D
specifyStatisticsStatus	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::specifyStatisticsStatus ($/;"	f	class:olb::BlockLattice3D
specifyStatisticsStatus	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::specifyStatisticsStatus ($/;"	f	class:olb::BlockLatticeView2D
specifyStatisticsStatus	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::specifyStatisticsStatus ($/;"	f	class:olb::BlockLatticeView3D
specifyStatisticsStatus	cell.h	/^    void specifyStatisticsStatus(bool status) {$/;"	f	class:olb::Cell
sqr	util.h	/^    T sqr(T arg) {$/;"	f	namespace:olb::util
sqrSpeedOfSound	dynamics.h	/^    const int sqrSpeedOfSound = 100; \/\/ Speed of sound squared$/;"	m	namespace:olb::dynamicParams
staticCollide	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::staticCollide(TensorFieldBase2D<T,2> const& u) {$/;"	f	class:olb::BlockLattice2D
staticCollide	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::staticCollide(int x0, int x1, int y0, int y1,$/;"	f	class:olb::BlockLattice2D
staticCollide	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::staticCollide ($/;"	f	class:olb::BlockLattice3D
staticCollide	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::staticCollide(TensorFieldBase3D<T,3> const& u) {$/;"	f	class:olb::BlockLattice3D
staticCollide	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::staticCollide ($/;"	f	class:olb::BlockLatticeView2D
staticCollide	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::staticCollide ($/;"	f	class:olb::BlockLatticeView3D
staticCollide	cell.h	/^    void staticCollide(const T u[Lattice<T>::d], LatticeStatistics<T>& statistics)$/;"	f	class:olb::Cell
staticCollide	dynamics.hh	/^void BGKdynamics<T,Lattice>::staticCollide ($/;"	f	class:olb::BGKdynamics
staticCollide	dynamics.hh	/^void BounceBack<T,Lattice>::staticCollide ($/;"	f	class:olb::BounceBack
staticCollide	dynamics.hh	/^void CombinedRLBdynamics<T,Lattice,Dynamics>::staticCollide ($/;"	f	class:olb::CombinedRLBdynamics
staticCollide	dynamics.hh	/^void ConstRhoBGKdynamics<T,Lattice>::staticCollide ($/;"	f	class:olb::ConstRhoBGKdynamics
staticCollide	dynamics.hh	/^void D3Q13dynamics<T,Lattice>::staticCollide ($/;"	f	class:olb::D3Q13dynamics
staticCollide	dynamics.hh	/^void ForcedBGKdynamics<T,Lattice>::staticCollide ($/;"	f	class:olb::ForcedBGKdynamics
staticCollide	dynamics.hh	/^void IncBGKdynamics<T,Lattice>::staticCollide ($/;"	f	class:olb::IncBGKdynamics
staticCollide	dynamics.hh	/^void NoDynamics<T,Lattice>::staticCollide ($/;"	f	class:olb::NoDynamics
staticCollide	dynamics.hh	/^void RLBdynamics<T,Lattice>::staticCollide ($/;"	f	class:olb::RLBdynamics
statistics	blockLattice2D.h	/^        LatticeStatistics<T> **statistics;$/;"	m	class:olb::BlockLattice2D
statistics	blockLattice2D.h	/^        LatticeStatistics<T> *statistics;$/;"	m	class:olb::BlockLattice2D
statistics	blockLattice3D.h	/^        LatticeStatistics<T> **statistics;$/;"	m	class:olb::BlockLattice3D
statistics	blockLattice3D.h	/^        LatticeStatistics<T> *statistics;$/;"	m	class:olb::BlockLattice3D
strainRateField	dataAnalysis2D.h	/^    TensorField2D<T,3> strainRateField;$/;"	m	struct:olb::AnalysisFieldsImpl2D
strainRateField	dataAnalysis2D.h	/^    TensorField2D<T,3>& strainRateField;$/;"	m	struct:olb::AnalysisFields2D
strainRateField	dataAnalysis3D.h	/^    TensorField3D<T,6> strainRateField;$/;"	m	struct:olb::AnalysisFieldsImpl3D
strainRateField	dataAnalysis3D.h	/^    TensorField3D<T,6>& strainRateField;$/;"	m	struct:olb::AnalysisFields3D
strainRateFieldComputed	analysisFlags.h	/^    bool strainRateFieldComputed;$/;"	m	struct:olb::AnalysisFlags2D
strainRateFieldComputed	analysisFlags.h	/^    bool strainRateFieldComputed;$/;"	m	struct:olb::AnalysisFlags3D
stream	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::stream(bool periodic) {$/;"	f	class:olb::BlockLattice2D
stream	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::stream(int x0, int x1, int y0, int y1) {$/;"	f	class:olb::BlockLattice2D
stream	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::stream(bool periodic) {$/;"	f	class:olb::BlockLattice3D
stream	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::stream(int x0, int x1, int y0, int y1, int z0, int z1) {$/;"	f	class:olb::BlockLattice3D
stream	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::stream(bool periodic) {$/;"	f	class:olb::BlockLatticeView2D
stream	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::stream(int x0_, int x1_, int y0_, int y1_)$/;"	f	class:olb::BlockLatticeView2D
stream	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::stream(bool periodic) {$/;"	f	class:olb::BlockLatticeView3D
stream	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::stream(int x0_, int x1_, int y0_, int y1_, int z0_, int z1_) {$/;"	f	class:olb::BlockLatticeView3D
stressField	dataAnalysis2D.h	/^    TensorField2D<T,3> stressField;$/;"	m	struct:olb::AnalysisFieldsImpl2D
stressField	dataAnalysis2D.h	/^    TensorField2D<T,3>& stressField;$/;"	m	struct:olb::AnalysisFields2D
stressField	dataAnalysis3D.h	/^    TensorField3D<T,6> stressField;$/;"	m	struct:olb::AnalysisFieldsImpl3D
stressField	dataAnalysis3D.h	/^    TensorField3D<T,6>& stressField;$/;"	m	struct:olb::AnalysisFields3D
stressFieldComputed	analysisFlags.h	/^    bool stressFieldComputed;$/;"	m	struct:olb::AnalysisFlags2D
stressFieldComputed	analysisFlags.h	/^    bool stressFieldComputed;$/;"	m	struct:olb::AnalysisFlags3D
stripeOffDensityOffset	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::stripeOffDensityOffset ($/;"	f	class:olb::BlockLattice2D
stripeOffDensityOffset	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::stripeOffDensityOffset(T offset) {$/;"	f	class:olb::BlockLattice2D
stripeOffDensityOffset	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::stripeOffDensityOffset ($/;"	f	class:olb::BlockLattice3D
stripeOffDensityOffset	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::stripeOffDensityOffset(T offset) {$/;"	f	class:olb::BlockLattice3D
stripeOffDensityOffset	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::stripeOffDensityOffset ($/;"	f	class:olb::BlockLatticeView2D
stripeOffDensityOffset	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::stripeOffDensityOffset(T offset) {$/;"	f	class:olb::BlockLatticeView2D
stripeOffDensityOffset	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::stripeOffDensityOffset ($/;"	f	class:olb::BlockLatticeView3D
stripeOffDensityOffset	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::stripeOffDensityOffset(T offset) {$/;"	f	class:olb::BlockLatticeView3D
subIndex	util.h	/^    std::vector<int> const& subIndex() {$/;"	f	class:olb::util::std
subIndexOutgoing	util.h	/^    std::vector<int> const& subIndexOutgoing() {$/;"	f	class:olb::util::std
subIndexOutgoingCorner2D	util.h	/^    std::vector<int> const& subIndexOutgoingCorner2D() {$/;"	f	class:olb::util::std
subscribeReductions	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::subscribeReductions(Reductor<T>& reductor) {$/;"	f	class:olb::BlockLattice2D
subscribeReductions	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::subscribeReductions(Reductor<T>& reductor) {$/;"	f	class:olb::BlockLattice3D
subscribeReductions	blockLatticeView2D.hh	/^         subscribeReductions(Reductor<T>& reductor)$/;"	f	class:olb::BlockLatticeView2D
subscribeReductions	blockLatticeView3D.hh	/^         subscribeReductions(Reductor<T>& reductor)$/;"	f	class:olb::BlockLatticeView3D
subscribeReductions	postProcessing.h	/^    virtual void subscribeReductions(BlockLattice2D<T,Lattice>& blockLattice,$/;"	f	struct:olb::LocalPostProcessor2D
subscribeReductions	postProcessing.h	/^    virtual void subscribeReductions(BlockLattice3D<T,Lattice>& blockLattice,$/;"	f	struct:olb::LocalPostProcessor3D
subscribeReductions	postProcessing.hh	/^    subscribeReductions(BlockLattice2D<T,Lattice>& blockLattice, Reductor<T>* reductor)$/;"	f	class:olb::StatisticsPostProcessor2D
subscribeReductions	postProcessing.hh	/^    subscribeReductions(BlockLattice3D<T,Lattice>& blockLattice, Reductor<T>* reductor)$/;"	f	class:olb::StatisticsPostProcessor3D
sum_nCells	postProcessing.h	/^    int sum_nCells;$/;"	m	class:olb::LatticeStatistics
sum_rho	postProcessing.h	/^    T sum_rho, sum_uSqr, max_uSqr;$/;"	m	class:olb::LatticeStatistics
sum_uSqr	postProcessing.h	/^    T sum_rho, sum_uSqr, max_uSqr;$/;"	m	class:olb::LatticeStatistics
swap	blockLattice2D.hh	/^void BlockLattice2D<T,Lattice>::swap(BlockLattice2D& rhs) {$/;"	f	class:olb::BlockLattice2D
swap	blockLattice3D.hh	/^void BlockLattice3D<T,Lattice>::swap(BlockLattice3D& rhs) {$/;"	f	class:olb::BlockLattice3D
swap	blockLatticeView2D.hh	/^void BlockLatticeView2D<T,Lattice>::swap ($/;"	f	class:olb::BlockLatticeView2D
swap	blockLatticeView3D.hh	/^void BlockLatticeView3D<T,Lattice>::swap ($/;"	f	class:olb::BlockLatticeView3D
swap	dataFields2D.hh	/^void ScalarField2D<T>::swap(ScalarField2D<T>& rhs) {$/;"	f	class:olb::ScalarField2D
swap	dataFields2D.hh	/^void TensorField2D<T,nDim>::swap(TensorField2D<T,nDim>& rhs) {$/;"	f	class:olb::TensorField2D
swap	dataFields3D.hh	/^void ScalarField3D<T>::swap(ScalarField3D<T>& rhs) {$/;"	f	class:olb::ScalarField3D
swap	dataFields3D.hh	/^void TensorField3D<T,nDim>::swap(TensorField3D<T,nDim>& rhs) {$/;"	f	class:olb::TensorField3D
swapAndStream2D	lbHelpers.h	/^    static void swapAndStream2D(Cell<T,Lattice> **grid, int iX, int iY)$/;"	f	struct:olb::lbHelpers
swapAndStream2D	lbHelpers.h	/^    static void swapAndStream2D(Cell<T,Lattice> **grid, int iX, int iY)$/;"	f	struct:olb::lbLatticeHelpers
swapAndStream2D	lbHelpers2D.h	/^    static void swapAndStream2D ($/;"	f	struct:olb::lbLatticeHelpers
swapAndStream3D	lbHelpers.h	/^    static void swapAndStream3D(Cell<T,Lattice> ***grid, int iX, int iY, int iZ)$/;"	f	struct:olb::lbHelpers
swapAndStream3D	lbHelpers.h	/^    static void swapAndStream3D(Cell<T,Lattice> ***grid,$/;"	f	struct:olb::lbLatticeHelpers
swapAndStream3D	lbHelpers3D.h	/^    static void swapAndStream3D(Cell<T,descriptors::D3Q15Descriptor> ***grid,$/;"	f	struct:olb::lbLatticeHelpers
swapAndStream3D	lbHelpers3D.h	/^    static void swapAndStream3D(Cell<T,descriptors::D3Q19Descriptor> ***grid,$/;"	f	struct:olb::lbLatticeHelpers
swapAndStream3D	lbHelpers3D.h	/^    static void swapAndStream3D(Cell<T,descriptors::ForcedD3Q19Descriptor> ***grid,$/;"	f	struct:olb::lbLatticeHelpers
swapAndStreamCell	lbHelpers2D.h	/^    static void swapAndStreamCell ($/;"	f	struct:olb::lbLatticeHelpers
swapAndStreamCell	lbHelpers3D.h	/^    static void swapAndStreamCell ($/;"	f	struct:olb::lbLatticeHelpers
t	latticeDescriptors.h	/^        static const T t[q];        \/\/\/< lattice weights$/;"	m	struct:olb::descriptors::D2Q9DescriptorBase
t	latticeDescriptors.h	/^        static const T t[q];        \/\/\/< lattice weights$/;"	m	struct:olb::descriptors::D3Q13DescriptorBase
t	latticeDescriptors.h	/^        static const T t[q];        \/\/\/< lattice weights$/;"	m	struct:olb::descriptors::D3Q15DescriptorBase
t	latticeDescriptors.h	/^        static const T t[q];        \/\/\/< lattice weights$/;"	m	struct:olb::descriptors::D3Q19DescriptorBase
t	latticeDescriptors.h	/^        static const T t[q];        \/\/\/< lattice weights$/;"	m	struct:olb::descriptors::D3Q27DescriptorBase
t	latticeDescriptors.hh	/^    const T D2Q9DescriptorBase<T>::t[D2Q9DescriptorBase<T>::q] =$/;"	m	class:olb::descriptors::D2Q9DescriptorBase
t	latticeDescriptors.hh	/^    const T D3Q13DescriptorBase<T>::t[D3Q13DescriptorBase<T>::q] =$/;"	m	class:olb::descriptors::D3Q13DescriptorBase
t	latticeDescriptors.hh	/^    const T D3Q15DescriptorBase<T>::t[D3Q15DescriptorBase<T>::q] =$/;"	m	class:olb::descriptors::D3Q15DescriptorBase
t	latticeDescriptors.hh	/^    const T D3Q19DescriptorBase<T>::t[D3Q19DescriptorBase<T>::q] =$/;"	m	class:olb::descriptors::D3Q19DescriptorBase
t	latticeDescriptors.hh	/^    const T D3Q27DescriptorBase<T>::t[D3Q27DescriptorBase<T>::q] =$/;"	m	class:olb::descriptors::D3Q27DescriptorBase
takeElement	dataReductions.hh	/^void AverageReduction<T>::takeElement(T const& element) {$/;"	f	class:olb::AverageReduction
takeElement	dataReductions.hh	/^void MaxReduction<T>::takeElement(T const& element) {$/;"	f	class:olb::MaxReduction
takeElement	dataReductions.hh	/^void MinReduction<T>::takeElement(T const& element) {$/;"	f	class:olb::MinReduction
takeElement	dataReductions.hh	/^void NormSqrReduction<T>::takeElement(T const& element) {$/;"	f	class:olb::NormSqrReduction
takesStat	cell.h	/^    bool                 takesStat; \/\/\/< is statistics taken?$/;"	m	class:olb::Cell
takesStatistics	cell.h	/^    bool takesStatistics() const {$/;"	f	class:olb::Cell
tensorField	dataFields2D.h	/^    TensorField2D<T,nDim> const& tensorField;$/;"	m	class:olb::SequentialTensorFieldSerializer2D
tensorField	dataFields2D.h	/^    TensorField2D<T,nDim>& tensorField;$/;"	m	class:olb::SequentialTensorFieldUnSerializer2D
tensorField	dataFields3D.h	/^    TensorField3D<T,nDim> const& tensorField;$/;"	m	class:olb::SequentialTensorFieldSerializer3D
tensorField	dataFields3D.h	/^    TensorField3D<T,nDim>& tensorField;$/;"	m	class:olb::SequentialTensorFieldUnSerializer3D
tensorIndices2D	util.h	/^    namespace tensorIndices2D {$/;"	n	namespace:olb::util
tensorIndices3D	util.h	/^    namespace tensorIndices3D {$/;"	n	namespace:olb::util
testLaplace	simulationSetup2D.hh	/^void testLaplace(BlockLatticeView2D<T,Lattice> lattice, T epsilon, T lambda) {$/;"	f	namespace:olb
testLiShi	simulationSetup2D.hh	/^void testLiShi(BlockLattice2D<T,Lattice>& lattice, T epsilon, T lambda)$/;"	f	namespace:olb
u	momentaOnBoundaries.h	/^    T rho, u[Lattice<T>::d];$/;"	m	class:olb::EquilibriumBM
u	momentaOnBoundaries.h	/^    T u[Lattice<T>::d];   \/\/\/< value of the velocity on the boundary$/;"	m	class:olb::VelocityBM
unSerialize	cell.hh	/^void Cell<T,Lattice>::unSerialize(T const* data) {$/;"	f	class:olb::Cell
unSerializer	blockLattice2D.h	/^    mutable BlockLatticeUnSerializer2D<T,Lattice>* unSerializer;$/;"	m	class:olb::BlockLattice2D
unSerializer	blockLattice3D.h	/^    mutable BlockLatticeUnSerializer3D<T,Lattice>* unSerializer;$/;"	m	class:olb::BlockLattice3D
unSerializer	dataFields2D.h	/^    mutable SequentialScalarFieldUnSerializer2D<T>* unSerializer;$/;"	m	class:olb::ScalarField2D
unSerializer	dataFields2D.h	/^    mutable SequentialTensorFieldUnSerializer2D<T,nDim>* unSerializer;$/;"	m	class:olb::TensorField2D
unSerializer	dataFields3D.h	/^    mutable SequentialScalarFieldUnSerializer3D<T>* unSerializer;$/;"	m	class:olb::ScalarField3D
unSerializer	dataFields3D.h	/^    mutable SequentialTensorFieldUnSerializer3D<T,nDim>* unSerializer;$/;"	m	class:olb::TensorField3D
util	util.h	/^namespace util {$/;"	n	namespace:olb
values	momentaOnBoundaries.h	/^    T values[Lattice<T>::d];$/;"	m	class:olb::PressureBM
velField	dataAnalysis2D.h	/^    TensorField2D<T,2> velField;$/;"	m	struct:olb::AnalysisFieldsImpl2D
velField	dataAnalysis2D.h	/^    TensorField2D<T,2>& velField;$/;"	m	struct:olb::AnalysisFields2D
velField	dataAnalysis3D.h	/^    TensorField3D<T,3> velField;$/;"	m	struct:olb::AnalysisFieldsImpl3D
velField	dataAnalysis3D.h	/^    TensorField3D<T,3>& velField;$/;"	m	struct:olb::AnalysisFields3D
velFieldComputed	analysisFlags.h	/^    bool velFieldComputed;$/;"	m	struct:olb::AnalysisFlags2D
velFieldComputed	analysisFlags.h	/^    bool velFieldComputed;$/;"	m	struct:olb::AnalysisFlags3D
velNormField	dataAnalysis2D.h	/^    ScalarField2D<T>   velNormField;$/;"	m	struct:olb::AnalysisFieldsImpl2D
velNormField	dataAnalysis2D.h	/^    ScalarField2D<T>&   velNormField;$/;"	m	struct:olb::AnalysisFields2D
velNormField	dataAnalysis3D.h	/^    ScalarField3D<T>   velNormField;$/;"	m	struct:olb::AnalysisFieldsImpl3D
velNormField	dataAnalysis3D.h	/^    ScalarField3D<T>&   velNormField;$/;"	m	struct:olb::AnalysisFields3D
velNormFieldComputed	analysisFlags.h	/^    bool velNormFieldComputed;$/;"	m	struct:olb::AnalysisFlags2D
velNormFieldComputed	analysisFlags.h	/^    bool velNormFieldComputed;$/;"	m	struct:olb::AnalysisFlags3D
vortField	dataAnalysis2D.h	/^    ScalarField2D<T>   vortField;$/;"	m	struct:olb::AnalysisFieldsImpl2D
vortField	dataAnalysis2D.h	/^    ScalarField2D<T>&   vortField;$/;"	m	struct:olb::AnalysisFields2D
vortField	dataAnalysis3D.h	/^    TensorField3D<T,3> vortField;$/;"	m	struct:olb::AnalysisFieldsImpl3D
vortField	dataAnalysis3D.h	/^    TensorField3D<T,3>& vortField;$/;"	m	struct:olb::AnalysisFields3D
vortFieldComputed	analysisFlags.h	/^    bool vortFieldComputed;$/;"	m	struct:olb::AnalysisFlags2D
vortFieldComputed	analysisFlags.h	/^    bool vortFieldComputed;$/;"	m	struct:olb::AnalysisFlags3D
vortNormField	dataAnalysis3D.h	/^    ScalarField3D<T>   vortNormField;$/;"	m	struct:olb::AnalysisFieldsImpl3D
vortNormField	dataAnalysis3D.h	/^    ScalarField3D<T>&   vortNormField;$/;"	m	struct:olb::AnalysisFields3D
vortNormFieldComputed	analysisFlags.h	/^    bool vortNormFieldComputed;$/;"	m	struct:olb::AnalysisFlags3D
vtkOutDir	singleton.h	/^    std::string vtkOutDir;$/;"	m	class:olb::singleton::Directories
weight	dataReductions.h	/^    T weight;$/;"	m	class:olb::AverageReduction
weight	dataReductions.h	/^    T weight;$/;"	m	class:olb::NormSqrReduction
writeLogFile	units.h	/^void writeLogFile(LBunits<T> const& converter,$/;"	f	namespace:olb
x	boundaryPostProcessors2D.h	/^    int x, y;$/;"	m	class:olb::OuterVelocityCornerProcessor2D
x	boundaryPostProcessors3D.h	/^    int x,y,z;$/;"	m	class:olb::OuterVelocityCornerProcessor3D
x0	blockLattice2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::BlockLatticeSerializer2D
x0	blockLattice2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::BlockLatticeUnSerializer2D
x0	blockLattice3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::BlockLatticeSerializer3D
x0	blockLattice3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::BlockLatticeUnSerializer3D
x0	blockLatticeView2D.h	/^    int                          x0, y0;$/;"	m	class:olb::BlockLatticeView2D
x0	blockLatticeView3D.h	/^    int                          x0, y0, z0;$/;"	m	class:olb::BlockLatticeView3D
x0	boundaryPostProcessors2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::StraightFdBoundaryProcessor2D
x0	boundaryPostProcessors3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::OuterVelocityEdgeProcessor3D
x0	boundaryPostProcessors3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::PlaneFdBoundaryProcessor3D
x0	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialScalarFieldSerializer2D
x0	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialScalarFieldUnSerializer2D
x0	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialTensorFieldSerializer2D
x0	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialTensorFieldUnSerializer2D
x0	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialScalarFieldSerializer3D
x0	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialScalarFieldUnSerializer3D
x0	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialTensorFieldSerializer3D
x0	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialTensorFieldUnSerializer3D
x0	postProcessing.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::LatticeCouplingGenerator3D
x0	postProcessing.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::PostProcessorGenerator3D
x0	postProcessing.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::LatticeCouplingGenerator2D
x0	postProcessing.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::PostProcessorGenerator2D
x1	blockLattice2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::BlockLatticeSerializer2D
x1	blockLattice2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::BlockLatticeUnSerializer2D
x1	blockLattice3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::BlockLatticeSerializer3D
x1	blockLattice3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::BlockLatticeUnSerializer3D
x1	boundaryPostProcessors2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::StraightFdBoundaryProcessor2D
x1	boundaryPostProcessors3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::OuterVelocityEdgeProcessor3D
x1	boundaryPostProcessors3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::PlaneFdBoundaryProcessor3D
x1	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialScalarFieldSerializer2D
x1	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialScalarFieldUnSerializer2D
x1	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialTensorFieldSerializer2D
x1	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialTensorFieldUnSerializer2D
x1	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialScalarFieldSerializer3D
x1	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialScalarFieldUnSerializer3D
x1	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialTensorFieldSerializer3D
x1	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialTensorFieldUnSerializer3D
x1	postProcessing.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::LatticeCouplingGenerator3D
x1	postProcessing.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::PostProcessorGenerator3D
x1	postProcessing.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::LatticeCouplingGenerator2D
x1	postProcessing.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::PostProcessorGenerator2D
xMomenta	momentaOnBoundaries2D.h	/^    RegularizedVelocityBM<T,Lattice,0,normalX> xMomenta;$/;"	m	class:olb::InnerCornerVelBM2D
xMomenta	momentaOnBoundaries3D.h	/^    RegularizedVelocityBM<T,Lattice,0,normalX> xMomenta;$/;"	m	class:olb::InnerCornerVelBM3D
xSlice	dataFields3D.h	/^    mutable ScalarField2D<T> xSlice;$/;"	m	class:olb::ScalarField3D
xSlice	dataFields3D.h	/^    mutable TensorField2D<T,nDim> xSlice;$/;"	m	class:olb::TensorField3D
xx	util.h	/^        enum { xx=0, xy=1, xz=2, yy=3, yz=4, zz=5 };$/;"	e	enum:olb::util::tensorIndices3D::__anon11
xx	util.h	/^        enum { xx=0, xy=1, yy=2 };$/;"	e	enum:olb::util::tensorIndices2D::__anon10
xy	util.h	/^        enum { xx=0, xy=1, xz=2, yy=3, yz=4, zz=5 };$/;"	e	enum:olb::util::tensorIndices3D::__anon11
xy	util.h	/^        enum { xx=0, xy=1, yy=2 };$/;"	e	enum:olb::util::tensorIndices2D::__anon10
xz	util.h	/^        enum { xx=0, xy=1, xz=2, yy=3, yz=4, zz=5 };$/;"	e	enum:olb::util::tensorIndices3D::__anon11
y	boundaryPostProcessors2D.h	/^    int x, y;$/;"	m	class:olb::OuterVelocityCornerProcessor2D
y	boundaryPostProcessors3D.h	/^    int x,y,z;$/;"	m	class:olb::OuterVelocityCornerProcessor3D
y0	blockLattice2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::BlockLatticeSerializer2D
y0	blockLattice2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::BlockLatticeUnSerializer2D
y0	blockLattice3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::BlockLatticeSerializer3D
y0	blockLattice3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::BlockLatticeUnSerializer3D
y0	blockLatticeView2D.h	/^    int                          x0, y0;$/;"	m	class:olb::BlockLatticeView2D
y0	blockLatticeView3D.h	/^    int                          x0, y0, z0;$/;"	m	class:olb::BlockLatticeView3D
y0	boundaryPostProcessors2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::StraightFdBoundaryProcessor2D
y0	boundaryPostProcessors3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::OuterVelocityEdgeProcessor3D
y0	boundaryPostProcessors3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::PlaneFdBoundaryProcessor3D
y0	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialScalarFieldSerializer2D
y0	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialScalarFieldUnSerializer2D
y0	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialTensorFieldSerializer2D
y0	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialTensorFieldUnSerializer2D
y0	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialScalarFieldSerializer3D
y0	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialScalarFieldUnSerializer3D
y0	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialTensorFieldSerializer3D
y0	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialTensorFieldUnSerializer3D
y0	postProcessing.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::LatticeCouplingGenerator3D
y0	postProcessing.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::PostProcessorGenerator3D
y0	postProcessing.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::LatticeCouplingGenerator2D
y0	postProcessing.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::PostProcessorGenerator2D
y1	blockLattice2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::BlockLatticeSerializer2D
y1	blockLattice2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::BlockLatticeUnSerializer2D
y1	blockLattice3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::BlockLatticeSerializer3D
y1	blockLattice3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::BlockLatticeUnSerializer3D
y1	boundaryPostProcessors2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::StraightFdBoundaryProcessor2D
y1	boundaryPostProcessors3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::OuterVelocityEdgeProcessor3D
y1	boundaryPostProcessors3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::PlaneFdBoundaryProcessor3D
y1	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialScalarFieldSerializer2D
y1	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialScalarFieldUnSerializer2D
y1	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialTensorFieldSerializer2D
y1	dataFields2D.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::SequentialTensorFieldUnSerializer2D
y1	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialScalarFieldSerializer3D
y1	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialScalarFieldUnSerializer3D
y1	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialTensorFieldSerializer3D
y1	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialTensorFieldUnSerializer3D
y1	postProcessing.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::LatticeCouplingGenerator3D
y1	postProcessing.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::PostProcessorGenerator3D
y1	postProcessing.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::LatticeCouplingGenerator2D
y1	postProcessing.h	/^    int x0, x1, y0, y1;$/;"	m	class:olb::PostProcessorGenerator2D
yMomenta	momentaOnBoundaries2D.h	/^    RegularizedVelocityBM<T,Lattice,1,normalY> yMomenta;$/;"	m	class:olb::InnerCornerVelBM2D
yMomenta	momentaOnBoundaries3D.h	/^    RegularizedVelocityBM<T,Lattice,1,normalY> yMomenta;$/;"	m	class:olb::InnerCornerVelBM3D
ySlice	dataFields3D.h	/^    mutable ScalarField2D<T> ySlice;$/;"	m	class:olb::ScalarField3D
ySlice	dataFields3D.h	/^    mutable TensorField2D<T,nDim> ySlice;$/;"	m	class:olb::TensorField3D
yy	util.h	/^        enum { xx=0, xy=1, xz=2, yy=3, yz=4, zz=5 };$/;"	e	enum:olb::util::tensorIndices3D::__anon11
yy	util.h	/^        enum { xx=0, xy=1, yy=2 };$/;"	e	enum:olb::util::tensorIndices2D::__anon10
yz	util.h	/^        enum { xx=0, xy=1, xz=2, yy=3, yz=4, zz=5 };$/;"	e	enum:olb::util::tensorIndices3D::__anon11
z	boundaryPostProcessors3D.h	/^    int x,y,z;$/;"	m	class:olb::OuterVelocityCornerProcessor3D
z0	blockLattice3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::BlockLatticeSerializer3D
z0	blockLattice3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::BlockLatticeUnSerializer3D
z0	blockLatticeView3D.h	/^    int                          x0, y0, z0;$/;"	m	class:olb::BlockLatticeView3D
z0	boundaryPostProcessors3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::OuterVelocityEdgeProcessor3D
z0	boundaryPostProcessors3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::PlaneFdBoundaryProcessor3D
z0	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialScalarFieldSerializer3D
z0	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialScalarFieldUnSerializer3D
z0	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialTensorFieldSerializer3D
z0	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialTensorFieldUnSerializer3D
z0	postProcessing.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::LatticeCouplingGenerator3D
z0	postProcessing.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::PostProcessorGenerator3D
z1	blockLattice3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::BlockLatticeSerializer3D
z1	blockLattice3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::BlockLatticeUnSerializer3D
z1	boundaryPostProcessors3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::OuterVelocityEdgeProcessor3D
z1	boundaryPostProcessors3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::PlaneFdBoundaryProcessor3D
z1	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialScalarFieldSerializer3D
z1	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialScalarFieldUnSerializer3D
z1	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialTensorFieldSerializer3D
z1	dataFields3D.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::SequentialTensorFieldUnSerializer3D
z1	postProcessing.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::LatticeCouplingGenerator3D
z1	postProcessing.h	/^    int x0, x1, y0, y1, z0, z1;$/;"	m	class:olb::PostProcessorGenerator3D
zMomenta	momentaOnBoundaries3D.h	/^    RegularizedVelocityBM<T,Lattice,2,normalZ> zMomenta;$/;"	m	class:olb::InnerCornerVelBM3D
zSlice	dataFields3D.h	/^    mutable ScalarField2D<T> zSlice;$/;"	m	class:olb::ScalarField3D
zSlice	dataFields3D.h	/^    mutable TensorField2D<T,nDim> zSlice;$/;"	m	class:olb::TensorField3D
zz	util.h	/^        enum { xx=0, xy=1, xz=2, yy=3, yz=4, zz=5 };$/;"	e	enum:olb::util::tensorIndices3D::__anon11
~BlockLattice2D	blockLattice2D.hh	/^BlockLattice2D<T,Lattice>::~BlockLattice2D()$/;"	f	class:olb::BlockLattice2D
~BlockLattice3D	blockLattice3D.hh	/^BlockLattice3D<T,Lattice>::~BlockLattice3D()$/;"	f	class:olb::BlockLattice3D
~BlockLatticeView2D	blockLatticeView2D.hh	/^BlockLatticeView2D<T,Lattice>::~BlockLatticeView2D()$/;"	f	class:olb::BlockLatticeView2D
~BlockLatticeView3D	blockLatticeView3D.hh	/^BlockLatticeView3D<T,Lattice>::~BlockLatticeView3D()$/;"	f	class:olb::BlockLatticeView3D
~BlockStructure2D	blockStructure2D.h	/^    virtual ~BlockStructure2D() { }$/;"	f	class:olb::BlockStructure2D
~BlockStructure3D	blockStructure3D.h	/^    virtual ~BlockStructure3D() { }$/;"	f	class:olb::BlockStructure3D
~BoundaryConditionInstantiator2D	boundaryInstantiator2D.h	/^BoundaryConditionInstantiator2D<T,Lattice,BoundaryManager>::~BoundaryConditionInstantiator2D() {$/;"	f	class:olb::BoundaryConditionInstantiator2D
~BoundaryConditionInstantiator3D	boundaryInstantiator3D.h	/^BoundaryConditionInstantiator3D<T,Lattice,BoundaryManager>::~BoundaryConditionInstantiator3D() {$/;"	f	class:olb::BoundaryConditionInstantiator3D
~DataAnalysis2D	dataAnalysis2D.hh	/^DataAnalysis2D<T,Lattice>::~DataAnalysis2D() { }$/;"	f	class:olb::DataAnalysis2D
~DataAnalysis3D	dataAnalysis3D.hh	/^DataAnalysis3D<T,Lattice>::~DataAnalysis3D() { }$/;"	f	class:olb::DataAnalysis3D
~DataAnalysisBase2D	dataAnalysisBase2D.h	/^    virtual ~DataAnalysisBase2D() { }$/;"	f	class:olb::DataAnalysisBase2D
~DataAnalysisBase3D	dataAnalysisBase3D.h	/^    virtual ~DataAnalysisBase3D() { }$/;"	f	class:olb::DataAnalysisBase3D
~DataReduction	dataReductions.h	/^    virtual ~DataReduction() { }$/;"	f	class:olb::DataReduction
~DataSerializer	serializer.h	/^    virtual ~DataSerializer() { }$/;"	f	struct:olb::DataSerializer
~DataUnSerializer	serializer.h	/^    virtual ~DataUnSerializer() { }$/;"	f	struct:olb::DataUnSerializer
~Directories	singleton.h	/^    ~Directories() { }$/;"	f	class:olb::singleton::Directories
~Dynamics	dynamics.h	/^    virtual ~Dynamics() { }$/;"	f	struct:olb::Dynamics
~LatticeCouplingGenerator2D	postProcessing.h	/^    virtual ~LatticeCouplingGenerator2D() { }$/;"	f	class:olb::LatticeCouplingGenerator2D
~LatticeCouplingGenerator3D	postProcessing.h	/^    virtual ~LatticeCouplingGenerator3D() { }$/;"	f	class:olb::LatticeCouplingGenerator3D
~LatticeStatistics	postProcessing.hh	/^LatticeStatistics<T>::~LatticeStatistics() {$/;"	f	class:olb::LatticeStatistics
~Momenta	dynamics.h	/^    virtual ~Momenta() { }$/;"	f	struct:olb::Momenta
~OnLatticeBoundaryCondition2D	boundaryCondition2D.h	/^    virtual ~OnLatticeBoundaryCondition2D() { }$/;"	f	class:olb::OnLatticeBoundaryCondition2D
~OnLatticeBoundaryCondition3D	boundaryCondition3D.h	/^    virtual ~OnLatticeBoundaryCondition3D() { }$/;"	f	class:olb::OnLatticeBoundaryCondition3D
~PostProcessor2D	postProcessing.h	/^    virtual ~PostProcessor2D() { }$/;"	f	struct:olb::PostProcessor2D
~PostProcessor3D	postProcessing.h	/^    virtual ~PostProcessor3D() { }$/;"	f	struct:olb::PostProcessor3D
~PostProcessorGenerator2D	postProcessing.h	/^    virtual ~PostProcessorGenerator2D() { }$/;"	f	class:olb::PostProcessorGenerator2D
~PostProcessorGenerator3D	postProcessing.h	/^    virtual ~PostProcessorGenerator3D() { }$/;"	f	class:olb::PostProcessorGenerator3D
~Reductor	postProcessing.h	/^    virtual ~Reductor() { } $/;"	f	struct:olb::Reductor
~ScalarField2D	dataFields2D.hh	/^ScalarField2D<T>::~ScalarField2D() {$/;"	f	class:olb::ScalarField2D
~ScalarField3D	dataFields3D.hh	/^ScalarField3D<T>::~ScalarField3D() {$/;"	f	class:olb::ScalarField3D
~ScalarFieldBase2D	dataFieldBase2D.h	/^    virtual ~ScalarFieldBase2D() { }$/;"	f	class:olb::ScalarFieldBase2D
~ScalarFieldBase3D	dataFieldBase3D.h	/^    virtual ~ScalarFieldBase3D() { }$/;"	f	class:olb::ScalarFieldBase3D
~Serializable	serializer.h	/^    virtual ~Serializable() { };$/;"	f	struct:olb::Serializable
~SpatiallyExtendedObject2D	spatiallyExtendedObject2D.h	/^    virtual ~SpatiallyExtendedObject2D() { }$/;"	f	struct:olb::SpatiallyExtendedObject2D
~SpatiallyExtendedObject3D	spatiallyExtendedObject3D.h	/^    virtual ~SpatiallyExtendedObject3D() { }$/;"	f	struct:olb::SpatiallyExtendedObject3D
~TensorField2D	dataFields2D.hh	/^TensorField2D<T,nDim>::~TensorField2D() {$/;"	f	class:olb::TensorField2D
~TensorField3D	dataFields3D.hh	/^TensorField3D<T,nDim>::~TensorField3D() {$/;"	f	class:olb::TensorField3D
~TensorFieldBase2D	dataFieldBase2D.h	/^    virtual ~TensorFieldBase2D() { }$/;"	f	class:olb::TensorFieldBase2D
~TensorFieldBase3D	dataFieldBase3D.h	/^    virtual ~TensorFieldBase3D() { }$/;"	f	class:olb::TensorFieldBase3D
~WriteCellFunctional	cell.h	/^    virtual ~WriteCellFunctional() { };$/;"	f	struct:olb::WriteCellFunctional
